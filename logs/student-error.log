2025-09-08T20:05:58: ❌ [Auth API Request Error] AxiosError {
2025-09-08T20:05:58:   stack: "Error\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/core/AxiosError.js:92:14)\n    at handleRequestError (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/adapters/http.js:620:25)\n    at emitError (node:events:43:23)\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/follow-redirects/index.js:49:24)\n    at emitError (node:events:43:23)\n    at <anonymous> (node:_http_client:251:22)\n    at processTicksAndRejections (native:7:39)",
2025-09-08T20:05:58:   sourceURL: "node:_http_client",
2025-09-08T20:05:58:   column: 28,
2025-09-08T20:05:58:   line: 247,
2025-09-08T20:05:58:   originalColumn: 18,
2025-09-08T20:05:58:   originalLine: 62,
2025-09-08T20:05:58:   code: "ECONNREFUSED",
2025-09-08T20:05:58:   message: "ECONNREFUSED",
2025-09-08T20:05:58:   name: "Error",
2025-09-08T20:05:58:   config: {
2025-09-08T20:05:58:     transitional: {
2025-09-08T20:05:58:       silentJSONParsing: true,
2025-09-08T20:05:58:       forcedJSONParsing: true,
2025-09-08T20:05:58:       clarifyTimeoutError: false,
2025-09-08T20:05:58:     },
2025-09-08T20:05:58:     adapter: [ "xhr", "http", "fetch" ],
2025-09-08T20:05:58:     transformRequest: [
2025-09-08T20:05:58:       [Function: transformRequest]
2025-09-08T20:05:58:     ],
2025-09-08T20:05:58:     transformResponse: [
2025-09-08T20:05:58:       [Function: transformResponse]
2025-09-08T20:05:58:     ],
2025-09-08T20:05:58:     timeout: 10000,
2025-09-08T20:05:58:     xsrfCookieName: "XSRF-TOKEN",
2025-09-08T20:05:58:     xsrfHeaderName: "X-XSRF-TOKEN",
2025-09-08T20:05:58:     maxContentLength: -1,
2025-09-08T20:05:58:     maxBodyLength: -1,
2025-09-08T20:05:58:     env: {
2025-09-08T20:05:58:       FormData: [Function: FormData],
2025-09-08T20:05:58:       Blob: [class Blob],
2025-09-08T20:05:58:     },
2025-09-08T20:05:58:     validateStatus: [Function: validateStatus],
2025-09-08T20:05:58:     headers: {
2025-09-08T20:05:58:       Accept: "application/json",
2025-09-08T20:05:58:       "Content-Type": "application/json",
2025-09-08T20:05:58:       "User-Agent": "axios/1.11.0",
2025-09-08T20:05:58:       "Content-Length": "85",
2025-09-08T20:05:58:       "Accept-Encoding": "gzip, compress, deflate, br",
2025-09-08T20:05:58:       set: [Getter/Setter],
2025-09-08T20:05:58:       get: [Getter/Setter],
2025-09-08T20:05:58:       has: [Getter/Setter],
2025-09-08T20:05:58:       delete: [Getter/Setter],
2025-09-08T20:05:58:       clear: [Getter/Setter],
2025-09-08T20:05:58:       normalize: [Getter/Setter],
2025-09-08T20:05:58:       concat: [Getter/Setter],
2025-09-08T20:05:58:       toJSON: [Getter/Setter],
2025-09-08T20:05:58:       toString: [Getter/Setter],
2025-09-08T20:05:58:       getSetCookie: [Getter/Setter],
2025-09-08T20:05:58:       getContentType: [Getter/Setter],
2025-09-08T20:05:58:       setContentType: [Getter/Setter],
2025-09-08T20:05:58:       hasContentType: [Getter/Setter],
2025-09-08T20:05:58:       getContentLength: [Getter/Setter],
2025-09-08T20:05:58:       setContentLength: [Getter/Setter],
2025-09-08T20:05:58:       hasContentLength: [Getter/Setter],
2025-09-08T20:05:58:       getAccept: [Getter/Setter],
2025-09-08T20:05:58:       setAccept: [Getter/Setter],
2025-09-08T20:05:58:       hasAccept: [Getter/Setter],
2025-09-08T20:05:58:       getAcceptEncoding: [Getter/Setter],
2025-09-08T20:05:58:       setAcceptEncoding: [Getter/Setter],
2025-09-08T20:05:58:       hasAcceptEncoding: [Getter/Setter],
2025-09-08T20:05:58:       getUserAgent: [Getter/Setter],
2025-09-08T20:05:58:       setUserAgent: [Getter/Setter],
2025-09-08T20:05:58:       hasUserAgent: [Getter/Setter],
2025-09-08T20:05:58:       getAuthorization: [Getter/Setter],
2025-09-08T20:05:58:       setAuthorization: [Getter/Setter],
2025-09-08T20:05:58:       hasAuthorization: [Getter/Setter],
2025-09-08T20:05:58:       [Symbol(Symbol.iterator)]: [Function],
2025-09-08T20:05:58:     },
2025-09-08T20:05:58:     baseURL: "http://localhost:3055",
2025-09-08T20:05:58:     withCredentials: false,
2025-09-08T20:05:58:     method: "post",
2025-09-08T20:05:58:     url: "/student/recent-submissions",
2025-09-08T20:05:58:     data: "{\"name\":\"학생\",\"birthDate\":\"2099-09-15\",\"phone\":\"010-2790-6727\",\"page\":0,\"size\":10}",
2025-09-08T20:05:58:     allowAbsoluteUrls: true,
2025-09-08T20:05:58:   },
2025-09-08T20:05:58:   request: Writable {
2025-09-08T20:05:58:     _events: {
2025-09-08T20:05:58:       error: [
2025-09-08T20:05:58:         [Function: handleRequestError]
2025-09-08T20:05:58:       ],
2025-09-08T20:05:58:       prefinish: undefined,
2025-09-08T20:05:58:       finish: undefined,
2025-09-08T20:05:58:       drain: undefined,
2025-09-08T20:05:58:       response: [
2025-09-08T20:05:58:         [Function: handleResponse]
2025-09-08T20:05:58:       ],
2025-09-08T20:05:58:       socket: [
2025-09-08T20:05:58:         [Function: handleRequestSocket], [Function: destroyOnTimeout]
2025-09-08T20:05:58:       ],
2025-09-08T20:05:58:     },
2025-09-08T20:05:58:     _writableState: {
2025-09-08T20:05:58:       [Symbol(kState)]: 17580812,
2025-09-08T20:05:58:       highWaterMark: 65536,
2025-09-08T20:05:58:       length: 0,
2025-09-08T20:05:58:       corked: 0,
2025-09-08T20:05:58:       onwrite: [Function: onwrite],
2025-09-08T20:05:58:       writelen: 0,
2025-09-08T20:05:58:       [Symbol(kBufferedValue)]: null,
2025-09-08T20:05:58:       bufferedIndex: 0,
2025-09-08T20:05:58:       pendingcb: 0,
2025-09-08T20:05:58:       objectMode: [Getter/Setter],
2025-09-08T20:05:58:       finalCalled: [Getter/Setter],
2025-09-08T20:05:58:       needDrain: [Getter/Setter],
2025-09-08T20:05:58:       ending: [Getter/Setter],
2025-09-08T20:05:58:       ended: [Getter/Setter],
2025-09-08T20:05:58:       finished: [Getter/Setter],
2025-09-08T20:05:58:       destroyed: [Getter/Setter],
2025-09-08T20:05:58:       decodeStrings: [Getter/Setter],
2025-09-08T20:05:58:       writing: [Getter/Setter],
2025-09-08T20:05:58:       sync: [Getter/Setter],
2025-09-08T20:05:58:       bufferProcessing: [Getter/Setter],
2025-09-08T20:05:58:       constructed: [Getter/Setter],
2025-09-08T20:05:58:       prefinished: [Getter/Setter],
2025-09-08T20:05:58:       errorEmitted: [Getter/Setter],
2025-09-08T20:05:58:       emitClose: [Getter/Setter],
2025-09-08T20:05:58:       autoDestroy: [Getter/Setter],
2025-09-08T20:05:58:       closed: [Getter/Setter],
2025-09-08T20:05:58:       closeEmitted: [Getter/Setter],
2025-09-08T20:05:58:       allBuffers: [Getter/Setter],
2025-09-08T20:05:58:       allNoop: [Getter/Setter],
2025-09-08T20:05:58:       errored: [Getter/Setter],
2025-09-08T20:05:58:       writable: [Getter/Setter],
2025-09-08T20:05:58:       defaultEncoding: [Getter/Setter],
2025-09-08T20:05:58:       writecb: [Getter/Setter],
2025-09-08T20:05:58:       afterWriteTickInfo: [Getter/Setter],
2025-09-08T20:05:58:       buffered: [Getter/Setter],
2025-09-08T20:05:58:       getBuffer: [Function: getBuffer],
2025-09-08T20:05:58:       bufferedRequestCount: [Getter],
2025-09-08T20:05:58:       [Symbol(kOnConstructed)]: [Function: onConstructed],
2025-09-08T20:05:58:     },
2025-09-08T20:05:58:     _maxListeners: undefined,
2025-09-08T20:05:58:     [Symbol(kCapture)]: false,
2025-09-08T20:05:58:     _options: {
2025-09-08T20:05:58:       maxRedirects: 21,
2025-09-08T20:05:58:       maxBodyLength: Infinity,
2025-09-08T20:05:58:       protocol: "http:",
2025-09-08T20:05:58:       path: "/student/recent-submissions",
2025-09-08T20:05:58:       method: "POST",
2025-09-08T20:05:58:       headers: [Object ...],
2025-09-08T20:05:58:       agents: [Object ...],
2025-09-08T20:05:58:       auth: undefined,
2025-09-08T20:05:58:       family: undefined,
2025-09-08T20:05:58:       beforeRedirect: [Function: dispatchBeforeRedirect],
2025-09-08T20:05:58:       beforeRedirects: [Object ...],
2025-09-08T20:05:58:       hostname: "localhost",
2025-09-08T20:05:58:       port: "3055",
2025-09-08T20:05:58:       agent: undefined,
2025-09-08T20:05:58:       nativeProtocols: [Object ...],
2025-09-08T20:05:58:       pathname: "/student/recent-submissions",
2025-09-08T20:05:58:     },
2025-09-08T20:05:58:     _ended: true,
2025-09-08T20:05:58:     _ending: true,
2025-09-08T20:05:58:     _redirectCount: 0,
2025-09-08T20:05:58:     _redirects: [],
2025-09-08T20:05:58:     _requestBodyLength: 85,
2025-09-08T20:05:58:     _requestBodyBuffers: [
2025-09-08T20:05:58:       [Object ...]
2025-09-08T20:05:58:     ],
2025-09-08T20:05:58:     _eventsCount: NaN,
2025-09-08T20:05:58:     _onNativeResponse: [Function],
2025-09-08T20:05:58:     _currentRequest: ClientRequest {
2025-09-08T20:05:58:       write: [Function],
2025-09-08T20:05:58:       end: [Function],
2025-09-08T20:05:58:       flushHeaders: [Function],
2025-09-08T20:05:58:       destroy: [Function],
2025-09-08T20:05:58:       _ensureTls: [Function],
2025-09-08T20:05:58:       abort: [Function],
2025-09-08T20:05:58:       [Symbol(tls)]: null,
2025-09-08T20:05:58:       [Symbol(kAbortController)]: [AbortController ...],
2025-09-08T20:05:58:       [Symbol(agent)]: [Object ...],
2025-09-08T20:05:58:       destroyed: false,
2025-09-08T20:05:58:       [Symbol(protocol)]: "http:",
2025-09-08T20:05:58:       [Symbol(port)]: "3055",
2025-09-08T20:05:58:       [Symbol(useDefaultPort)]: false,
2025-09-08T20:05:58:       [Symbol(host)]: "localhost",
2025-09-08T20:05:58:       [Symbol(socketPath)]: undefined,
2025-09-08T20:05:58:       [Symbol(method)]: "POST",
2025-09-08T20:05:58:       maxHeaderSize: undefined,
2025-09-08T20:05:58:       [Symbol(maxHeaderSize)]: undefined,
2025-09-08T20:05:58:       insecureHTTPParser: undefined,
2025-09-08T20:05:58:       joinDuplicateHeaders: undefined,
2025-09-08T20:05:58:       [Symbol(path)]: "/student/recent-submissions",
2025-09-08T20:05:58:       _events: [Object ...],
2025-09-08T20:05:58:       _eventsCount: 7,
2025-09-08T20:05:58:       finished: true,
2025-09-08T20:05:58:       [Symbol(res)]: null,
2025-09-08T20:05:58:       [Symbol(upgradeOrConnect)]: false,
2025-09-08T20:05:58:       [Symbol(parser)]: null,
2025-09-08T20:05:58:       [Symbol(maxHeadersCount)]: null,
2025-09-08T20:05:58:       [Symbol(reusedSocket)]: false,
2025-09-08T20:05:58:       [Symbol(headers)]: Headers [Object ...],
2025-09-08T20:05:58:       [Symbol(options)]: [Object ...],
2025-09-08T20:05:58:       _httpMessage: [Circular],
2025-09-08T20:05:58:       [Symbol(emitState)]: 14,
2025-09-08T20:05:58:       setSocketKeepAlive: [Function],
2025-09-08T20:05:58:       setNoDelay: [Function],
2025-09-08T20:05:58:       [Symbol(kClearTimeout)]: [Function],
2025-09-08T20:05:58:       _redirectable: [Circular],
2025-09-08T20:05:58:       [Symbol(fakeSocket)]: [Object ...],
2025-09-08T20:05:58:       [Symbol(bodyChunks)]: [
2025-09-08T20:05:58:         <Buffer 7b 22 6e 61 6d 65 22 3a 22 ed 95 99 ec 83 9d 22 2c 22 62 69 72 74 68 44 61 74 65 22 3a 22 32 30 39 39 2d 30 39 2d 31 35 22 2c 22 70 68 6f 6e 65 22 3a ... 35 more bytes>
2025-09-08T20:05:58:       ],
2025-09-08T20:05:58:       [Symbol(fetchRequest)]: null,
2025-09-08T20:05:58:       setTimeout: [Function: setTimeout],
2025-09-08T20:05:58:       clearTimeout: [Function: clearTimeout],
2025-09-08T20:05:58:       path: [Getter],
2025-09-08T20:05:58:       port: [Getter],
2025-09-08T20:05:58:       method: [Getter],
2025-09-08T20:05:58:       host: [Getter],
2025-09-08T20:05:58:       protocol: [Getter],
2025-09-08T20:05:58:       agent: [Getter/Setter],
2025-09-08T20:05:58:       aborted: [Getter/Setter],
2025-09-08T20:05:58:       writable: [Getter],
2025-09-08T20:05:58:       _keepAliveTimeout: 0,
2025-09-08T20:05:58:       _defaultKeepAlive: true,
2025-09-08T20:05:58:       shouldKeepAlive: true,
2025-09-08T20:05:58:       _onPendingData: [Function: nop2],
2025-09-08T20:05:58:       outputSize: 0,
2025-09-08T20:05:58:       outputData: [],
2025-09-08T20:05:58:       strictContentLength: false,
2025-09-08T20:05:58:       _removedTE: false,
2025-09-08T20:05:58:       _removedContLen: false,
2025-09-08T20:05:58:       _removedConnection: false,
2025-09-08T20:05:58:       usesChunkedEncodingByDefault: true,
2025-09-08T20:05:58:       _closed: false,
2025-09-08T20:05:58:       _headerNames: [Getter/Setter],
2025-09-08T20:05:58:       appendHeader: [Function: appendHeader],
2025-09-08T20:05:58:       _implicitHeader: [Function: _implicitHeader],
2025-09-08T20:05:58:       getHeader: [Function: getHeader],
2025-09-08T20:05:58:       pipe: [Function: pipe],
2025-09-08T20:05:58:       getHeaderNames: [Function: getHeaderNames],
2025-09-08T20:05:58:       getRawHeaderNames: [Function: getRawHeaderNames],
2025-09-08T20:05:58:       getHeaders: [Function: getHeaders],
2025-09-08T20:05:58:       removeHeader: [Function: removeHeader],
2025-09-08T20:05:58:       setHeader: [Function: setHeader],
2025-09-08T20:05:58:       setHeaders: [Function: setHeaders],
2025-09-08T20:05:58: [Function: hasHeader],
2025-09-08T20:05:58:       headers: [Getter/Setter],
2025-09-08T20:05:58:       addTrailers: [Function: addTrailers],
2025-09-08T20:05:58:       connection: [Getter/Setter],
2025-09-08T20:05:58:       socket: [Getter/Setter],
2025-09-08T20:05:58:       chunkedEncoding: [Getter/Setter],
2025-09-08T20:05:58:       writableObjectMode: [Getter],
2025-09-08T20:05:58:       writableLength: [Getter],
2025-09-08T20:05:58:       writableHighWaterMark: [Getter],
2025-09-08T20:05:58:       writableNeedDrain: [Getter],
2025-09-08T20:05:58:       writableEnded: [Getter],
2025-09-08T20:05:58:       writableFinished: [Getter],
2025-09-08T20:05:58:       _send: [Function: _send],
2025-09-08T20:05:58:       _writeRaw: [Function: _writeRaw],
2025-09-08T20:05:58:       writableCorked: [Getter/Setter],
2025-09-08T20:05:58:       cork: [Function: cork],
2025-09-08T20:05:58:       uncork: [Function: uncork],
2025-09-08T20:05:58:       _headers: [Getter/Setter],
2025-09-08T20:05:58:       eventNames: [Function: eventNames],
2025-09-08T20:05:58:       setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:05:58:       getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:05:58:       emit: [Function: emit],
2025-09-08T20:05:58:       addListener: [Function: addListener],
2025-09-08T20:05:58:       on: [Function: addListener],
2025-09-08T20:05:58:       prependListener: [Function: prependListener],
2025-09-08T20:05:58:       once: [Function: once],
2025-09-08T20:05:58:       prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:05:58:       removeListener: [Function: removeListener],
2025-09-08T20:05:58:       off: [Function: removeListener],
2025-09-08T20:05:58:       removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:05:58:       listeners: [Function: listeners],
2025-09-08T20:05:58:       rawListeners: [Function: rawListeners],
2025-09-08T20:05:58:       listenerCount: [Function: listenerCount],
2025-09-08T20:05:58:       [Symbol(kCapture)]: false,
2025-09-08T20:05:58:     },
2025-09-08T20:05:58:     _currentUrl: "http://localhost:3055/api/student/recent-submissions",
2025-09-08T20:05:58:     _timeout: null,
2025-09-08T20:05:58:     abort: [Function],
2025-09-08T20:05:58:     destroy: [Function],
2025-09-08T20:05:58:     write: [Function],
2025-09-08T20:05:58:     end: [Function],
2025-09-08T20:05:58:     setHeader: [Function],
2025-09-08T20:05:58:     removeHeader: [Function],
2025-09-08T20:05:58:     setTimeout: [Function],
2025-09-08T20:05:58:     flushHeaders: [Function],
2025-09-08T20:05:58:     getHeader: [Function],
2025-09-08T20:05:58:     setNoDelay: [Function],
2025-09-08T20:05:58:     setSocketKeepAlive: [Function],
2025-09-08T20:05:58:     aborted: [Getter],
2025-09-08T20:05:58:     connection: [Getter],
2025-09-08T20:05:58:     socket: [Getter],
2025-09-08T20:05:58:     _sanitizeOptions: [Function],
2025-09-08T20:05:58:     _performRequest: [Function],
2025-09-08T20:05:58:     _processResponse: [Function],
2025-09-08T20:05:58:     pipe: [Function],
2025-09-08T20:05:58:     cork: [Function],
2025-09-08T20:05:58:     uncork: [Function],
2025-09-08T20:05:58:     setDefaultEncoding: [Function: setDefaultEncoding],
2025-09-08T20:05:58:     _write: [Function],
2025-09-08T20:05:58:     _writev: null,
2025-09-08T20:05:58:     closed: [Getter],
2025-09-08T20:05:58:     destroyed: [Getter/Setter],
2025-09-08T20:05:58:     writable: [Getter/Setter],
2025-09-08T20:05:58:     writableFinished: [Getter],
2025-09-08T20:05:58:     writableObjectMode: [Getter],
2025-09-08T20:05:58:     writableBuffer: [Getter],
2025-09-08T20:05:58:     writableEnded: [Getter],
2025-09-08T20:05:58:     writableNeedDrain: [Getter],
2025-09-08T20:05:58:     writableHighWaterMark: [Getter],
2025-09-08T20:05:58:     writableCorked: [Getter],
2025-09-08T20:05:58:     writableLength: [Getter],
2025-09-08T20:05:58:     errored: [Getter],
2025-09-08T20:05:58:     writableAborted: [Getter],
2025-09-08T20:05:58:     _undestroy: [Function: undestroy],
2025-09-08T20:05:58:     _destroy: [Function],
2025-09-08T20:05:58:     [Symbol(nodejs.rejection)]: [Function],
2025-09-08T20:05:58:     [Symbol(Symbol.asyncDispose)]: [Function],
2025-09-08T20:05:58:     eventNames: [Function: eventNames],
2025-09-08T20:05:58:     setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:05:58:     getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:05:58:     emit: [Function: emit],
2025-09-08T20:05:58:     addListener: [Function: addListener],
2025-09-08T20:05:58:     on: [Function: addListener],
2025-09-08T20:05:58:     prependListener: [Function: prependListener],
2025-09-08T20:05:58:     once: [Function: once],
2025-09-08T20:05:58:     prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:05:58:     removeListener: [Function: removeListener],
2025-09-08T20:05:58:     off: [Function: removeListener],
2025-09-08T20:05:58:     removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:05:58:     listeners: [Function: listeners],
2025-09-08T20:05:58:     rawListeners: [Function: rawListeners],
2025-09-08T20:05:58:     listenerCount: [Function: listenerCount],
2025-09-08T20:05:58:   },
2025-09-08T20:05:58:   cause: error: ECONNREFUSED
2025-09-08T20:05:58:  code: "ECONNREFUSED"
2025-09-08T20:05:58: 
2025-09-08T20:05:58:       at node:_http_client:247:28
2025-09-08T20:05:58: ,
2025-09-08T20:05:58:   toJSON: [Function: toJSON],
2025-09-08T20:05:58:   isAxiosError: true,
2025-09-08T20:05:58:   toString: [Function: toString],
2025-09-08T20:05:58: }
2025-09-08T20:05:58: ❌ [Auth API Request Error] AxiosError {
2025-09-08T20:05:58:   stack: "Error\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/core/AxiosError.js:92:14)\n    at handleRequestError (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/adapters/http.js:620:25)\n    at emitError (node:events:43:23)\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/follow-redirects/index.js:49:24)\n    at emitError (node:events:43:23)\n    at <anonymous> (node:_http_client:251:22)\n    at processTicksAndRejections (native:7:39)",
2025-09-08T20:05:58:   sourceURL: "node:_http_client",
2025-09-08T20:05:58:   column: 28,
2025-09-08T20:05:58:   line: 247,
2025-09-08T20:05:58:   originalColumn: 18,
2025-09-08T20:05:58:   originalLine: 62,
2025-09-08T20:05:58:   code: "ECONNREFUSED",
2025-09-08T20:05:58:   message: "ECONNREFUSED",
2025-09-08T20:05:58:   name: "Error",
2025-09-08T20:05:58:   config: {
2025-09-08T20:05:58:     transitional: {
2025-09-08T20:05:58:       silentJSONParsing: true,
2025-09-08T20:05:58:       forcedJSONParsing: true,
2025-09-08T20:05:58:       clarifyTimeoutError: false,
2025-09-08T20:05:58:     },
2025-09-08T20:05:58:     adapter: [ "xhr", "http", "fetch" ],
2025-09-08T20:05:58:     transformRequest: [
2025-09-08T20:05:58:       [Function: transformRequest]
2025-09-08T20:05:58:     ],
2025-09-08T20:05:58:     transformResponse: [
2025-09-08T20:05:58:       [Function: transformResponse]
2025-09-08T20:05:58:     ],
2025-09-08T20:05:58:     timeout: 10000,
2025-09-08T20:05:58:     xsrfCookieName: "XSRF-TOKEN",
2025-09-08T20:05:58:     xsrfHeaderName: "X-XSRF-TOKEN",
2025-09-08T20:05:58:     maxContentLength: -1,
2025-09-08T20:05:58:     maxBodyLength: -1,
2025-09-08T20:05:58:     env: {
2025-09-08T20:05:58:       FormData: [Function: FormData],
2025-09-08T20:05:58:       Blob: [class Blob],
2025-09-08T20:05:58:     },
2025-09-08T20:05:58:     validateStatus: [Function: validateStatus],
2025-09-08T20:05:58:     headers: {
2025-09-08T20:05:58:       Accept: "application/json",
2025-09-08T20:05:58:       "Content-Type": "application/json",
2025-09-08T20:05:58:       "User-Agent": "axios/1.11.0",
2025-09-08T20:05:58:       "Content-Length": "66",
2025-09-08T20:05:58:       "Accept-Encoding": "gzip, compress, deflate, br",
2025-09-08T20:05:58:       set: [Getter/Setter],
2025-09-08T20:05:58:       get: [Getter/Setter],
2025-09-08T20:05:58:       has: [Getter/Setter],
2025-09-08T20:05:58:       delete: [Getter/Setter],
2025-09-08T20:05:58:       clear: [Getter/Setter],
2025-09-08T20:05:58:       normalize: [Getter/Setter],
2025-09-08T20:05:58:       concat: [Getter/Setter],
2025-09-08T20:05:58:       toJSON: [Getter/Setter],
2025-09-08T20:05:58:       toString: [Getter/Setter],
2025-09-08T20:05:58:       getSetCookie: [Getter/Setter],
2025-09-08T20:05:58:       getContentType: [Getter/Setter],
2025-09-08T20:05:58:       setContentType: [Getter/Setter],
2025-09-08T20:05:58:       hasContentType: [Getter/Setter],
2025-09-08T20:05:58:       getContentLength: [Getter/Setter],
2025-09-08T20:05:58:       setContentLength: [Getter/Setter],
2025-09-08T20:05:58:       hasContentLength: [Getter/Setter],
2025-09-08T20:05:58:       getAccept: [Getter/Setter],
2025-09-08T20:05:58:       setAccept: [Getter/Setter],
2025-09-08T20:05:58:       hasAccept: [Getter/Setter],
2025-09-08T20:05:58:       getAcceptEncoding: [Getter/Setter],
2025-09-08T20:05:58:       setAcceptEncoding: [Getter/Setter],
2025-09-08T20:05:58:       hasAcceptEncoding: [Getter/Setter],
2025-09-08T20:05:58:       getUserAgent: [Getter/Setter],
2025-09-08T20:05:58:       setUserAgent: [Getter/Setter],
2025-09-08T20:05:58:       hasUserAgent: [Getter/Setter],
2025-09-08T20:05:58:       getAuthorization: [Getter/Setter],
2025-09-08T20:05:58:       setAuthorization: [Getter/Setter],
2025-09-08T20:05:58:       hasAuthorization: [Getter/Setter],
2025-09-08T20:05:58:       [Symbol(Symbol.iterator)]: [Function],
2025-09-08T20:05:58:     },
2025-09-08T20:05:58:     baseURL: "http://localhost:3055",
2025-09-08T20:05:58:     withCredentials: false,
2025-09-08T20:05:58:     method: "post",
2025-09-08T20:05:58:     url: "/student/exam-history?page=0&size=10",
2025-09-08T20:05:58:     data: "{\"name\":\"학생\",\"birthDate\":\"2099-09-15\",\"phone\":\"010-2790-6727\"}",
2025-09-08T20:05:58:     allowAbsoluteUrls: true,
2025-09-08T20:05:58:   },
2025-09-08T20:05:58:   request: Writable {
2025-09-08T20:05:58:     _events: {
2025-09-08T20:05:58:       error: [
2025-09-08T20:05:58:         [Function: handleRequestError]
2025-09-08T20:05:58:       ],
2025-09-08T20:05:58:       prefinish: undefined,
2025-09-08T20:05:58:       finish: undefined,
2025-09-08T20:05:58:       drain: undefined,
2025-09-08T20:05:58:       response: [
2025-09-08T20:05:58:         [Function: handleResponse]
2025-09-08T20:05:58:       ],
2025-09-08T20:05:58:       socket: [
2025-09-08T20:05:58:         [Function: handleRequestSocket], [Function: destroyOnTimeout]
2025-09-08T20:05:58:       ],
2025-09-08T20:05:58:     },
2025-09-08T20:05:58:     _writableState: {
2025-09-08T20:05:58:       [Symbol(kState)]: 17580812,
2025-09-08T20:05:58:       highWaterMark: 65536,
2025-09-08T20:05:58:       length: 0,
2025-09-08T20:05:58:       corked: 0,
2025-09-08T20:05:58:       onwrite: [Function: onwrite],
2025-09-08T20:05:58:       writelen: 0,
2025-09-08T20:05:58:       [Symbol(kBufferedValue)]: null,
2025-09-08T20:05:58:       bufferedIndex: 0,
2025-09-08T20:05:58:       pendingcb: 0,
2025-09-08T20:05:58:       objectMode: [Getter/Setter],
2025-09-08T20:05:58:       finalCalled: [Getter/Setter],
2025-09-08T20:05:58:       needDrain: [Getter/Setter],
2025-09-08T20:05:58:       ending: [Getter/Setter],
2025-09-08T20:05:58:       ended: [Getter/Setter],
2025-09-08T20:05:58:       finished: [Getter/Setter],
2025-09-08T20:05:58:       destroyed: [Getter/Setter],
2025-09-08T20:05:58:       decodeStrings: [Getter/Setter],
2025-09-08T20:05:58:       writing: [Getter/Setter],
2025-09-08T20:05:58:       sync: [Getter/Setter],
2025-09-08T20:05:58:       bufferProcessing: [Getter/Setter],
2025-09-08T20:05:58:       constructed: [Getter/Setter],
2025-09-08T20:05:58:       prefinished: [Getter/Setter],
2025-09-08T20:05:58:       errorEmitted: [Getter/Setter],
2025-09-08T20:05:58:       emitClose: [Getter/Setter],
2025-09-08T20:05:58: [Getter/Setter],
2025-09-08T20:05:58:       closed: [Getter/Setter],
2025-09-08T20:05:58:       closeEmitted: [Getter/Setter],
2025-09-08T20:05:58:       allBuffers: [Getter/Setter],
2025-09-08T20:05:58:       allNoop: [Getter/Setter],
2025-09-08T20:05:58:       errored: [Getter/Setter],
2025-09-08T20:05:58:       writable: [Getter/Setter],
2025-09-08T20:05:58:       defaultEncoding: [Getter/Setter],
2025-09-08T20:05:58:       writecb: [Getter/Setter],
2025-09-08T20:05:58:       afterWriteTickInfo: [Getter/Setter],
2025-09-08T20:05:58:       buffered: [Getter/Setter],
2025-09-08T20:05:58:       getBuffer: [Function: getBuffer],
2025-09-08T20:05:58:       bufferedRequestCount: [Getter],
2025-09-08T20:05:58:       [Symbol(kOnConstructed)]: [Function: onConstructed],
2025-09-08T20:05:58:     },
2025-09-08T20:05:58:     _maxListeners: undefined,
2025-09-08T20:05:58:     [Symbol(kCapture)]: false,
2025-09-08T20:05:58:     _options: {
2025-09-08T20:05:58:       maxRedirects: 21,
2025-09-08T20:05:58:       maxBodyLength: Infinity,
2025-09-08T20:05:58:       protocol: "http:",
2025-09-08T20:05:58:       path: "/student/exam-history?page=0&size=10",
2025-09-08T20:05:58:       method: "POST",
2025-09-08T20:05:58:       headers: [Object ...],
2025-09-08T20:05:58:       agents: [Object ...],
2025-09-08T20:05:58:       auth: undefined,
2025-09-08T20:05:58:       family: undefined,
2025-09-08T20:05:58:       beforeRedirect: [Function: dispatchBeforeRedirect],
2025-09-08T20:05:58:       beforeRedirects: [Object ...],
2025-09-08T20:05:58:       hostname: "localhost",
2025-09-08T20:05:58:       port: "3055",
2025-09-08T20:05:58:       agent: undefined,
2025-09-08T20:05:58:       nativeProtocols: [Object ...],
2025-09-08T20:05:58:       pathname: "/student/exam-history",
2025-09-08T20:05:58:       search: "?page=0&size=10",
2025-09-08T20:05:58:     },
2025-09-08T20:05:58:     _ended: true,
2025-09-08T20:05:58:     _ending: true,
2025-09-08T20:05:58:     _redirectCount: 0,
2025-09-08T20:05:58:     _redirects: [],
2025-09-08T20:05:58:     _requestBodyLength: 66,
2025-09-08T20:05:58:     _requestBodyBuffers: [
2025-09-08T20:05:58:       [Object ...]
2025-09-08T20:05:58:     ],
2025-09-08T20:05:58:     _eventsCount: NaN,
2025-09-08T20:05:58:     _onNativeResponse: [Function],
2025-09-08T20:05:58:     _currentRequest: ClientRequest {
2025-09-08T20:05:58:       write: [Function],
2025-09-08T20:05:58:       end: [Function],
2025-09-08T20:05:58:       flushHeaders: [Function],
2025-09-08T20:05:58:       destroy: [Function],
2025-09-08T20:05:58:       _ensureTls: [Function],
2025-09-08T20:05:58:       abort: [Function],
2025-09-08T20:05:58:       [Symbol(tls)]: null,
2025-09-08T20:05:58:       [Symbol(kAbortController)]: [AbortController ...],
2025-09-08T20:05:58:       [Symbol(agent)]: [Object ...],
2025-09-08T20:05:58:       destroyed: false,
2025-09-08T20:05:58:       [Symbol(protocol)]: "http:",
2025-09-08T20:05:58:       [Symbol(port)]: "3055",
2025-09-08T20:05:58:       [Symbol(useDefaultPort)]: false,
2025-09-08T20:05:58:       [Symbol(host)]: "localhost",
2025-09-08T20:05:58:       [Symbol(socketPath)]: undefined,
2025-09-08T20:05:58:       [Symbol(method)]: "POST",
2025-09-08T20:05:58:       maxHeaderSize: undefined,
2025-09-08T20:05:58:       [Symbol(maxHeaderSize)]: undefined,
2025-09-08T20:05:58:       insecureHTTPParser: undefined,
2025-09-08T20:05:58:       joinDuplicateHeaders: undefined,
2025-09-08T20:05:58:       [Symbol(path)]: "/student/exam-history?page=0&size=10",
2025-09-08T20:05:58:       _events: [Object ...],
2025-09-08T20:05:58:       _eventsCount: 7,
2025-09-08T20:05:58:       finished: true,
2025-09-08T20:05:58:       [Symbol(res)]: null,
2025-09-08T20:05:58:       [Symbol(upgradeOrConnect)]: false,
2025-09-08T20:05:58:       [Symbol(parser)]: null,
2025-09-08T20:05:58:       [Symbol(maxHeadersCount)]: null,
2025-09-08T20:05:58:       [Symbol(reusedSocket)]: false,
2025-09-08T20:05:58:       [Symbol(headers)]: Headers [Object ...],
2025-09-08T20:05:58:       [Symbol(options)]: [Object ...],
2025-09-08T20:05:58:       _httpMessage: [Circular],
2025-09-08T20:05:58:       [Symbol(emitState)]: 14,
2025-09-08T20:05:58:       setSocketKeepAlive: [Function],
2025-09-08T20:05:58:       setNoDelay: [Function],
2025-09-08T20:05:58:       [Symbol(kClearTimeout)]: [Function],
2025-09-08T20:05:58:       _redirectable: [Circular],
2025-09-08T20:05:58:       [Symbol(fakeSocket)]: [Object ...],
2025-09-08T20:05:58:       [Symbol(bodyChunks)]: [
2025-09-08T20:05:58:         <Buffer 7b 22 6e 61 6d 65 22 3a 22 ed 95 99 ec 83 9d 22 2c 22 62 69 72 74 68 44 61 74 65 22 3a 22 32 30 39 39 2d 30 39 2d 31 35 22 2c 22 70 68 6f 6e 65 22 3a ... 16 more bytes>
2025-09-08T20:05:58:       ],
2025-09-08T20:05:58:       [Symbol(fetchRequest)]: null,
2025-09-08T20:05:58:       setTimeout: [Function: setTimeout],
2025-09-08T20:05:58:       clearTimeout: [Function: clearTimeout],
2025-09-08T20:05:58:       path: [Getter],
2025-09-08T20:05:58:       port: [Getter],
2025-09-08T20:05:58:       method: [Getter],
2025-09-08T20:05:58:       host: [Getter],
2025-09-08T20:05:58:       protocol: [Getter],
2025-09-08T20:05:58:       agent: [Getter/Setter],
2025-09-08T20:05:58:       aborted: [Getter/Setter],
2025-09-08T20:05:58:       writable: [Getter],
2025-09-08T20:05:58:       _keepAliveTimeout: 0,
2025-09-08T20:05:58:       _defaultKeepAlive: true,
2025-09-08T20:05:58:       shouldKeepAlive: true,
2025-09-08T20:05:58:       _onPendingData: [Function: nop2],
2025-09-08T20:05:58:       outputSize: 0,
2025-09-08T20:05:58:       outputData: [],
2025-09-08T20:05:58:       strictContentLength: false,
2025-09-08T20:05:58:       _removedTE: false,
2025-09-08T20:05:58:       _removedContLen: false,
2025-09-08T20:05:58:       _removedConnection: false,
2025-09-08T20:05:58:       usesChunkedEncodingByDefault: true,
2025-09-08T20:05:58:       _closed: false,
2025-09-08T20:05:58:       _headerNames: [Getter/Setter],
2025-09-08T20:05:58:       appendHeader: [Function: appendHeader],
2025-09-08T20:05:58:       _implicitHeader: [Function: _implicitHeader],
2025-09-08T20:05:58:       getHeader: [Function: getHeader],
2025-09-08T20:05:58:       pipe: [Function: pipe],
2025-09-08T20:05:58:       getHeaderNames: [Function: getHeaderNames],
2025-09-08T20:05:58:       getRawHeaderNames: [Function: getRawHeaderNames],
2025-09-08T20:05:58:       getHeaders: [Function: getHeaders],
2025-09-08T20:05:58:       removeHeader: [Function: removeHeader],
2025-09-08T20:05:58:       setHeader: [Function: setHeader],
2025-09-08T20:05:58:       setHeaders: [Function: setHeaders],
2025-09-08T20:05:58:       hasHeader: [Function: hasHeader],
2025-09-08T20:05:58:       headers: [Getter/Setter],
2025-09-08T20:05:58:       addTrailers: [Function: addTrailers],
2025-09-08T20:05:58:       connection: [Getter/Setter],
2025-09-08T20:05:58:       socket: [Getter/Setter],
2025-09-08T20:05:58:       chunkedEncoding: [Getter/Setter],
2025-09-08T20:05:58:       writableObjectMode: [Getter],
2025-09-08T20:05:58:       writableLength: [Getter],
2025-09-08T20:05:58:       writableHighWaterMark: [Getter],
2025-09-08T20:05:58:       writableNeedDrain: [Getter],
2025-09-08T20:05:58:       writableEnded: [Getter],
2025-09-08T20:05:58:       writableFinished: [Getter],
2025-09-08T20:05:58:       _send: [Function: _send],
2025-09-08T20:05:58:       _writeRaw: [Function: _writeRaw],
2025-09-08T20:05:58:       writableCorked: [Getter/Setter],
2025-09-08T20:05:58:       cork: [Function: cork],
2025-09-08T20:05:58:       uncork: [Function: uncork],
2025-09-08T20:05:58:       _headers: [Getter/Setter],
2025-09-08T20:05:58:       eventNames: [Function: eventNames],
2025-09-08T20:05:58:       setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:05:58:       getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:05:58:       emit: [Function: emit],
2025-09-08T20:05:58:       addListener: [Function: addListener],
2025-09-08T20:05:58:       on: [Function: addListener],
2025-09-08T20:05:58:       prependListener: [Function: prependListener],
2025-09-08T20:05:58:       once: [Function: once],
2025-09-08T20:05:58:       prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:05:58:       removeListener: [Function: removeListener],
2025-09-08T20:05:58:       off: [Function: removeListener],
2025-09-08T20:05:58:       removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:05:58:       listeners: [Function: listeners],
2025-09-08T20:05:58:       rawListeners: [Function: rawListeners],
2025-09-08T20:05:58:       listenerCount: [Function: listenerCount],
2025-09-08T20:05:58:       [Symbol(kCapture)]: false,
2025-09-08T20:05:58:     },
2025-09-08T20:05:58:     _currentUrl: "http://localhost:3055/api/student/exam-history?page=0&size=10",
2025-09-08T20:05:58:     _timeout: null,
2025-09-08T20:05:58:     abort: [Function],
2025-09-08T20:05:58:     destroy: [Function],
2025-09-08T20:05:58:     write: [Function],
2025-09-08T20:05:58:     end: [Function],
2025-09-08T20:05:58:     setHeader: [Function],
2025-09-08T20:05:58:     removeHeader: [Function],
2025-09-08T20:05:58:     setTimeout: [Function],
2025-09-08T20:05:58:     flushHeaders: [Function],
2025-09-08T20:05:58:     getHeader: [Function],
2025-09-08T20:05:58:     setNoDelay: [Function],
2025-09-08T20:05:58:     setSocketKeepAlive: [Function],
2025-09-08T20:05:58:     aborted: [Getter],
2025-09-08T20:05:58:     connection: [Getter],
2025-09-08T20:05:58:     socket: [Getter],
2025-09-08T20:05:58:     _sanitizeOptions: [Function],
2025-09-08T20:05:58:     _performRequest: [Function],
2025-09-08T20:05:58:     _processResponse: [Function],
2025-09-08T20:05:58:     pipe: [Function],
2025-09-08T20:05:58:     cork: [Function],
2025-09-08T20:05:58:     uncork: [Function],
2025-09-08T20:05:58:     setDefaultEncoding: [Function: setDefaultEncoding],
2025-09-08T20:05:58:     _write: [Function],
2025-09-08T20:05:58:     _writev: null,
2025-09-08T20:05:58:     closed: [Getter],
2025-09-08T20:05:58:     destroyed: [Getter/Setter],
2025-09-08T20:05:58:     writable: [Getter/Setter],
2025-09-08T20:05:58:     writableFinished: [Getter],
2025-09-08T20:05:58:     writableObjectMode: [Getter],
2025-09-08T20:05:58:     writableBuffer: [Getter],
2025-09-08T20:05:58:     writableEnded: [Getter],
2025-09-08T20:05:58:     writableNeedDrain: [Getter],
2025-09-08T20:05:58:     writableHighWaterMark: [Getter],
2025-09-08T20:05:58:     writableCorked: [Getter],
2025-09-08T20:05:58:     writableLength: [Getter],
2025-09-08T20:05:58:     errored: [Getter],
2025-09-08T20:05:58:     writableAborted: [Getter],
2025-09-08T20:05:58:     _undestroy: [Function: undestroy],
2025-09-08T20:05:58:     _destroy: [Function],
2025-09-08T20:05:58:     [Symbol(nodejs.rejection)]: [Function],
2025-09-08T20:05:58:     [Symbol(Symbol.asyncDispose)]: [Function],
2025-09-08T20:05:58:     eventNames: [Function: eventNames],
2025-09-08T20:05:58:     setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:05:58:     getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:05:58:     emit: [Function: emit],
2025-09-08T20:05:58:     addListener: [Function: addListener],
2025-09-08T20:05:58:     on: [Function: addListener],
2025-09-08T20:05:58:     prependListener: [Function: prependListener],
2025-09-08T20:05:58:     once: [Function: once],
2025-09-08T20:05:58:     prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:05:58:     removeListener: [Function: removeListener],
2025-09-08T20:05:58:     off: [Function: removeListener],
2025-09-08T20:05:58:     removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:05:58:     listeners: [Function: listeners],
2025-09-08T20:05:58:     rawListeners: [Function: rawListeners],
2025-09-08T20:05:58:     listenerCount: [Function: listenerCount],
2025-09-08T20:05:58:   },
2025-09-08T20:05:58:   cause: error: ECONNREFUSED
2025-09-08T20:05:58:  code: "ECONNREFUSED"
2025-09-08T20:05:58: 
2025-09-08T20:05:58:       at node:_http_client:247:28
2025-09-08T20:05:58: ,
2025-09-08T20:05:58:   toJSON: [Function: toJSON],
2025-09-08T20:05:58:   isAxiosError: true,
2025-09-08T20:05:58:   toString: [Function: toString],
2025-09-08T20:05:58: }
2025-09-08T20:07:22: ❌ [Auth API Request Error] AxiosError {
2025-09-08T20:07:22:   stack: "Error\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/core/AxiosError.js:92:14)\n    at handleRequestError (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/adapters/http.js:620:25)\n    at emitError (node:events:43:23)\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/follow-redirects/index.js:49:24)\n    at emitError (node:events:43:23)\n    at <anonymous> (node:_http_client:251:22)\n    at processTicksAndRejections (native:7:39)",
2025-09-08T20:07:22:   sourceURL: "node:_http_client",
2025-09-08T20:07:22:   column: 28,
2025-09-08T20:07:22:   line: 247,
2025-09-08T20:07:22:   originalColumn: 18,
2025-09-08T20:07:22:   originalLine: 62,
2025-09-08T20:07:22:   code: "ECONNREFUSED",
2025-09-08T20:07:22:   message: "ECONNREFUSED",
2025-09-08T20:07:22:   name: "Error",
2025-09-08T20:07:22:   config: {
2025-09-08T20:07:22:     transitional: {
2025-09-08T20:07:22:       silentJSONParsing: true,
2025-09-08T20:07:22:       forcedJSONParsing: true,
2025-09-08T20:07:22:       clarifyTimeoutError: false,
2025-09-08T20:07:22:     },
2025-09-08T20:07:22:     adapter: [ "xhr", "http", "fetch" ],
2025-09-08T20:07:22:     transformRequest: [
2025-09-08T20:07:22:       [Function: transformRequest]
2025-09-08T20:07:22:     ],
2025-09-08T20:07:22:     transformResponse: [
2025-09-08T20:07:22:       [Function: transformResponse]
2025-09-08T20:07:22:     ],
2025-09-08T20:07:22:     timeout: 10000,
2025-09-08T20:07:22:     xsrfCookieName: "XSRF-TOKEN",
2025-09-08T20:07:22:     xsrfHeaderName: "X-XSRF-TOKEN",
2025-09-08T20:07:22:     maxContentLength: -1,
2025-09-08T20:07:22:     maxBodyLength: -1,
2025-09-08T20:07:22:     env: {
2025-09-08T20:07:22:       FormData: [Function: FormData],
2025-09-08T20:07:22:       Blob: [class Blob],
2025-09-08T20:07:22:     },
2025-09-08T20:07:22:     validateStatus: [Function: validateStatus],
2025-09-08T20:07:22:     headers: {
2025-09-08T20:07:22:       Accept: "application/json",
2025-09-08T20:07:22:       "Content-Type": "application/json",
2025-09-08T20:07:22:       "User-Agent": "axios/1.11.0",
2025-09-08T20:07:22:       "Content-Length": "85",
2025-09-08T20:07:22:       "Accept-Encoding": "gzip, compress, deflate, br",
2025-09-08T20:07:22:       set: [Getter/Setter],
2025-09-08T20:07:22:       get: [Getter/Setter],
2025-09-08T20:07:22:       has: [Getter/Setter],
2025-09-08T20:07:22:       delete: [Getter/Setter],
2025-09-08T20:07:22:       clear: [Getter/Setter],
2025-09-08T20:07:22:       normalize: [Getter/Setter],
2025-09-08T20:07:22:       concat: [Getter/Setter],
2025-09-08T20:07:22:       toJSON: [Getter/Setter],
2025-09-08T20:07:22:       toString: [Getter/Setter],
2025-09-08T20:07:22:       getSetCookie: [Getter/Setter],
2025-09-08T20:07:22:       getContentType: [Getter/Setter],
2025-09-08T20:07:22:       setContentType: [Getter/Setter],
2025-09-08T20:07:22:       hasContentType: [Getter/Setter],
2025-09-08T20:07:22:       getContentLength: [Getter/Setter],
2025-09-08T20:07:22:       setContentLength: [Getter/Setter],
2025-09-08T20:07:22:       hasContentLength: [Getter/Setter],
2025-09-08T20:07:22:       getAccept: [Getter/Setter],
2025-09-08T20:07:22:       setAccept: [Getter/Setter],
2025-09-08T20:07:22:       hasAccept: [Getter/Setter],
2025-09-08T20:07:22:       getAcceptEncoding: [Getter/Setter],
2025-09-08T20:07:22:       setAcceptEncoding: [Getter/Setter],
2025-09-08T20:07:22:       hasAcceptEncoding: [Getter/Setter],
2025-09-08T20:07:22:       getUserAgent: [Getter/Setter],
2025-09-08T20:07:22:       setUserAgent: [Getter/Setter],
2025-09-08T20:07:22:       hasUserAgent: [Getter/Setter],
2025-09-08T20:07:22:       getAuthorization: [Getter/Setter],
2025-09-08T20:07:22:       setAuthorization: [Getter/Setter],
2025-09-08T20:07:22:       hasAuthorization: [Getter/Setter],
2025-09-08T20:07:22:       [Symbol(Symbol.iterator)]: [Function],
2025-09-08T20:07:22:     },
2025-09-08T20:07:22:     baseURL: "http://localhost:3055",
2025-09-08T20:07:22:     withCredentials: false,
2025-09-08T20:07:22:     method: "post",
2025-09-08T20:07:22:     url: "/student/recent-submissions",
2025-09-08T20:07:22:     data: "{\"name\":\"학생\",\"birthDate\":\"2099-09-15\",\"phone\":\"010-2790-6727\",\"page\":0,\"size\":10}",
2025-09-08T20:07:22:     allowAbsoluteUrls: true,
2025-09-08T20:07:22:   },
2025-09-08T20:07:22:   request: Writable {
2025-09-08T20:07:22:     _events: {
2025-09-08T20:07:22:       error: [
2025-09-08T20:07:22:         [Function: handleRequestError]
2025-09-08T20:07:22:       ],
2025-09-08T20:07:22:       prefinish: undefined,
2025-09-08T20:07:22:       finish: undefined,
2025-09-08T20:07:22:       drain: undefined,
2025-09-08T20:07:22:       response: [
2025-09-08T20:07:22:         [Function: handleResponse]
2025-09-08T20:07:22:       ],
2025-09-08T20:07:22:       socket: [
2025-09-08T20:07:22:         [Function: handleRequestSocket], [Function: destroyOnTimeout]
2025-09-08T20:07:22:       ],
2025-09-08T20:07:22:     },
2025-09-08T20:07:22:     _writableState: {
2025-09-08T20:07:22:       [Symbol(kState)]: 17580812,
2025-09-08T20:07:22:       highWaterMark: 65536,
2025-09-08T20:07:22:       length: 0,
2025-09-08T20:07:22:       corked: 0,
2025-09-08T20:07:22:       onwrite: [Function: onwrite],
2025-09-08T20:07:22:       writelen: 0,
2025-09-08T20:07:22:       [Symbol(kBufferedValue)]: null,
2025-09-08T20:07:22:       bufferedIndex: 0,
2025-09-08T20:07:22:       pendingcb: 0,
2025-09-08T20:07:22:       objectMode: [Getter/Setter],
2025-09-08T20:07:22:       finalCalled: [Getter/Setter],
2025-09-08T20:07:22:       needDrain: [Getter/Setter],
2025-09-08T20:07:22:       ending: [Getter/Setter],
2025-09-08T20:07:22:       ended: [Getter/Setter],
2025-09-08T20:07:22:       finished: [Getter/Setter],
2025-09-08T20:07:22:       destroyed: [Getter/Setter],
2025-09-08T20:07:22:       decodeStrings: [Getter/Setter],
2025-09-08T20:07:22:       writing: [Getter/Setter],
2025-09-08T20:07:22:       sync: [Getter/Setter],
2025-09-08T20:07:22:       bufferProcessing: [Getter/Setter],
2025-09-08T20:07:22:       constructed: [Getter/Setter],
2025-09-08T20:07:22:       prefinished: [Getter/Setter],
2025-09-08T20:07:22:       errorEmitted: [Getter/Setter],
2025-09-08T20:07:22:       emitClose: [Getter/Setter],
2025-09-08T20:07:22:       autoDestroy: [Getter/Setter],
2025-09-08T20:07:22:       closed: [Getter/Setter],
2025-09-08T20:07:22:       closeEmitted: [Getter/Setter],
2025-09-08T20:07:22:       allBuffers: [Getter/Setter],
2025-09-08T20:07:22:       allNoop: [Getter/Setter],
2025-09-08T20:07:22:       errored: [Getter/Setter],
2025-09-08T20:07:22:       writable: [Getter/Setter],
2025-09-08T20:07:22:       defaultEncoding: [Getter/Setter],
2025-09-08T20:07:22:       writecb: [Getter/Setter],
2025-09-08T20:07:22:       afterWriteTickInfo: [Getter/Setter],
2025-09-08T20:07:22:       buffered: [Getter/Setter],
2025-09-08T20:07:22:       getBuffer: [Function: getBuffer],
2025-09-08T20:07:22:       bufferedRequestCount: [Getter],
2025-09-08T20:07:22:       [Symbol(kOnConstructed)]: [Function: onConstructed],
2025-09-08T20:07:22:     },
2025-09-08T20:07:22:     _maxListeners: undefined,
2025-09-08T20:07:22:     [Symbol(kCapture)]: false,
2025-09-08T20:07:22:     _options: {
2025-09-08T20:07:22:       maxRedirects: 21,
2025-09-08T20:07:22:       maxBodyLength: Infinity,
2025-09-08T20:07:22:       protocol: "http:",
2025-09-08T20:07:22:       path: "/student/recent-submissions",
2025-09-08T20:07:22:       method: "POST",
2025-09-08T20:07:22:       headers: [Object ...],
2025-09-08T20:07:22:       agents: [Object ...],
2025-09-08T20:07:22:       auth: undefined,
2025-09-08T20:07:22:       family: undefined,
2025-09-08T20:07:22:       beforeRedirect: [Function: dispatchBeforeRedirect],
2025-09-08T20:07:22:       beforeRedirects: [Object ...],
2025-09-08T20:07:22:       hostname: "localhost",
2025-09-08T20:07:22:       port: "3055",
2025-09-08T20:07:22:       agent: undefined,
2025-09-08T20:07:22:       nativeProtocols: [Object ...],
2025-09-08T20:07:22:       pathname: "/student/recent-submissions",
2025-09-08T20:07:22:     },
2025-09-08T20:07:22:     _ended: true,
2025-09-08T20:07:22:     _ending: true,
2025-09-08T20:07:22:     _redirectCount: 0,
2025-09-08T20:07:22:     _redirects: [],
2025-09-08T20:07:22:     _requestBodyLength: 85,
2025-09-08T20:07:22:     _requestBodyBuffers: [
2025-09-08T20:07:22:       [Object ...]
2025-09-08T20:07:22:     ],
2025-09-08T20:07:22:     _eventsCount: NaN,
2025-09-08T20:07:22:     _onNativeResponse: [Function],
2025-09-08T20:07:22:     _currentRequest: ClientRequest {
2025-09-08T20:07:22:       write: [Function],
2025-09-08T20:07:22:       end: [Function],
2025-09-08T20:07:22:       flushHeaders: [Function],
2025-09-08T20:07:22:       destroy: [Function],
2025-09-08T20:07:22:       _ensureTls: [Function],
2025-09-08T20:07:22:       abort: [Function],
2025-09-08T20:07:22:       [Symbol(tls)]: null,
2025-09-08T20:07:22:       [Symbol(kAbortController)]: [AbortController ...],
2025-09-08T20:07:22:       [Symbol(agent)]: [Object ...],
2025-09-08T20:07:22:       destroyed: false,
2025-09-08T20:07:22:       [Symbol(protocol)]: "http:",
2025-09-08T20:07:22:       [Symbol(port)]: "3055",
2025-09-08T20:07:22:       [Symbol(useDefaultPort)]: false,
2025-09-08T20:07:22:       [Symbol(host)]: "localhost",
2025-09-08T20:07:22:       [Symbol(socketPath)]: undefined,
2025-09-08T20:07:22:       [Symbol(method)]: "POST",
2025-09-08T20:07:22:       maxHeaderSize: undefined,
2025-09-08T20:07:22:       [Symbol(maxHeaderSize)]: undefined,
2025-09-08T20:07:22:       insecureHTTPParser: undefined,
2025-09-08T20:07:22:       joinDuplicateHeaders: undefined,
2025-09-08T20:07:22:       [Symbol(path)]: "/student/recent-submissions",
2025-09-08T20:07:22:       _events: [Object ...],
2025-09-08T20:07:22:       _eventsCount: 7,
2025-09-08T20:07:22:       finished: true,
2025-09-08T20:07:22:       [Symbol(res)]: null,
2025-09-08T20:07:22:       [Symbol(upgradeOrConnect)]: false,
2025-09-08T20:07:22:       [Symbol(parser)]: null,
2025-09-08T20:07:22:       [Symbol(maxHeadersCount)]: null,
2025-09-08T20:07:22:       [Symbol(reusedSocket)]: false,
2025-09-08T20:07:22:       [Symbol(headers)]: Headers [Object ...],
2025-09-08T20:07:22:       [Symbol(options)]: [Object ...],
2025-09-08T20:07:22:       _httpMessage: [Circular],
2025-09-08T20:07:22:       [Symbol(emitState)]: 14,
2025-09-08T20:07:22:       setSocketKeepAlive: [Function],
2025-09-08T20:07:22:       setNoDelay: [Function],
2025-09-08T20:07:22:       [Symbol(kClearTimeout)]: [Function],
2025-09-08T20:07:22:       _redirectable: [Circular],
2025-09-08T20:07:22:       [Symbol(fakeSocket)]: [Object ...],
2025-09-08T20:07:22:       [Symbol(bodyChunks)]: [
2025-09-08T20:07:22:         <Buffer 7b 22 6e 61 6d 65 22 3a 22 ed 95 99 ec 83 9d 22 2c 22 62 69 72 74 68 44 61 74 65 22 3a 22 32 30 39 39 2d 30 39 2d 31 35 22 2c 22 70 68 6f 6e 65 22 3a ... 35 more bytes>
2025-09-08T20:07:22:       ],
2025-09-08T20:07:22:       [Symbol(fetchRequest)]: null,
2025-09-08T20:07:22:       setTimeout: [Function: setTimeout],
2025-09-08T20:07:22:       clearTimeout: [Function: clearTimeout],
2025-09-08T20:07:22:       path: [Getter],
2025-09-08T20:07:22:       port: [Getter],
2025-09-08T20:07:22:       method: [Getter],
2025-09-08T20:07:22:       host: [Getter],
2025-09-08T20:07:22:       protocol: [Getter],
2025-09-08T20:07:22:       agent: [Getter/Setter],
2025-09-08T20:07:22:       aborted: [Getter/Setter],
2025-09-08T20:07:22:       writable: [Getter],
2025-09-08T20:07:22:       _keepAliveTimeout: 0,
2025-09-08T20:07:22:       _defaultKeepAlive: true,
2025-09-08T20:07:22:       shouldKeepAlive: true,
2025-09-08T20:07:22:       _onPendingData: [Function: nop2],
2025-09-08T20:07:22:       outputSize: 0,
2025-09-08T20:07:22:       outputData: [],
2025-09-08T20:07:22:       strictContentLength: false,
2025-09-08T20:07:22:       _removedTE: false,
2025-09-08T20:07:22:       _removedContLen: false,
2025-09-08T20:07:22:       _removedConnection: false,
2025-09-08T20:07:22:       usesChunkedEncodingByDefault: true,
2025-09-08T20:07:22:       _closed: false,
2025-09-08T20:07:22:       _headerNames: [Getter/Setter],
2025-09-08T20:07:22:       appendHeader: [Function: appendHeader],
2025-09-08T20:07:22:       _implicitHeader: [Function: _implicitHeader],
2025-09-08T20:07:22:       getHeader: [Function: getHeader],
2025-09-08T20:07:22:       pipe: [Function: pipe],
2025-09-08T20:07:22:       getHeaderNames: [Function: getHeaderNames],
2025-09-08T20:07:22:       getRawHeaderNames: [Function: getRawHeaderNames],
2025-09-08T20:07:22:       getHeaders: [Function: getHeaders],
2025-09-08T20:07:22:       removeHeader: [Function: removeHeader],
2025-09-08T20:07:22:       setHeader: [Function: setHeader],
2025-09-08T20:07:22:       setHeaders: [Function: setHeaders],
2025-09-08T20:07:22: [Function: hasHeader],
2025-09-08T20:07:22:       headers: [Getter/Setter],
2025-09-08T20:07:22:       addTrailers: [Function: addTrailers],
2025-09-08T20:07:22:       connection: [Getter/Setter],
2025-09-08T20:07:22:       socket: [Getter/Setter],
2025-09-08T20:07:22:       chunkedEncoding: [Getter/Setter],
2025-09-08T20:07:22:       writableObjectMode: [Getter],
2025-09-08T20:07:22:       writableLength: [Getter],
2025-09-08T20:07:22:       writableHighWaterMark: [Getter],
2025-09-08T20:07:22:       writableNeedDrain: [Getter],
2025-09-08T20:07:22:       writableEnded: [Getter],
2025-09-08T20:07:22:       writableFinished: [Getter],
2025-09-08T20:07:22:       _send: [Function: _send],
2025-09-08T20:07:22:       _writeRaw: [Function: _writeRaw],
2025-09-08T20:07:22:       writableCorked: [Getter/Setter],
2025-09-08T20:07:22:       cork: [Function: cork],
2025-09-08T20:07:22:       uncork: [Function: uncork],
2025-09-08T20:07:22:       _headers: [Getter/Setter],
2025-09-08T20:07:22:       eventNames: [Function: eventNames],
2025-09-08T20:07:22:       setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:07:22:       getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:07:22:       emit: [Function: emit],
2025-09-08T20:07:22:       addListener: [Function: addListener],
2025-09-08T20:07:22:       on: [Function: addListener],
2025-09-08T20:07:22:       prependListener: [Function: prependListener],
2025-09-08T20:07:22:       once: [Function: once],
2025-09-08T20:07:22:       prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:07:22:       removeListener: [Function: removeListener],
2025-09-08T20:07:22:       off: [Function: removeListener],
2025-09-08T20:07:22:       removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:07:22:       listeners: [Function: listeners],
2025-09-08T20:07:22:       rawListeners: [Function: rawListeners],
2025-09-08T20:07:22:       listenerCount: [Function: listenerCount],
2025-09-08T20:07:22:       [Symbol(kCapture)]: false,
2025-09-08T20:07:22:     },
2025-09-08T20:07:22:     _currentUrl: "http://localhost:3055/api/student/recent-submissions",
2025-09-08T20:07:22:     _timeout: null,
2025-09-08T20:07:22:     abort: [Function],
2025-09-08T20:07:22:     destroy: [Function],
2025-09-08T20:07:22:     write: [Function],
2025-09-08T20:07:22:     end: [Function],
2025-09-08T20:07:22:     setHeader: [Function],
2025-09-08T20:07:22:     removeHeader: [Function],
2025-09-08T20:07:22:     setTimeout: [Function],
2025-09-08T20:07:22:     flushHeaders: [Function],
2025-09-08T20:07:22:     getHeader: [Function],
2025-09-08T20:07:22:     setNoDelay: [Function],
2025-09-08T20:07:22:     setSocketKeepAlive: [Function],
2025-09-08T20:07:22:     aborted: [Getter],
2025-09-08T20:07:22:     connection: [Getter],
2025-09-08T20:07:22:     socket: [Getter],
2025-09-08T20:07:22:     _sanitizeOptions: [Function],
2025-09-08T20:07:22:     _performRequest: [Function],
2025-09-08T20:07:22:     _processResponse: [Function],
2025-09-08T20:07:22:     pipe: [Function],
2025-09-08T20:07:22:     cork: [Function],
2025-09-08T20:07:22:     uncork: [Function],
2025-09-08T20:07:22:     setDefaultEncoding: [Function: setDefaultEncoding],
2025-09-08T20:07:22:     _write: [Function],
2025-09-08T20:07:22:     _writev: null,
2025-09-08T20:07:22:     closed: [Getter],
2025-09-08T20:07:22:     destroyed: [Getter/Setter],
2025-09-08T20:07:22:     writable: [Getter/Setter],
2025-09-08T20:07:22:     writableFinished: [Getter],
2025-09-08T20:07:22:     writableObjectMode: [Getter],
2025-09-08T20:07:22:     writableBuffer: [Getter],
2025-09-08T20:07:22:     writableEnded: [Getter],
2025-09-08T20:07:22:     writableNeedDrain: [Getter],
2025-09-08T20:07:22:     writableHighWaterMark: [Getter],
2025-09-08T20:07:22:     writableCorked: [Getter],
2025-09-08T20:07:22:     writableLength: [Getter],
2025-09-08T20:07:22:     errored: [Getter],
2025-09-08T20:07:22:     writableAborted: [Getter],
2025-09-08T20:07:22:     _undestroy: [Function: undestroy],
2025-09-08T20:07:22:     _destroy: [Function],
2025-09-08T20:07:22:     [Symbol(nodejs.rejection)]: [Function],
2025-09-08T20:07:22:     [Symbol(Symbol.asyncDispose)]: [Function],
2025-09-08T20:07:22:     eventNames: [Function: eventNames],
2025-09-08T20:07:22:     setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:07:22:     getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:07:22:     emit: [Function: emit],
2025-09-08T20:07:22:     addListener: [Function: addListener],
2025-09-08T20:07:22:     on: [Function: addListener],
2025-09-08T20:07:22:     prependListener: [Function: prependListener],
2025-09-08T20:07:22:     once: [Function: once],
2025-09-08T20:07:22:     prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:07:22:     removeListener: [Function: removeListener],
2025-09-08T20:07:22:     off: [Function: removeListener],
2025-09-08T20:07:22:     removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:07:22:     listeners: [Function: listeners],
2025-09-08T20:07:22:     rawListeners: [Function: rawListeners],
2025-09-08T20:07:22:     listenerCount: [Function: listenerCount],
2025-09-08T20:07:22:   },
2025-09-08T20:07:22:   cause: error: ECONNREFUSED
2025-09-08T20:07:22:  code: "ECONNREFUSED"
2025-09-08T20:07:22: 
2025-09-08T20:07:22:       at node:_http_client:247:28
2025-09-08T20:07:22: ,
2025-09-08T20:07:22:   toJSON: [Function: toJSON],
2025-09-08T20:07:22:   isAxiosError: true,
2025-09-08T20:07:22:   toString: [Function: toString],
2025-09-08T20:07:22: }
2025-09-08T20:07:22: ❌ [Auth API Request Error] AxiosError {
2025-09-08T20:07:22:   stack: "Error\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/core/AxiosError.js:92:14)\n    at handleRequestError (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/adapters/http.js:620:25)\n    at emitError (node:events:43:23)\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/follow-redirects/index.js:49:24)\n    at emitError (node:events:43:23)\n    at <anonymous> (node:_http_client:251:22)\n    at processTicksAndRejections (native:7:39)",
2025-09-08T20:07:22:   sourceURL: "node:_http_client",
2025-09-08T20:07:22:   column: 28,
2025-09-08T20:07:22:   line: 247,
2025-09-08T20:07:22:   originalColumn: 18,
2025-09-08T20:07:22:   originalLine: 62,
2025-09-08T20:07:22:   code: "ECONNREFUSED",
2025-09-08T20:07:22:   message: "ECONNREFUSED",
2025-09-08T20:07:22:   name: "Error",
2025-09-08T20:07:22:   config: {
2025-09-08T20:07:22:     transitional: {
2025-09-08T20:07:22:       silentJSONParsing: true,
2025-09-08T20:07:22:       forcedJSONParsing: true,
2025-09-08T20:07:22:       clarifyTimeoutError: false,
2025-09-08T20:07:22:     },
2025-09-08T20:07:22:     adapter: [ "xhr", "http", "fetch" ],
2025-09-08T20:07:22:     transformRequest: [
2025-09-08T20:07:22:       [Function: transformRequest]
2025-09-08T20:07:22:     ],
2025-09-08T20:07:22:     transformResponse: [
2025-09-08T20:07:22:       [Function: transformResponse]
2025-09-08T20:07:22:     ],
2025-09-08T20:07:22:     timeout: 10000,
2025-09-08T20:07:22:     xsrfCookieName: "XSRF-TOKEN",
2025-09-08T20:07:22:     xsrfHeaderName: "X-XSRF-TOKEN",
2025-09-08T20:07:22:     maxContentLength: -1,
2025-09-08T20:07:22:     maxBodyLength: -1,
2025-09-08T20:07:22:     env: {
2025-09-08T20:07:22:       FormData: [Function: FormData],
2025-09-08T20:07:22:       Blob: [class Blob],
2025-09-08T20:07:22:     },
2025-09-08T20:07:22:     validateStatus: [Function: validateStatus],
2025-09-08T20:07:22:     headers: {
2025-09-08T20:07:22:       Accept: "application/json",
2025-09-08T20:07:22:       "Content-Type": "application/json",
2025-09-08T20:07:22:       "User-Agent": "axios/1.11.0",
2025-09-08T20:07:22:       "Content-Length": "66",
2025-09-08T20:07:22:       "Accept-Encoding": "gzip, compress, deflate, br",
2025-09-08T20:07:22:       set: [Getter/Setter],
2025-09-08T20:07:22:       get: [Getter/Setter],
2025-09-08T20:07:22:       has: [Getter/Setter],
2025-09-08T20:07:22:       delete: [Getter/Setter],
2025-09-08T20:07:22:       clear: [Getter/Setter],
2025-09-08T20:07:22:       normalize: [Getter/Setter],
2025-09-08T20:07:22:       concat: [Getter/Setter],
2025-09-08T20:07:22:       toJSON: [Getter/Setter],
2025-09-08T20:07:22:       toString: [Getter/Setter],
2025-09-08T20:07:22:       getSetCookie: [Getter/Setter],
2025-09-08T20:07:22:       getContentType: [Getter/Setter],
2025-09-08T20:07:22:       setContentType: [Getter/Setter],
2025-09-08T20:07:22:       hasContentType: [Getter/Setter],
2025-09-08T20:07:22:       getContentLength: [Getter/Setter],
2025-09-08T20:07:22:       setContentLength: [Getter/Setter],
2025-09-08T20:07:22:       hasContentLength: [Getter/Setter],
2025-09-08T20:07:22:       getAccept: [Getter/Setter],
2025-09-08T20:07:22:       setAccept: [Getter/Setter],
2025-09-08T20:07:22:       hasAccept: [Getter/Setter],
2025-09-08T20:07:22:       getAcceptEncoding: [Getter/Setter],
2025-09-08T20:07:22:       setAcceptEncoding: [Getter/Setter],
2025-09-08T20:07:22:       hasAcceptEncoding: [Getter/Setter],
2025-09-08T20:07:22:       getUserAgent: [Getter/Setter],
2025-09-08T20:07:22:       setUserAgent: [Getter/Setter],
2025-09-08T20:07:22:       hasUserAgent: [Getter/Setter],
2025-09-08T20:07:22:       getAuthorization: [Getter/Setter],
2025-09-08T20:07:22:       setAuthorization: [Getter/Setter],
2025-09-08T20:07:22:       hasAuthorization: [Getter/Setter],
2025-09-08T20:07:22:       [Symbol(Symbol.iterator)]: [Function],
2025-09-08T20:07:22:     },
2025-09-08T20:07:22:     baseURL: "http://localhost:3055",
2025-09-08T20:07:22:     withCredentials: false,
2025-09-08T20:07:22:     method: "post",
2025-09-08T20:07:22:     url: "/student/exam-history?page=0&size=10",
2025-09-08T20:07:22:     data: "{\"name\":\"학생\",\"birthDate\":\"2099-09-15\",\"phone\":\"010-2790-6727\"}",
2025-09-08T20:07:22:     allowAbsoluteUrls: true,
2025-09-08T20:07:22:   },
2025-09-08T20:07:22:   request: Writable {
2025-09-08T20:07:22:     _events: {
2025-09-08T20:07:22:       error: [
2025-09-08T20:07:22:         [Function: handleRequestError]
2025-09-08T20:07:22:       ],
2025-09-08T20:07:22:       prefinish: undefined,
2025-09-08T20:07:22:       finish: undefined,
2025-09-08T20:07:22:       drain: undefined,
2025-09-08T20:07:22:       response: [
2025-09-08T20:07:22:         [Function: handleResponse]
2025-09-08T20:07:22:       ],
2025-09-08T20:07:22:       socket: [
2025-09-08T20:07:22:         [Function: handleRequestSocket], [Function: destroyOnTimeout]
2025-09-08T20:07:22:       ],
2025-09-08T20:07:22:     },
2025-09-08T20:07:22:     _writableState: {
2025-09-08T20:07:22:       [Symbol(kState)]: 17580812,
2025-09-08T20:07:22:       highWaterMark: 65536,
2025-09-08T20:07:22:       length: 0,
2025-09-08T20:07:22:       corked: 0,
2025-09-08T20:07:22:       onwrite: [Function: onwrite],
2025-09-08T20:07:22:       writelen: 0,
2025-09-08T20:07:22:       [Symbol(kBufferedValue)]: null,
2025-09-08T20:07:22:       bufferedIndex: 0,
2025-09-08T20:07:22:       pendingcb: 0,
2025-09-08T20:07:22:       objectMode: [Getter/Setter],
2025-09-08T20:07:22:       finalCalled: [Getter/Setter],
2025-09-08T20:07:22:       needDrain: [Getter/Setter],
2025-09-08T20:07:22:       ending: [Getter/Setter],
2025-09-08T20:07:22:       ended: [Getter/Setter],
2025-09-08T20:07:22:       finished: [Getter/Setter],
2025-09-08T20:07:22:       destroyed: [Getter/Setter],
2025-09-08T20:07:22:       decodeStrings: [Getter/Setter],
2025-09-08T20:07:22:       writing: [Getter/Setter],
2025-09-08T20:07:22:       sync: [Getter/Setter],
2025-09-08T20:07:22:       bufferProcessing: [Getter/Setter],
2025-09-08T20:07:22:       constructed: [Getter/Setter],
2025-09-08T20:07:22:       prefinished: [Getter/Setter],
2025-09-08T20:07:22:       errorEmitted: [Getter/Setter],
2025-09-08T20:07:22:       emitClose: [Getter/Setter],
2025-09-08T20:07:22:       autoDestroy: [Getter/Setter],
2025-09-08T20:07:22:       closed: [Getter/Setter],
2025-09-08T20:07:22:       closeEmitted: [Getter/Setter],
2025-09-08T20:07:22:       allBuffers: [Getter/Setter],
2025-09-08T20:07:22:       allNoop: [Getter/Setter],
2025-09-08T20:07:22:       errored: [Getter/Setter],
2025-09-08T20:07:22:       writable: [Getter/Setter],
2025-09-08T20:07:22:       defaultEncoding: [Getter/Setter],
2025-09-08T20:07:22:       writecb: [Getter/Setter],
2025-09-08T20:07:22:       afterWriteTickInfo: [Getter/Setter],
2025-09-08T20:07:22:       buffered: [Getter/Setter],
2025-09-08T20:07:22:       getBuffer: [Function: getBuffer],
2025-09-08T20:07:22:       bufferedRequestCount: [Getter],
2025-09-08T20:07:22:       [Symbol(kOnConstructed)]: [Function: onConstructed],
2025-09-08T20:07:22:     },
2025-09-08T20:07:22:     _maxListeners: undefined,
2025-09-08T20:07:22:     [Symbol(kCapture)]: false,
2025-09-08T20:07:22:     _options: {
2025-09-08T20:07:22:       maxRedirects: 21,
2025-09-08T20:07:22:       maxBodyLength: Infinity,
2025-09-08T20:07:22:       protocol: "http:",
2025-09-08T20:07:22:       path: "/student/exam-history?page=0&size=10",
2025-09-08T20:07:22:       method: "POST",
2025-09-08T20:07:22:       headers: [Object ...],
2025-09-08T20:07:22:       agents: [Object ...],
2025-09-08T20:07:22:       auth: undefined,
2025-09-08T20:07:22:       family: undefined,
2025-09-08T20:07:22:       beforeRedirect: [Function: dispatchBeforeRedirect],
2025-09-08T20:07:22:       beforeRedirects: [Object ...],
2025-09-08T20:07:22:       hostname: "localhost",
2025-09-08T20:07:22:       port: "3055",
2025-09-08T20:07:22:       agent: undefined,
2025-09-08T20:07:22:       nativeProtocols: [Object ...],
2025-09-08T20:07:22:       pathname: "/student/exam-history",
2025-09-08T20:07:22:       search: "?page=0&size=10",
2025-09-08T20:07:22:     },
2025-09-08T20:07:22:     _ended: true,
2025-09-08T20:07:22:     _ending: true,
2025-09-08T20:07:22:     _redirectCount: 0,
2025-09-08T20:07:22:     _redirects: [],
2025-09-08T20:07:22:     _requestBodyLength: 66,
2025-09-08T20:07:22:     _requestBodyBuffers: [
2025-09-08T20:07:22:       [Object ...]
2025-09-08T20:07:22:     ],
2025-09-08T20:07:22:     _eventsCount: NaN,
2025-09-08T20:07:22:     _onNativeResponse: [Function],
2025-09-08T20:07:22:     _currentRequest: ClientRequest {
2025-09-08T20:07:22:       write: [Function],
2025-09-08T20:07:22:       end: [Function],
2025-09-08T20:07:22:       flushHeaders: [Function],
2025-09-08T20:07:22:       destroy: [Function],
2025-09-08T20:07:22:       _ensureTls: [Function],
2025-09-08T20:07:22:       abort: [Function],
2025-09-08T20:07:22:       [Symbol(tls)]: null,
2025-09-08T20:07:22:       [Symbol(kAbortController)]: [AbortController ...],
2025-09-08T20:07:22:       [Symbol(agent)]: [Object ...],
2025-09-08T20:07:22:       destroyed: false,
2025-09-08T20:07:22:       [Symbol(protocol)]: "http:",
2025-09-08T20:07:22:       [Symbol(port)]: "3055",
2025-09-08T20:07:22:       [Symbol(useDefaultPort)]: false,
2025-09-08T20:07:22:       [Symbol(host)]: "localhost",
2025-09-08T20:07:22:       [Symbol(socketPath)]: undefined,
2025-09-08T20:07:22:       [Symbol(method)]: "POST",
2025-09-08T20:07:22:       maxHeaderSize: undefined,
2025-09-08T20:07:22:       [Symbol(maxHeaderSize)]: undefined,
2025-09-08T20:07:22:       insecureHTTPParser: undefined,
2025-09-08T20:07:22:       joinDuplicateHeaders: undefined,
2025-09-08T20:07:22:       [Symbol(path)]: "/student/exam-history?page=0&size=10",
2025-09-08T20:07:22:       _events: [Object ...],
2025-09-08T20:07:22:       _eventsCount: 7,
2025-09-08T20:07:22:       finished: true,
2025-09-08T20:07:22:       [Symbol(res)]: null,
2025-09-08T20:07:22:       [Symbol(upgradeOrConnect)]: false,
2025-09-08T20:07:22:       [Symbol(parser)]: null,
2025-09-08T20:07:22:       [Symbol(maxHeadersCount)]: null,
2025-09-08T20:07:22:       [Symbol(reusedSocket)]: false,
2025-09-08T20:07:22:       [Symbol(headers)]: Headers [Object ...],
2025-09-08T20:07:22:       [Symbol(options)]: [Object ...],
2025-09-08T20:07:22:       _httpMessage: [Circular],
2025-09-08T20:07:22:       [Symbol(emitState)]: 14,
2025-09-08T20:07:22:       setSocketKeepAlive: [Function],
2025-09-08T20:07:22:       setNoDelay: [Function],
2025-09-08T20:07:22:       [Symbol(kClearTimeout)]: [Function],
2025-09-08T20:07:22:       _redirectable: [Circular],
2025-09-08T20:07:22:       [Symbol(fakeSocket)]: [Object ...],
2025-09-08T20:07:22:       [Symbol(bodyChunks)]: [
2025-09-08T20:07:22:         <Buffer 7b 22 6e 61 6d 65 22 3a 22 ed 95 99 ec 83 9d 22 2c 22 62 69 72 74 68 44 61 74 65 22 3a 22 32 30 39 39 2d 30 39 2d 31 35 22 2c 22 70 68 6f 6e 65 22 3a ... 16 more bytes>
2025-09-08T20:07:22:       ],
2025-09-08T20:07:22:       [Symbol(fetchRequest)]: null,
2025-09-08T20:07:22:       setTimeout: [Function: setTimeout],
2025-09-08T20:07:22:       clearTimeout: [Function: clearTimeout],
2025-09-08T20:07:22:       path: [Getter],
2025-09-08T20:07:22:       port: [Getter],
2025-09-08T20:07:22:       method: [Getter],
2025-09-08T20:07:22:       host: [Getter],
2025-09-08T20:07:22:       protocol: [Getter],
2025-09-08T20:07:22:       agent: [Getter/Setter],
2025-09-08T20:07:22:       aborted: [Getter/Setter],
2025-09-08T20:07:22:       writable: [Getter],
2025-09-08T20:07:22:       _keepAliveTimeout: 0,
2025-09-08T20:07:22:       _defaultKeepAlive: true,
2025-09-08T20:07:22:       shouldKeepAlive: true,
2025-09-08T20:07:22:       _onPendingData: [Function: nop2],
2025-09-08T20:07:22:       outputSize: 0,
2025-09-08T20:07:22:       outputData: [],
2025-09-08T20:07:22:       strictContentLength: false,
2025-09-08T20:07:22:       _removedTE: false,
2025-09-08T20:07:22:       _removedContLen: false,
2025-09-08T20:07:22:       _removedConnection: false,
2025-09-08T20:07:22:       usesChunkedEncodingByDefault: true,
2025-09-08T20:07:22:       _closed: false,
2025-09-08T20:07:22:       _headerNames: [Getter/Setter],
2025-09-08T20:07:22:       appendHeader: [Function: appendHeader],
2025-09-08T20:07:22:       _implicitHeader: [Function: _implicitHeader],
2025-09-08T20:07:22:       getHeader: [Function: getHeader],
2025-09-08T20:07:22:       pipe: [Function: pipe],
2025-09-08T20:07:22:       getHeaderNames: [Function: getHeaderNames],
2025-09-08T20:07:22:       getRawHeaderNames: [Function: getRawHeaderNames],
2025-09-08T20:07:22:       getHeaders: [Function: getHeaders],
2025-09-08T20:07:22:       removeHeader: [Function: removeHeader],
2025-09-08T20:07:22:       setHeader: [Function: setHeader],
2025-09-08T20:07:22:       setHeaders: [Function: setHeaders],
2025-09-08T20:07:22:       hasHeader: [Function: hasHeader],
2025-09-08T20:07:22:       headers: [Getter/Setter],
2025-09-08T20:07:22:       addTrailers: [Function: addTrailers],
2025-09-08T20:07:22:       connection: [Getter/Setter],
2025-09-08T20:07:22:       socket: [Getter/Setter],
2025-09-08T20:07:22:       chunkedEncoding: [Getter/Setter],
2025-09-08T20:07:22:       writableObjectMode: [Getter],
2025-09-08T20:07:22:       writableLength: [Getter],
2025-09-08T20:07:22:       writableHighWaterMark: [Getter],
2025-09-08T20:07:22:       writableNeedDrain: [Getter],
2025-09-08T20:07:22:       writableEnded: [Getter],
2025-09-08T20:07:22:       writableFinished: [Getter],
2025-09-08T20:07:22:       _send: [Function: _send],
2025-09-08T20:07:22:       _writeRaw: [Function: _writeRaw],
2025-09-08T20:07:22:       writableCorked: [Getter/Setter],
2025-09-08T20:07:22:       cork: [Function: cork],
2025-09-08T20:07:22:       uncork: [Function: uncork],
2025-09-08T20:07:22:       _headers: [Getter/Setter],
2025-09-08T20:07:22:       eventNames: [Function: eventNames],
2025-09-08T20:07:22:       setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:07:22:       getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:07:22:       emit: [Function: emit],
2025-09-08T20:07:22:       addListener: [Function: addListener],
2025-09-08T20:07:22:       on: [Function: addListener],
2025-09-08T20:07:22:       prependListener: [Function: prependListener],
2025-09-08T20:07:22:       once: [Function: once],
2025-09-08T20:07:22:       prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:07:22:       removeListener: [Function: removeListener],
2025-09-08T20:07:22:       off: [Function: removeListener],
2025-09-08T20:07:22:       removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:07:22:       listeners: [Function: listeners],
2025-09-08T20:07:22:       rawListeners: [Function: rawListeners],
2025-09-08T20:07:22:       listenerCount: [Function: listenerCount],
2025-09-08T20:07:22:       [Symbol(kCapture)]: false,
2025-09-08T20:07:22:     },
2025-09-08T20:07:22:     _currentUrl: "http://localhost:3055/api/student/exam-history?page=0&size=10",
2025-09-08T20:07:22:     _timeout: null,
2025-09-08T20:07:22:     abort: [Function],
2025-09-08T20:07:22:     destroy: [Function],
2025-09-08T20:07:22:     write: [Function],
2025-09-08T20:07:22:     end: [Function],
2025-09-08T20:07:22:     setHeader: [Function],
2025-09-08T20:07:22:     removeHeader: [Function],
2025-09-08T20:07:22:     setTimeout: [Function],
2025-09-08T20:07:22:     flushHeaders: [Function],
2025-09-08T20:07:22:     getHeader: [Function],
2025-09-08T20:07:22:     setNoDelay: [Function],
2025-09-08T20:07:22:     setSocketKeepAlive: [Function],
2025-09-08T20:07:22:     aborted: [Getter],
2025-09-08T20:07:22:     connection: [Getter],
2025-09-08T20:07:22:     socket: [Getter],
2025-09-08T20:07:22:     _sanitizeOptions: [Function],
2025-09-08T20:07:22:     _performRequest: [Function],
2025-09-08T20:07:22:     _processResponse: [Function],
2025-09-08T20:07:22:     pipe: [Function],
2025-09-08T20:07:22:     cork: [Function],
2025-09-08T20:07:22:     uncork: [Function],
2025-09-08T20:07:22:     setDefaultEncoding: [Function: setDefaultEncoding],
2025-09-08T20:07:22:     _write: [Function],
2025-09-08T20:07:22:     _writev: null,
2025-09-08T20:07:22:     closed: [Getter],
2025-09-08T20:07:22:     destroyed: [Getter/Setter],
2025-09-08T20:07:22:     writable: [Getter/Setter],
2025-09-08T20:07:22:     writableFinished: [Getter],
2025-09-08T20:07:22:     writableObjectMode: [Getter],
2025-09-08T20:07:22:     writableBuffer: [Getter],
2025-09-08T20:07:22:     writableEnded: [Getter],
2025-09-08T20:07:22:     writableNeedDrain: [Getter],
2025-09-08T20:07:22:     writableHighWaterMark: [Getter],
2025-09-08T20:07:22:     writableCorked: [Getter],
2025-09-08T20:07:22:     writableLength: [Getter],
2025-09-08T20:07:22:     errored: [Getter],
2025-09-08T20:07:22:     writableAborted: [Getter],
2025-09-08T20:07:22:     _undestroy: [Function: undestroy],
2025-09-08T20:07:22:     _destroy: [Function],
2025-09-08T20:07:22:     [Symbol(nodejs.rejection)]: [Function],
2025-09-08T20:07:22:     [Symbol(Symbol.asyncDispose)]: [Function],
2025-09-08T20:07:22:     eventNames: [Function: eventNames],
2025-09-08T20:07:22:     setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:07:22:     getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:07:22:     emit: [Function: emit],
2025-09-08T20:07:22:     addListener: [Function: addListener],
2025-09-08T20:07:22:     on: [Function: addListener],
2025-09-08T20:07:22:     prependListener: [Function: prependListener],
2025-09-08T20:07:22:     once: [Function: once],
2025-09-08T20:07:22:     prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:07:22:     removeListener: [Function: removeListener],
2025-09-08T20:07:22:     off: [Function: removeListener],
2025-09-08T20:07:22:     removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:07:22:     listeners: [Function: listeners],
2025-09-08T20:07:22:     rawListeners: [Function: rawListeners],
2025-09-08T20:07:22:     listenerCount: [Function: listenerCount],
2025-09-08T20:07:22:   },
2025-09-08T20:07:22:   cause: error: ECONNREFUSED
2025-09-08T20:07:22:  code: "ECONNREFUSED"
2025-09-08T20:07:22: 
2025-09-08T20:07:22:       at node:_http_client:247:28
2025-09-08T20:07:22: ,
2025-09-08T20:07:22:   toJSON: [Function: toJSON],
2025-09-08T20:07:22:   isAxiosError: true,
2025-09-08T20:07:22:   toString: [Function: toString],
2025-09-08T20:07:22: }
2025-09-08T20:16:46: ❌ [Auth API Request Error] AxiosError {
2025-09-08T20:16:46:   stack: "Error\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/core/AxiosError.js:92:14)\n    at handleRequestError (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/adapters/http.js:620:25)\n    at emitError (node:events:43:23)\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/follow-redirects/index.js:49:24)\n    at emitError (node:events:43:23)\n    at <anonymous> (node:_http_client:251:22)\n    at processTicksAndRejections (native:7:39)",
2025-09-08T20:16:46:   sourceURL: "node:_http_client",
2025-09-08T20:16:46:   column: 28,
2025-09-08T20:16:46:   line: 247,
2025-09-08T20:16:46:   originalColumn: 18,
2025-09-08T20:16:46:   originalLine: 62,
2025-09-08T20:16:46:   code: "ECONNREFUSED",
2025-09-08T20:16:46:   message: "ECONNREFUSED",
2025-09-08T20:16:46:   name: "Error",
2025-09-08T20:16:46:   config: {
2025-09-08T20:16:46:     transitional: {
2025-09-08T20:16:46:       silentJSONParsing: true,
2025-09-08T20:16:46:       forcedJSONParsing: true,
2025-09-08T20:16:46:       clarifyTimeoutError: false,
2025-09-08T20:16:46:     },
2025-09-08T20:16:46:     adapter: [ "xhr", "http", "fetch" ],
2025-09-08T20:16:46:     transformRequest: [
2025-09-08T20:16:46:       [Function: transformRequest]
2025-09-08T20:16:46:     ],
2025-09-08T20:16:46:     transformResponse: [
2025-09-08T20:16:46:       [Function: transformResponse]
2025-09-08T20:16:46:     ],
2025-09-08T20:16:46:     timeout: 10000,
2025-09-08T20:16:46:     xsrfCookieName: "XSRF-TOKEN",
2025-09-08T20:16:46:     xsrfHeaderName: "X-XSRF-TOKEN",
2025-09-08T20:16:46:     maxContentLength: -1,
2025-09-08T20:16:46:     maxBodyLength: -1,
2025-09-08T20:16:46:     env: {
2025-09-08T20:16:46:       FormData: [Function: FormData],
2025-09-08T20:16:46:       Blob: [class Blob],
2025-09-08T20:16:46:     },
2025-09-08T20:16:46:     validateStatus: [Function: validateStatus],
2025-09-08T20:16:46:     headers: {
2025-09-08T20:16:46:       Accept: "application/json",
2025-09-08T20:16:46:       "Content-Type": "application/json",
2025-09-08T20:16:46:       "User-Agent": "axios/1.11.0",
2025-09-08T20:16:46:       "Content-Length": "85",
2025-09-08T20:16:46:       "Accept-Encoding": "gzip, compress, deflate, br",
2025-09-08T20:16:46:       set: [Getter/Setter],
2025-09-08T20:16:46:       get: [Getter/Setter],
2025-09-08T20:16:46:       has: [Getter/Setter],
2025-09-08T20:16:46:       delete: [Getter/Setter],
2025-09-08T20:16:46:       clear: [Getter/Setter],
2025-09-08T20:16:46:       normalize: [Getter/Setter],
2025-09-08T20:16:46:       concat: [Getter/Setter],
2025-09-08T20:16:46:       toJSON: [Getter/Setter],
2025-09-08T20:16:46:       toString: [Getter/Setter],
2025-09-08T20:16:46:       getSetCookie: [Getter/Setter],
2025-09-08T20:16:46:       getContentType: [Getter/Setter],
2025-09-08T20:16:46:       setContentType: [Getter/Setter],
2025-09-08T20:16:46:       hasContentType: [Getter/Setter],
2025-09-08T20:16:46:       getContentLength: [Getter/Setter],
2025-09-08T20:16:46:       setContentLength: [Getter/Setter],
2025-09-08T20:16:46:       hasContentLength: [Getter/Setter],
2025-09-08T20:16:46:       getAccept: [Getter/Setter],
2025-09-08T20:16:46:       setAccept: [Getter/Setter],
2025-09-08T20:16:46:       hasAccept: [Getter/Setter],
2025-09-08T20:16:46:       getAcceptEncoding: [Getter/Setter],
2025-09-08T20:16:46:       setAcceptEncoding: [Getter/Setter],
2025-09-08T20:16:46:       hasAcceptEncoding: [Getter/Setter],
2025-09-08T20:16:46:       getUserAgent: [Getter/Setter],
2025-09-08T20:16:46:       setUserAgent: [Getter/Setter],
2025-09-08T20:16:46:       hasUserAgent: [Getter/Setter],
2025-09-08T20:16:46:       getAuthorization: [Getter/Setter],
2025-09-08T20:16:46:       setAuthorization: [Getter/Setter],
2025-09-08T20:16:46:       hasAuthorization: [Getter/Setter],
2025-09-08T20:16:46:       [Symbol(Symbol.iterator)]: [Function],
2025-09-08T20:16:46:     },
2025-09-08T20:16:46:     baseURL: "http://localhost:3055",
2025-09-08T20:16:46:     withCredentials: false,
2025-09-08T20:16:46:     method: "post",
2025-09-08T20:16:46:     url: "/student/recent-submissions",
2025-09-08T20:16:46:     data: "{\"name\":\"학생\",\"birthDate\":\"2099-09-15\",\"phone\":\"010-2790-6727\",\"page\":0,\"size\":10}",
2025-09-08T20:16:46:     allowAbsoluteUrls: true,
2025-09-08T20:16:46:   },
2025-09-08T20:16:46:   request: Writable {
2025-09-08T20:16:46:     _events: {
2025-09-08T20:16:46:       error: [
2025-09-08T20:16:46:         [Function: handleRequestError]
2025-09-08T20:16:46:       ],
2025-09-08T20:16:46:       prefinish: undefined,
2025-09-08T20:16:46:       finish: undefined,
2025-09-08T20:16:46:       drain: undefined,
2025-09-08T20:16:46:       response: [
2025-09-08T20:16:46:         [Function: handleResponse]
2025-09-08T20:16:46:       ],
2025-09-08T20:16:46:       socket: [
2025-09-08T20:16:46:         [Function: handleRequestSocket], [Function: destroyOnTimeout]
2025-09-08T20:16:46:       ],
2025-09-08T20:16:46:     },
2025-09-08T20:16:46:     _writableState: {
2025-09-08T20:16:46:       [Symbol(kState)]: 17580812,
2025-09-08T20:16:46:       highWaterMark: 65536,
2025-09-08T20:16:46:       length: 0,
2025-09-08T20:16:46:       corked: 0,
2025-09-08T20:16:46:       onwrite: [Function: onwrite],
2025-09-08T20:16:46:       writelen: 0,
2025-09-08T20:16:46:       [Symbol(kBufferedValue)]: null,
2025-09-08T20:16:46:       bufferedIndex: 0,
2025-09-08T20:16:46:       pendingcb: 0,
2025-09-08T20:16:46:       objectMode: [Getter/Setter],
2025-09-08T20:16:46:       finalCalled: [Getter/Setter],
2025-09-08T20:16:46:       needDrain: [Getter/Setter],
2025-09-08T20:16:46:       ending: [Getter/Setter],
2025-09-08T20:16:46:       ended: [Getter/Setter],
2025-09-08T20:16:46:       finished: [Getter/Setter],
2025-09-08T20:16:46:       destroyed: [Getter/Setter],
2025-09-08T20:16:46:       decodeStrings: [Getter/Setter],
2025-09-08T20:16:46:       writing: [Getter/Setter],
2025-09-08T20:16:46:       sync: [Getter/Setter],
2025-09-08T20:16:46:       bufferProcessing: [Getter/Setter],
2025-09-08T20:16:46:       constructed: [Getter/Setter],
2025-09-08T20:16:46:       prefinished: [Getter/Setter],
2025-09-08T20:16:46:       errorEmitted: [Getter/Setter],
2025-09-08T20:16:46:       emitClose: [Getter/Setter],
2025-09-08T20:16:46: autoDestroy: [Getter/Setter],
2025-09-08T20:16:46:       closed: [Getter/Setter],
2025-09-08T20:16:46:       closeEmitted: [Getter/Setter],
2025-09-08T20:16:46:       allBuffers: [Getter/Setter],
2025-09-08T20:16:46:       allNoop: [Getter/Setter],
2025-09-08T20:16:46:       errored: [Getter/Setter],
2025-09-08T20:16:46:       writable: [Getter/Setter],
2025-09-08T20:16:46:       defaultEncoding: [Getter/Setter],
2025-09-08T20:16:46:       writecb: [Getter/Setter],
2025-09-08T20:16:46:       afterWriteTickInfo: [Getter/Setter],
2025-09-08T20:16:46:       buffered: [Getter/Setter],
2025-09-08T20:16:46:       getBuffer: [Function: getBuffer],
2025-09-08T20:16:46:       bufferedRequestCount: [Getter],
2025-09-08T20:16:46:       [Symbol(kOnConstructed)]: [Function: onConstructed],
2025-09-08T20:16:46:     },
2025-09-08T20:16:46:     _maxListeners: undefined,
2025-09-08T20:16:46:     [Symbol(kCapture)]: false,
2025-09-08T20:16:46:     _options: {
2025-09-08T20:16:46:       maxRedirects: 21,
2025-09-08T20:16:46:       maxBodyLength: Infinity,
2025-09-08T20:16:46:       protocol: "http:",
2025-09-08T20:16:46:       path: "/student/recent-submissions",
2025-09-08T20:16:46:       method: "POST",
2025-09-08T20:16:46:       headers: [Object ...],
2025-09-08T20:16:46:       agents: [Object ...],
2025-09-08T20:16:46:       auth: undefined,
2025-09-08T20:16:46:       family: undefined,
2025-09-08T20:16:46:       beforeRedirect: [Function: dispatchBeforeRedirect],
2025-09-08T20:16:46:       beforeRedirects: [Object ...],
2025-09-08T20:16:46:       hostname: "localhost",
2025-09-08T20:16:46:       port: "3055",
2025-09-08T20:16:46:       agent: undefined,
2025-09-08T20:16:46:       nativeProtocols: [Object ...],
2025-09-08T20:16:46:       pathname: "/student/recent-submissions",
2025-09-08T20:16:46:     },
2025-09-08T20:16:46:     _ended: true,
2025-09-08T20:16:46:     _ending: true,
2025-09-08T20:16:46:     _redirectCount: 0,
2025-09-08T20:16:46:     _redirects: [],
2025-09-08T20:16:46:     _requestBodyLength: 85,
2025-09-08T20:16:46:     _requestBodyBuffers: [
2025-09-08T20:16:46:       [Object ...]
2025-09-08T20:16:46:     ],
2025-09-08T20:16:46:     _eventsCount: NaN,
2025-09-08T20:16:46:     _onNativeResponse: [Function],
2025-09-08T20:16:46:     _currentRequest: ClientRequest {
2025-09-08T20:16:46:       write: [Function],
2025-09-08T20:16:46:       end: [Function],
2025-09-08T20:16:46:       flushHeaders: [Function],
2025-09-08T20:16:46:       destroy: [Function],
2025-09-08T20:16:46:       _ensureTls: [Function],
2025-09-08T20:16:46:       abort: [Function],
2025-09-08T20:16:46:       [Symbol(tls)]: null,
2025-09-08T20:16:46:       [Symbol(kAbortController)]: [AbortController ...],
2025-09-08T20:16:46:       [Symbol(agent)]: [Object ...],
2025-09-08T20:16:46:       destroyed: false,
2025-09-08T20:16:46:       [Symbol(protocol)]: "http:",
2025-09-08T20:16:46:       [Symbol(port)]: "3055",
2025-09-08T20:16:46:       [Symbol(useDefaultPort)]: false,
2025-09-08T20:16:46:       [Symbol(host)]: "localhost",
2025-09-08T20:16:46:       [Symbol(socketPath)]: undefined,
2025-09-08T20:16:46:       [Symbol(method)]: "POST",
2025-09-08T20:16:46:       maxHeaderSize: undefined,
2025-09-08T20:16:46:       [Symbol(maxHeaderSize)]: undefined,
2025-09-08T20:16:46:       insecureHTTPParser: undefined,
2025-09-08T20:16:46:       joinDuplicateHeaders: undefined,
2025-09-08T20:16:46:       [Symbol(path)]: "/student/recent-submissions",
2025-09-08T20:16:46:       _events: [Object ...],
2025-09-08T20:16:46:       _eventsCount: 7,
2025-09-08T20:16:46:       finished: true,
2025-09-08T20:16:46:       [Symbol(res)]: null,
2025-09-08T20:16:46:       [Symbol(upgradeOrConnect)]: false,
2025-09-08T20:16:46:       [Symbol(parser)]: null,
2025-09-08T20:16:46:       [Symbol(maxHeadersCount)]: null,
2025-09-08T20:16:46:       [Symbol(reusedSocket)]: false,
2025-09-08T20:16:46:       [Symbol(headers)]: Headers [Object ...],
2025-09-08T20:16:46:       [Symbol(options)]: [Object ...],
2025-09-08T20:16:46:       _httpMessage: [Circular],
2025-09-08T20:16:46:       [Symbol(emitState)]: 14,
2025-09-08T20:16:46:       setSocketKeepAlive: [Function],
2025-09-08T20:16:46:       setNoDelay: [Function],
2025-09-08T20:16:46:       [Symbol(kClearTimeout)]: [Function],
2025-09-08T20:16:46:       _redirectable: [Circular],
2025-09-08T20:16:46:       [Symbol(fakeSocket)]: [Object ...],
2025-09-08T20:16:46:       [Symbol(bodyChunks)]: [
2025-09-08T20:16:46:         <Buffer 7b 22 6e 61 6d 65 22 3a 22 ed 95 99 ec 83 9d 22 2c 22 62 69 72 74 68 44 61 74 65 22 3a 22 32 30 39 39 2d 30 39 2d 31 35 22 2c 22 70 68 6f 6e 65 22 3a ... 35 more bytes>
2025-09-08T20:16:46:       ],
2025-09-08T20:16:46:       [Symbol(fetchRequest)]: null,
2025-09-08T20:16:46:       setTimeout: [Function: setTimeout],
2025-09-08T20:16:46:       clearTimeout: [Function: clearTimeout],
2025-09-08T20:16:46:       path: [Getter],
2025-09-08T20:16:46:       port: [Getter],
2025-09-08T20:16:46:       method: [Getter],
2025-09-08T20:16:46:       host: [Getter],
2025-09-08T20:16:46:       protocol: [Getter],
2025-09-08T20:16:46:       agent: [Getter/Setter],
2025-09-08T20:16:46:       aborted: [Getter/Setter],
2025-09-08T20:16:46:       writable: [Getter],
2025-09-08T20:16:46:       _keepAliveTimeout: 0,
2025-09-08T20:16:46:       _defaultKeepAlive: true,
2025-09-08T20:16:46:       shouldKeepAlive: true,
2025-09-08T20:16:46:       _onPendingData: [Function: nop2],
2025-09-08T20:16:46:       outputSize: 0,
2025-09-08T20:16:46:       outputData: [],
2025-09-08T20:16:46:       strictContentLength: false,
2025-09-08T20:16:46:       _removedTE: false,
2025-09-08T20:16:46:       _removedContLen: false,
2025-09-08T20:16:46:       _removedConnection: false,
2025-09-08T20:16:46:       usesChunkedEncodingByDefault: true,
2025-09-08T20:16:46:       _closed: false,
2025-09-08T20:16:46:       _headerNames: [Getter/Setter],
2025-09-08T20:16:46:       appendHeader: [Function: appendHeader],
2025-09-08T20:16:46:       _implicitHeader: [Function: _implicitHeader],
2025-09-08T20:16:46:       getHeader: [Function: getHeader],
2025-09-08T20:16:46:       pipe: [Function: pipe],
2025-09-08T20:16:46:       getHeaderNames: [Function: getHeaderNames],
2025-09-08T20:16:46:       getRawHeaderNames: [Function: getRawHeaderNames],
2025-09-08T20:16:46:       getHeaders: [Function: getHeaders],
2025-09-08T20:16:46:       removeHeader: [Function: removeHeader],
2025-09-08T20:16:46:       setHeader: [Function: setHeader],
2025-09-08T20:16:46:       setHeaders: [Function: setHeaders],
2025-09-08T20:16:46:       hasHeader: [Function: hasHeader],
2025-09-08T20:16:46:       headers: [Getter/Setter],
2025-09-08T20:16:46:       addTrailers: [Function: addTrailers],
2025-09-08T20:16:46:       connection: [Getter/Setter],
2025-09-08T20:16:46:       socket: [Getter/Setter],
2025-09-08T20:16:46:       chunkedEncoding: [Getter/Setter],
2025-09-08T20:16:46:       writableObjectMode: [Getter],
2025-09-08T20:16:46:       writableLength: [Getter],
2025-09-08T20:16:46:       writableHighWaterMark: [Getter],
2025-09-08T20:16:46:       writableNeedDrain: [Getter],
2025-09-08T20:16:46:       writableEnded: [Getter],
2025-09-08T20:16:46:       writableFinished: [Getter],
2025-09-08T20:16:46:       _send: [Function: _send],
2025-09-08T20:16:46:       _writeRaw: [Function: _writeRaw],
2025-09-08T20:16:46:       writableCorked: [Getter/Setter],
2025-09-08T20:16:46:       cork: [Function: cork],
2025-09-08T20:16:46:       uncork: [Function: uncork],
2025-09-08T20:16:46:       _headers: [Getter/Setter],
2025-09-08T20:16:46:       eventNames: [Function: eventNames],
2025-09-08T20:16:46:       setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:16:46:       getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:16:46:       emit: [Function: emit],
2025-09-08T20:16:46:       addListener: [Function: addListener],
2025-09-08T20:16:46:       on: [Function: addListener],
2025-09-08T20:16:46:       prependListener: [Function: prependListener],
2025-09-08T20:16:46:       once: [Function: once],
2025-09-08T20:16:46:       prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:16:46:       removeListener: [Function: removeListener],
2025-09-08T20:16:46:       off: [Function: removeListener],
2025-09-08T20:16:46:       removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:16:46:       listeners: [Function: listeners],
2025-09-08T20:16:46:       rawListeners: [Function: rawListeners],
2025-09-08T20:16:46:       listenerCount: [Function: listenerCount],
2025-09-08T20:16:46:       [Symbol(kCapture)]: false,
2025-09-08T20:16:46:     },
2025-09-08T20:16:46:     _currentUrl: "http://localhost:3055/api/student/recent-submissions",
2025-09-08T20:16:46:     _timeout: null,
2025-09-08T20:16:46:     abort: [Function],
2025-09-08T20:16:46:     destroy: [Function],
2025-09-08T20:16:46:     write: [Function],
2025-09-08T20:16:46:     end: [Function],
2025-09-08T20:16:46:     setHeader: [Function],
2025-09-08T20:16:46:     removeHeader: [Function],
2025-09-08T20:16:46:     setTimeout: [Function],
2025-09-08T20:16:46:     flushHeaders: [Function],
2025-09-08T20:16:46:     getHeader: [Function],
2025-09-08T20:16:46:     setNoDelay: [Function],
2025-09-08T20:16:46:     setSocketKeepAlive: [Function],
2025-09-08T20:16:46:     aborted: [Getter],
2025-09-08T20:16:46:     connection: [Getter],
2025-09-08T20:16:46:     socket: [Getter],
2025-09-08T20:16:46:     _sanitizeOptions: [Function],
2025-09-08T20:16:46:     _performRequest: [Function],
2025-09-08T20:16:46:     _processResponse: [Function],
2025-09-08T20:16:46:     pipe: [Function],
2025-09-08T20:16:46:     cork: [Function],
2025-09-08T20:16:46:     uncork: [Function],
2025-09-08T20:16:46:     setDefaultEncoding: [Function: setDefaultEncoding],
2025-09-08T20:16:46:     _write: [Function],
2025-09-08T20:16:46:     _writev: null,
2025-09-08T20:16:46:     closed: [Getter],
2025-09-08T20:16:46:     destroyed: [Getter/Setter],
2025-09-08T20:16:46:     writable: [Getter/Setter],
2025-09-08T20:16:46:     writableFinished: [Getter],
2025-09-08T20:16:46:     writableObjectMode: [Getter],
2025-09-08T20:16:46:     writableBuffer: [Getter],
2025-09-08T20:16:46:     writableEnded: [Getter],
2025-09-08T20:16:46:     writableNeedDrain: [Getter],
2025-09-08T20:16:46:     writableHighWaterMark: [Getter],
2025-09-08T20:16:46:     writableCorked: [Getter],
2025-09-08T20:16:46:     writableLength: [Getter],
2025-09-08T20:16:46:     errored: [Getter],
2025-09-08T20:16:46:     writableAborted: [Getter],
2025-09-08T20:16:46:     _undestroy: [Function: undestroy],
2025-09-08T20:16:46:     _destroy: [Function],
2025-09-08T20:16:46:     [Symbol(nodejs.rejection)]: [Function],
2025-09-08T20:16:46:     [Symbol(Symbol.asyncDispose)]: [Function],
2025-09-08T20:16:46:     eventNames: [Function: eventNames],
2025-09-08T20:16:46:     setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:16:46:     getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:16:46:     emit: [Function: emit],
2025-09-08T20:16:46:     addListener: [Function: addListener],
2025-09-08T20:16:46:     on: [Function: addListener],
2025-09-08T20:16:46:     prependListener: [Function: prependListener],
2025-09-08T20:16:46:     once: [Function: once],
2025-09-08T20:16:46:     prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:16:46:     removeListener: [Function: removeListener],
2025-09-08T20:16:46:     off: [Function: removeListener],
2025-09-08T20:16:46:     removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:16:46:     listeners: [Function: listeners],
2025-09-08T20:16:46:     rawListeners: [Function: rawListeners],
2025-09-08T20:16:46:     listenerCount: [Function: listenerCount],
2025-09-08T20:16:46:   },
2025-09-08T20:16:46:   cause: error: ECONNREFUSED
2025-09-08T20:16:46:  code: "ECONNREFUSED"
2025-09-08T20:16:46: 
2025-09-08T20:16:46:       at node:_http_client:247:28
2025-09-08T20:16:46: ,
2025-09-08T20:16:46:   toJSON: [Function: toJSON],
2025-09-08T20:16:46:   isAxiosError: true,
2025-09-08T20:16:46:   toString: [Function: toString],
2025-09-08T20:16:46: }
2025-09-08T20:16:46: ❌ [Auth API Request Error] AxiosError {
2025-09-08T20:16:46:   stack: "Error\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/core/AxiosError.js:92:14)\n    at handleRequestError (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/adapters/http.js:620:25)\n    at emitError (node:events:43:23)\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/follow-redirects/index.js:49:24)\n    at emitError (node:events:43:23)\n    at <anonymous> (node:_http_client:251:22)\n    at processTicksAndRejections (native:7:39)",
2025-09-08T20:16:46:   sourceURL: "node:_http_client",
2025-09-08T20:16:46:   column: 28,
2025-09-08T20:16:46:   line: 247,
2025-09-08T20:16:46:   originalColumn: 18,
2025-09-08T20:16:46:   originalLine: 62,
2025-09-08T20:16:46:   code: "ECONNREFUSED",
2025-09-08T20:16:46:   message: "ECONNREFUSED",
2025-09-08T20:16:46:   name: "Error",
2025-09-08T20:16:46:   config: {
2025-09-08T20:16:46:     transitional: {
2025-09-08T20:16:46:       silentJSONParsing: true,
2025-09-08T20:16:46:       forcedJSONParsing: true,
2025-09-08T20:16:46:       clarifyTimeoutError: false,
2025-09-08T20:16:46:     },
2025-09-08T20:16:46:     adapter: [ "xhr", "http", "fetch" ],
2025-09-08T20:16:46:     transformRequest: [
2025-09-08T20:16:46:       [Function: transformRequest]
2025-09-08T20:16:46:     ],
2025-09-08T20:16:46:     transformResponse: [
2025-09-08T20:16:46:       [Function: transformResponse]
2025-09-08T20:16:46:     ],
2025-09-08T20:16:46:     timeout: 10000,
2025-09-08T20:16:46:     xsrfCookieName: "XSRF-TOKEN",
2025-09-08T20:16:46:     xsrfHeaderName: "X-XSRF-TOKEN",
2025-09-08T20:16:46:     maxContentLength: -1,
2025-09-08T20:16:46:     maxBodyLength: -1,
2025-09-08T20:16:46:     env: {
2025-09-08T20:16:46:       FormData: [Function: FormData],
2025-09-08T20:16:46:       Blob: [class Blob],
2025-09-08T20:16:46:     },
2025-09-08T20:16:46:     validateStatus: [Function: validateStatus],
2025-09-08T20:16:46:     headers: {
2025-09-08T20:16:46:       Accept: "application/json",
2025-09-08T20:16:46:       "Content-Type": "application/json",
2025-09-08T20:16:46:       "User-Agent": "axios/1.11.0",
2025-09-08T20:16:46:       "Content-Length": "66",
2025-09-08T20:16:46:       "Accept-Encoding": "gzip, compress, deflate, br",
2025-09-08T20:16:46:       set: [Getter/Setter],
2025-09-08T20:16:46:       get: [Getter/Setter],
2025-09-08T20:16:46:       has: [Getter/Setter],
2025-09-08T20:16:46:       delete: [Getter/Setter],
2025-09-08T20:16:46:       clear: [Getter/Setter],
2025-09-08T20:16:46:       normalize: [Getter/Setter],
2025-09-08T20:16:46:       concat: [Getter/Setter],
2025-09-08T20:16:46:       toJSON: [Getter/Setter],
2025-09-08T20:16:46:       toString: [Getter/Setter],
2025-09-08T20:16:46:       getSetCookie: [Getter/Setter],
2025-09-08T20:16:46:       getContentType: [Getter/Setter],
2025-09-08T20:16:46:       setContentType: [Getter/Setter],
2025-09-08T20:16:46:       hasContentType: [Getter/Setter],
2025-09-08T20:16:46:       getContentLength: [Getter/Setter],
2025-09-08T20:16:46:       setContentLength: [Getter/Setter],
2025-09-08T20:16:46:       hasContentLength: [Getter/Setter],
2025-09-08T20:16:46:       getAccept: [Getter/Setter],
2025-09-08T20:16:46:       setAccept: [Getter/Setter],
2025-09-08T20:16:46:       hasAccept: [Getter/Setter],
2025-09-08T20:16:46:       getAcceptEncoding: [Getter/Setter],
2025-09-08T20:16:46:       setAcceptEncoding: [Getter/Setter],
2025-09-08T20:16:46:       hasAcceptEncoding: [Getter/Setter],
2025-09-08T20:16:46:       getUserAgent: [Getter/Setter],
2025-09-08T20:16:46:       setUserAgent: [Getter/Setter],
2025-09-08T20:16:46:       hasUserAgent: [Getter/Setter],
2025-09-08T20:16:46:       getAuthorization: [Getter/Setter],
2025-09-08T20:16:46:       setAuthorization: [Getter/Setter],
2025-09-08T20:16:46:       hasAuthorization: [Getter/Setter],
2025-09-08T20:16:46:       [Symbol(Symbol.iterator)]: [Function],
2025-09-08T20:16:46:     },
2025-09-08T20:16:46:     baseURL: "http://localhost:3055",
2025-09-08T20:16:46:     withCredentials: false,
2025-09-08T20:16:46:     method: "post",
2025-09-08T20:16:46:     url: "/student/exam-history?page=0&size=10",
2025-09-08T20:16:46:     data: "{\"name\":\"학생\",\"birthDate\":\"2099-09-15\",\"phone\":\"010-2790-6727\"}",
2025-09-08T20:16:46:     allowAbsoluteUrls: true,
2025-09-08T20:16:46:   },
2025-09-08T20:16:46:   request: Writable {
2025-09-08T20:16:46:     _events: {
2025-09-08T20:16:46:       error: [
2025-09-08T20:16:46:         [Function: handleRequestError]
2025-09-08T20:16:46:       ],
2025-09-08T20:16:46:       prefinish: undefined,
2025-09-08T20:16:46:       finish: undefined,
2025-09-08T20:16:46:       drain: undefined,
2025-09-08T20:16:46:       response: [
2025-09-08T20:16:46:         [Function: handleResponse]
2025-09-08T20:16:46:       ],
2025-09-08T20:16:46:       socket: [
2025-09-08T20:16:46:         [Function: handleRequestSocket], [Function: destroyOnTimeout]
2025-09-08T20:16:46:       ],
2025-09-08T20:16:46:     },
2025-09-08T20:16:46:     _writableState: {
2025-09-08T20:16:46:       [Symbol(kState)]: 17580812,
2025-09-08T20:16:46:       highWaterMark: 65536,
2025-09-08T20:16:46:       length: 0,
2025-09-08T20:16:46:       corked: 0,
2025-09-08T20:16:46:       onwrite: [Function: onwrite],
2025-09-08T20:16:46:       writelen: 0,
2025-09-08T20:16:46:       [Symbol(kBufferedValue)]: null,
2025-09-08T20:16:46:       bufferedIndex: 0,
2025-09-08T20:16:46:       pendingcb: 0,
2025-09-08T20:16:46:       objectMode: [Getter/Setter],
2025-09-08T20:16:46:       finalCalled: [Getter/Setter],
2025-09-08T20:16:46:       needDrain: [Getter/Setter],
2025-09-08T20:16:46:       ending: [Getter/Setter],
2025-09-08T20:16:46:       ended: [Getter/Setter],
2025-09-08T20:16:46:       finished: [Getter/Setter],
2025-09-08T20:16:46:       destroyed: [Getter/Setter],
2025-09-08T20:16:46:       decodeStrings: [Getter/Setter],
2025-09-08T20:16:46:       writing: [Getter/Setter],
2025-09-08T20:16:46:       sync: [Getter/Setter],
2025-09-08T20:16:46:       bufferProcessing: [Getter/Setter],
2025-09-08T20:16:46:       constructed: [Getter/Setter],
2025-09-08T20:16:46:       prefinished: [Getter/Setter],
2025-09-08T20:16:46:       errorEmitted: [Getter/Setter],
2025-09-08T20:16:46:       emitClose: [Getter/Setter],
2025-09-08T20:16:46: [Getter/Setter],
2025-09-08T20:16:46:       closed: [Getter/Setter],
2025-09-08T20:16:46:       closeEmitted: [Getter/Setter],
2025-09-08T20:16:46:       allBuffers: [Getter/Setter],
2025-09-08T20:16:46:       allNoop: [Getter/Setter],
2025-09-08T20:16:46:       errored: [Getter/Setter],
2025-09-08T20:16:46:       writable: [Getter/Setter],
2025-09-08T20:16:46:       defaultEncoding: [Getter/Setter],
2025-09-08T20:16:46:       writecb: [Getter/Setter],
2025-09-08T20:16:46:       afterWriteTickInfo: [Getter/Setter],
2025-09-08T20:16:46:       buffered: [Getter/Setter],
2025-09-08T20:16:46:       getBuffer: [Function: getBuffer],
2025-09-08T20:16:46:       bufferedRequestCount: [Getter],
2025-09-08T20:16:46:       [Symbol(kOnConstructed)]: [Function: onConstructed],
2025-09-08T20:16:46:     },
2025-09-08T20:16:46:     _maxListeners: undefined,
2025-09-08T20:16:46:     [Symbol(kCapture)]: false,
2025-09-08T20:16:46:     _options: {
2025-09-08T20:16:46:       maxRedirects: 21,
2025-09-08T20:16:46:       maxBodyLength: Infinity,
2025-09-08T20:16:46:       protocol: "http:",
2025-09-08T20:16:46:       path: "/student/exam-history?page=0&size=10",
2025-09-08T20:16:46:       method: "POST",
2025-09-08T20:16:46:       headers: [Object ...],
2025-09-08T20:16:46:       agents: [Object ...],
2025-09-08T20:16:46:       auth: undefined,
2025-09-08T20:16:46:       family: undefined,
2025-09-08T20:16:46:       beforeRedirect: [Function: dispatchBeforeRedirect],
2025-09-08T20:16:46:       beforeRedirects: [Object ...],
2025-09-08T20:16:46:       hostname: "localhost",
2025-09-08T20:16:46:       port: "3055",
2025-09-08T20:16:46:       agent: undefined,
2025-09-08T20:16:46:       nativeProtocols: [Object ...],
2025-09-08T20:16:46:       pathname: "/student/exam-history",
2025-09-08T20:16:46:       search: "?page=0&size=10",
2025-09-08T20:16:46:     },
2025-09-08T20:16:46:     _ended: true,
2025-09-08T20:16:46:     _ending: true,
2025-09-08T20:16:46:     _redirectCount: 0,
2025-09-08T20:16:46:     _redirects: [],
2025-09-08T20:16:46:     _requestBodyLength: 66,
2025-09-08T20:16:46:     _requestBodyBuffers: [
2025-09-08T20:16:46:       [Object ...]
2025-09-08T20:16:46:     ],
2025-09-08T20:16:46:     _eventsCount: NaN,
2025-09-08T20:16:46:     _onNativeResponse: [Function],
2025-09-08T20:16:46:     _currentRequest: ClientRequest {
2025-09-08T20:16:46:       write: [Function],
2025-09-08T20:16:46:       end: [Function],
2025-09-08T20:16:46:       flushHeaders: [Function],
2025-09-08T20:16:46:       destroy: [Function],
2025-09-08T20:16:46:       _ensureTls: [Function],
2025-09-08T20:16:46:       abort: [Function],
2025-09-08T20:16:46:       [Symbol(tls)]: null,
2025-09-08T20:16:46:       [Symbol(kAbortController)]: [AbortController ...],
2025-09-08T20:16:46:       [Symbol(agent)]: [Object ...],
2025-09-08T20:16:46:       destroyed: false,
2025-09-08T20:16:46:       [Symbol(protocol)]: "http:",
2025-09-08T20:16:46:       [Symbol(port)]: "3055",
2025-09-08T20:16:46:       [Symbol(useDefaultPort)]: false,
2025-09-08T20:16:46:       [Symbol(host)]: "localhost",
2025-09-08T20:16:46:       [Symbol(socketPath)]: undefined,
2025-09-08T20:16:46:       [Symbol(method)]: "POST",
2025-09-08T20:16:46:       maxHeaderSize: undefined,
2025-09-08T20:16:46:       [Symbol(maxHeaderSize)]: undefined,
2025-09-08T20:16:46:       insecureHTTPParser: undefined,
2025-09-08T20:16:46:       joinDuplicateHeaders: undefined,
2025-09-08T20:16:46:       [Symbol(path)]: "/student/exam-history?page=0&size=10",
2025-09-08T20:16:46:       _events: [Object ...],
2025-09-08T20:16:46:       _eventsCount: 7,
2025-09-08T20:16:46:       finished: true,
2025-09-08T20:16:46:       [Symbol(res)]: null,
2025-09-08T20:16:46:       [Symbol(upgradeOrConnect)]: false,
2025-09-08T20:16:46:       [Symbol(parser)]: null,
2025-09-08T20:16:46:       [Symbol(maxHeadersCount)]: null,
2025-09-08T20:16:46:       [Symbol(reusedSocket)]: false,
2025-09-08T20:16:46:       [Symbol(headers)]: Headers [Object ...],
2025-09-08T20:16:46:       [Symbol(options)]: [Object ...],
2025-09-08T20:16:46:       _httpMessage: [Circular],
2025-09-08T20:16:46:       [Symbol(emitState)]: 14,
2025-09-08T20:16:46:       setSocketKeepAlive: [Function],
2025-09-08T20:16:46:       setNoDelay: [Function],
2025-09-08T20:16:46:       [Symbol(kClearTimeout)]: [Function],
2025-09-08T20:16:46:       _redirectable: [Circular],
2025-09-08T20:16:46:       [Symbol(fakeSocket)]: [Object ...],
2025-09-08T20:16:46:       [Symbol(bodyChunks)]: [
2025-09-08T20:16:46:         <Buffer 7b 22 6e 61 6d 65 22 3a 22 ed 95 99 ec 83 9d 22 2c 22 62 69 72 74 68 44 61 74 65 22 3a 22 32 30 39 39 2d 30 39 2d 31 35 22 2c 22 70 68 6f 6e 65 22 3a ... 16 more bytes>
2025-09-08T20:16:46:       ],
2025-09-08T20:16:46:       [Symbol(fetchRequest)]: null,
2025-09-08T20:16:46:       setTimeout: [Function: setTimeout],
2025-09-08T20:16:46:       clearTimeout: [Function: clearTimeout],
2025-09-08T20:16:46:       path: [Getter],
2025-09-08T20:16:46:       port: [Getter],
2025-09-08T20:16:46:       method: [Getter],
2025-09-08T20:16:46:       host: [Getter],
2025-09-08T20:16:46:       protocol: [Getter],
2025-09-08T20:16:46:       agent: [Getter/Setter],
2025-09-08T20:16:46:       aborted: [Getter/Setter],
2025-09-08T20:16:46:       writable: [Getter],
2025-09-08T20:16:46:       _keepAliveTimeout: 0,
2025-09-08T20:16:46:       _defaultKeepAlive: true,
2025-09-08T20:16:46:       shouldKeepAlive: true,
2025-09-08T20:16:46:       _onPendingData: [Function: nop2],
2025-09-08T20:16:46:       outputSize: 0,
2025-09-08T20:16:46:       outputData: [],
2025-09-08T20:16:46:       strictContentLength: false,
2025-09-08T20:16:46:       _removedTE: false,
2025-09-08T20:16:46:       _removedContLen: false,
2025-09-08T20:16:46:       _removedConnection: false,
2025-09-08T20:16:46:       usesChunkedEncodingByDefault: true,
2025-09-08T20:16:46:       _closed: false,
2025-09-08T20:16:46:       _headerNames: [Getter/Setter],
2025-09-08T20:16:46:       appendHeader: [Function: appendHeader],
2025-09-08T20:16:46:       _implicitHeader: [Function: _implicitHeader],
2025-09-08T20:16:46:       getHeader: [Function: getHeader],
2025-09-08T20:16:46:       pipe: [Function: pipe],
2025-09-08T20:16:46:       getHeaderNames: [Function: getHeaderNames],
2025-09-08T20:16:46:       getRawHeaderNames: [Function: getRawHeaderNames],
2025-09-08T20:16:46:       getHeaders: [Function: getHeaders],
2025-09-08T20:16:46:       removeHeader: [Function: removeHeader],
2025-09-08T20:16:46:       setHeader: [Function: setHeader],
2025-09-08T20:16:46:       setHeaders: [Function: setHeaders],
2025-09-08T20:16:46:       hasHeader: [Function: hasHeader],
2025-09-08T20:16:46:       headers: [Getter/Setter],
2025-09-08T20:16:46:       addTrailers: [Function: addTrailers],
2025-09-08T20:16:46:       connection: [Getter/Setter],
2025-09-08T20:16:46:       socket: [Getter/Setter],
2025-09-08T20:16:46:       chunkedEncoding: [Getter/Setter],
2025-09-08T20:16:46:       writableObjectMode: [Getter],
2025-09-08T20:16:46:       writableLength: [Getter],
2025-09-08T20:16:46:       writableHighWaterMark: [Getter],
2025-09-08T20:16:46:       writableNeedDrain: [Getter],
2025-09-08T20:16:46:       writableEnded: [Getter],
2025-09-08T20:16:46:       writableFinished: [Getter],
2025-09-08T20:16:46:       _send: [Function: _send],
2025-09-08T20:16:46:       _writeRaw: [Function: _writeRaw],
2025-09-08T20:16:46:       writableCorked: [Getter/Setter],
2025-09-08T20:16:46:       cork: [Function: cork],
2025-09-08T20:16:46:       uncork: [Function: uncork],
2025-09-08T20:16:46:       _headers: [Getter/Setter],
2025-09-08T20:16:46:       eventNames: [Function: eventNames],
2025-09-08T20:16:46:       setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:16:46:       getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:16:46:       emit: [Function: emit],
2025-09-08T20:16:46:       addListener: [Function: addListener],
2025-09-08T20:16:46:       on: [Function: addListener],
2025-09-08T20:16:46:       prependListener: [Function: prependListener],
2025-09-08T20:16:46:       once: [Function: once],
2025-09-08T20:16:46:       prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:16:46:       removeListener: [Function: removeListener],
2025-09-08T20:16:46:       off: [Function: removeListener],
2025-09-08T20:16:46:       removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:16:46:       listeners: [Function: listeners],
2025-09-08T20:16:46:       rawListeners: [Function: rawListeners],
2025-09-08T20:16:46:       listenerCount: [Function: listenerCount],
2025-09-08T20:16:46:       [Symbol(kCapture)]: false,
2025-09-08T20:16:46:     },
2025-09-08T20:16:46:     _currentUrl: "http://localhost:3055/api/student/exam-history?page=0&size=10",
2025-09-08T20:16:46:     _timeout: null,
2025-09-08T20:16:46:     abort: [Function],
2025-09-08T20:16:46:     destroy: [Function],
2025-09-08T20:16:46:     write: [Function],
2025-09-08T20:16:46:     end: [Function],
2025-09-08T20:16:46:     setHeader: [Function],
2025-09-08T20:16:46:     removeHeader: [Function],
2025-09-08T20:16:46:     setTimeout: [Function],
2025-09-08T20:16:46:     flushHeaders: [Function],
2025-09-08T20:16:46:     getHeader: [Function],
2025-09-08T20:16:46:     setNoDelay: [Function],
2025-09-08T20:16:46:     setSocketKeepAlive: [Function],
2025-09-08T20:16:46:     aborted: [Getter],
2025-09-08T20:16:46:     connection: [Getter],
2025-09-08T20:16:46:     socket: [Getter],
2025-09-08T20:16:46:     _sanitizeOptions: [Function],
2025-09-08T20:16:46:     _performRequest: [Function],
2025-09-08T20:16:46:     _processResponse: [Function],
2025-09-08T20:16:46:     pipe: [Function],
2025-09-08T20:16:46:     cork: [Function],
2025-09-08T20:16:46:     uncork: [Function],
2025-09-08T20:16:46:     setDefaultEncoding: [Function: setDefaultEncoding],
2025-09-08T20:16:46:     _write: [Function],
2025-09-08T20:16:46:     _writev: null,
2025-09-08T20:16:46:     closed: [Getter],
2025-09-08T20:16:46:     destroyed: [Getter/Setter],
2025-09-08T20:16:46:     writable: [Getter/Setter],
2025-09-08T20:16:46:     writableFinished: [Getter],
2025-09-08T20:16:46:     writableObjectMode: [Getter],
2025-09-08T20:16:46:     writableBuffer: [Getter],
2025-09-08T20:16:46:     writableEnded: [Getter],
2025-09-08T20:16:46:     writableNeedDrain: [Getter],
2025-09-08T20:16:46:     writableHighWaterMark: [Getter],
2025-09-08T20:16:46:     writableCorked: [Getter],
2025-09-08T20:16:46:     writableLength: [Getter],
2025-09-08T20:16:46:     errored: [Getter],
2025-09-08T20:16:46:     writableAborted: [Getter],
2025-09-08T20:16:46:     _undestroy: [Function: undestroy],
2025-09-08T20:16:46:     _destroy: [Function],
2025-09-08T20:16:46:     [Symbol(nodejs.rejection)]: [Function],
2025-09-08T20:16:46:     [Symbol(Symbol.asyncDispose)]: [Function],
2025-09-08T20:16:46:     eventNames: [Function: eventNames],
2025-09-08T20:16:46:     setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:16:46:     getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:16:46:     emit: [Function: emit],
2025-09-08T20:16:46:     addListener: [Function: addListener],
2025-09-08T20:16:46:     on: [Function: addListener],
2025-09-08T20:16:46:     prependListener: [Function: prependListener],
2025-09-08T20:16:46:     once: [Function: once],
2025-09-08T20:16:46:     prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:16:46:     removeListener: [Function: removeListener],
2025-09-08T20:16:46:     off: [Function: removeListener],
2025-09-08T20:16:46:     removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:16:46:     listeners: [Function: listeners],
2025-09-08T20:16:46:     rawListeners: [Function: rawListeners],
2025-09-08T20:16:46:     listenerCount: [Function: listenerCount],
2025-09-08T20:16:46:   },
2025-09-08T20:16:46:   cause: error: ECONNREFUSED
2025-09-08T20:16:46:  code: "ECONNREFUSED"
2025-09-08T20:16:46: 
2025-09-08T20:16:46:       at node:_http_client:247:28
2025-09-08T20:16:46: ,
2025-09-08T20:16:46:   toJSON: [Function: toJSON],
2025-09-08T20:16:46:   isAxiosError: true,
2025-09-08T20:16:46:   toString: [Function: toString],
2025-09-08T20:16:46: }
2025-09-08T20:29:27: ❌ [Auth API Request Error] AxiosError {
2025-09-08T20:29:27:   stack: "Error\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/core/AxiosError.js:92:14)\n    at handleRequestError (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/adapters/http.js:620:25)\n    at emitError (node:events:43:23)\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/follow-redirects/index.js:49:24)\n    at emitError (node:events:43:23)\n    at <anonymous> (node:_http_client:251:22)\n    at processTicksAndRejections (native:7:39)",
2025-09-08T20:29:27:   sourceURL: "node:_http_client",
2025-09-08T20:29:27:   column: 28,
2025-09-08T20:29:27:   line: 247,
2025-09-08T20:29:27:   originalColumn: 18,
2025-09-08T20:29:27:   originalLine: 62,
2025-09-08T20:29:27:   code: "ECONNREFUSED",
2025-09-08T20:29:27:   message: "ECONNREFUSED",
2025-09-08T20:29:27:   name: "Error",
2025-09-08T20:29:27:   config: {
2025-09-08T20:29:27:     transitional: {
2025-09-08T20:29:27:       silentJSONParsing: true,
2025-09-08T20:29:27:       forcedJSONParsing: true,
2025-09-08T20:29:27:       clarifyTimeoutError: false,
2025-09-08T20:29:27:     },
2025-09-08T20:29:27:     adapter: [ "xhr", "http", "fetch" ],
2025-09-08T20:29:27:     transformRequest: [
2025-09-08T20:29:27:       [Function: transformRequest]
2025-09-08T20:29:27:     ],
2025-09-08T20:29:27:     transformResponse: [
2025-09-08T20:29:27:       [Function: transformResponse]
2025-09-08T20:29:27:     ],
2025-09-08T20:29:27:     timeout: 10000,
2025-09-08T20:29:27:     xsrfCookieName: "XSRF-TOKEN",
2025-09-08T20:29:27:     xsrfHeaderName: "X-XSRF-TOKEN",
2025-09-08T20:29:27:     maxContentLength: -1,
2025-09-08T20:29:27:     maxBodyLength: -1,
2025-09-08T20:29:27:     env: {
2025-09-08T20:29:27:       FormData: [Function: FormData],
2025-09-08T20:29:27:       Blob: [class Blob],
2025-09-08T20:29:27:     },
2025-09-08T20:29:27:     validateStatus: [Function: validateStatus],
2025-09-08T20:29:27:     headers: {
2025-09-08T20:29:27:       Accept: "application/json",
2025-09-08T20:29:27:       "Content-Type": "application/json",
2025-09-08T20:29:27:       "User-Agent": "axios/1.11.0",
2025-09-08T20:29:27:       "Content-Length": "85",
2025-09-08T20:29:27:       "Accept-Encoding": "gzip, compress, deflate, br",
2025-09-08T20:29:27:       set: [Getter/Setter],
2025-09-08T20:29:27:       get: [Getter/Setter],
2025-09-08T20:29:27:       has: [Getter/Setter],
2025-09-08T20:29:27:       delete: [Getter/Setter],
2025-09-08T20:29:27:       clear: [Getter/Setter],
2025-09-08T20:29:27:       normalize: [Getter/Setter],
2025-09-08T20:29:27:       concat: [Getter/Setter],
2025-09-08T20:29:27:       toJSON: [Getter/Setter],
2025-09-08T20:29:27:       toString: [Getter/Setter],
2025-09-08T20:29:27:       getSetCookie: [Getter/Setter],
2025-09-08T20:29:27:       getContentType: [Getter/Setter],
2025-09-08T20:29:27:       setContentType: [Getter/Setter],
2025-09-08T20:29:27:       hasContentType: [Getter/Setter],
2025-09-08T20:29:27:       getContentLength: [Getter/Setter],
2025-09-08T20:29:27:       setContentLength: [Getter/Setter],
2025-09-08T20:29:27:       hasContentLength: [Getter/Setter],
2025-09-08T20:29:27:       getAccept: [Getter/Setter],
2025-09-08T20:29:27:       setAccept: [Getter/Setter],
2025-09-08T20:29:27:       hasAccept: [Getter/Setter],
2025-09-08T20:29:27:       getAcceptEncoding: [Getter/Setter],
2025-09-08T20:29:27:       setAcceptEncoding: [Getter/Setter],
2025-09-08T20:29:27:       hasAcceptEncoding: [Getter/Setter],
2025-09-08T20:29:27:       getUserAgent: [Getter/Setter],
2025-09-08T20:29:27:       setUserAgent: [Getter/Setter],
2025-09-08T20:29:27:       hasUserAgent: [Getter/Setter],
2025-09-08T20:29:27:       getAuthorization: [Getter/Setter],
2025-09-08T20:29:27:       setAuthorization: [Getter/Setter],
2025-09-08T20:29:27:       hasAuthorization: [Getter/Setter],
2025-09-08T20:29:27:       [Symbol(Symbol.iterator)]: [Function],
2025-09-08T20:29:27:     },
2025-09-08T20:29:27:     baseURL: "http://localhost:3055",
2025-09-08T20:29:27:     withCredentials: false,
2025-09-08T20:29:27:     method: "post",
2025-09-08T20:29:27:     url: "/api/student/recent-submissions",
2025-09-08T20:29:27:     data: "{\"name\":\"학생\",\"birthDate\":\"2099-09-15\",\"phone\":\"010-2790-6727\",\"page\":0,\"size\":10}",
2025-09-08T20:29:27:     allowAbsoluteUrls: true,
2025-09-08T20:29:27:   },
2025-09-08T20:29:27:   request: Writable {
2025-09-08T20:29:27:     _events: {
2025-09-08T20:29:27:       error: [
2025-09-08T20:29:27:         [Function: handleRequestError]
2025-09-08T20:29:27:       ],
2025-09-08T20:29:27:       prefinish: undefined,
2025-09-08T20:29:27:       finish: undefined,
2025-09-08T20:29:27:       drain: undefined,
2025-09-08T20:29:27:       response: [
2025-09-08T20:29:27:         [Function: handleResponse]
2025-09-08T20:29:27:       ],
2025-09-08T20:29:27:       socket: [
2025-09-08T20:29:27:         [Function: handleRequestSocket], [Function: destroyOnTimeout]
2025-09-08T20:29:27:       ],
2025-09-08T20:29:27:     },
2025-09-08T20:29:27:     _writableState: {
2025-09-08T20:29:27:       [Symbol(kState)]: 17580812,
2025-09-08T20:29:27:       highWaterMark: 65536,
2025-09-08T20:29:27:       length: 0,
2025-09-08T20:29:27:       corked: 0,
2025-09-08T20:29:27:       onwrite: [Function: onwrite],
2025-09-08T20:29:27:       writelen: 0,
2025-09-08T20:29:27:       [Symbol(kBufferedValue)]: null,
2025-09-08T20:29:27:       bufferedIndex: 0,
2025-09-08T20:29:27:       pendingcb: 0,
2025-09-08T20:29:27:       objectMode: [Getter/Setter],
2025-09-08T20:29:27:       finalCalled: [Getter/Setter],
2025-09-08T20:29:27:       needDrain: [Getter/Setter],
2025-09-08T20:29:27:       ending: [Getter/Setter],
2025-09-08T20:29:27:       ended: [Getter/Setter],
2025-09-08T20:29:27:       finished: [Getter/Setter],
2025-09-08T20:29:27:       destroyed: [Getter/Setter],
2025-09-08T20:29:27:       decodeStrings: [Getter/Setter],
2025-09-08T20:29:27:       writing: [Getter/Setter],
2025-09-08T20:29:27:       sync: [Getter/Setter],
2025-09-08T20:29:27:       bufferProcessing: [Getter/Setter],
2025-09-08T20:29:27:       constructed: [Getter/Setter],
2025-09-08T20:29:27:       prefinished: [Getter/Setter],
2025-09-08T20:29:27:       errorEmitted: [Getter/Setter],
2025-09-08T20:29:27:       emitClose: [Getter/Setter],
2025-09-08T20:29:27: autoDestroy: [Getter/Setter],
2025-09-08T20:29:27:       closed: [Getter/Setter],
2025-09-08T20:29:27:       closeEmitted: [Getter/Setter],
2025-09-08T20:29:27:       allBuffers: [Getter/Setter],
2025-09-08T20:29:27:       allNoop: [Getter/Setter],
2025-09-08T20:29:27:       errored: [Getter/Setter],
2025-09-08T20:29:27:       writable: [Getter/Setter],
2025-09-08T20:29:27:       defaultEncoding: [Getter/Setter],
2025-09-08T20:29:27:       writecb: [Getter/Setter],
2025-09-08T20:29:27:       afterWriteTickInfo: [Getter/Setter],
2025-09-08T20:29:27:       buffered: [Getter/Setter],
2025-09-08T20:29:27:       getBuffer: [Function: getBuffer],
2025-09-08T20:29:27:       bufferedRequestCount: [Getter],
2025-09-08T20:29:27:       [Symbol(kOnConstructed)]: [Function: onConstructed],
2025-09-08T20:29:27:     },
2025-09-08T20:29:27:     _maxListeners: undefined,
2025-09-08T20:29:27:     [Symbol(kCapture)]: false,
2025-09-08T20:29:27:     _options: {
2025-09-08T20:29:27:       maxRedirects: 21,
2025-09-08T20:29:27:       maxBodyLength: Infinity,
2025-09-08T20:29:27:       protocol: "http:",
2025-09-08T20:29:27:       path: "/api/student/recent-submissions",
2025-09-08T20:29:27:       method: "POST",
2025-09-08T20:29:27:       headers: [Object ...],
2025-09-08T20:29:27:       agents: [Object ...],
2025-09-08T20:29:27:       auth: undefined,
2025-09-08T20:29:27:       family: undefined,
2025-09-08T20:29:27:       beforeRedirect: [Function: dispatchBeforeRedirect],
2025-09-08T20:29:27:       beforeRedirects: [Object ...],
2025-09-08T20:29:27:       hostname: "localhost",
2025-09-08T20:29:27:       port: "3055",
2025-09-08T20:29:27:       agent: undefined,
2025-09-08T20:29:27:       nativeProtocols: [Object ...],
2025-09-08T20:29:27:       pathname: "/api/student/recent-submissions",
2025-09-08T20:29:27:     },
2025-09-08T20:29:27:     _ended: true,
2025-09-08T20:29:27:     _ending: true,
2025-09-08T20:29:27:     _redirectCount: 0,
2025-09-08T20:29:27:     _redirects: [],
2025-09-08T20:29:27:     _requestBodyLength: 85,
2025-09-08T20:29:27:     _requestBodyBuffers: [
2025-09-08T20:29:27:       [Object ...]
2025-09-08T20:29:27:     ],
2025-09-08T20:29:27:     _eventsCount: NaN,
2025-09-08T20:29:27:     _onNativeResponse: [Function],
2025-09-08T20:29:27:     _currentRequest: ClientRequest {
2025-09-08T20:29:27:       write: [Function],
2025-09-08T20:29:27:       end: [Function],
2025-09-08T20:29:27:       flushHeaders: [Function],
2025-09-08T20:29:27:       destroy: [Function],
2025-09-08T20:29:27:       _ensureTls: [Function],
2025-09-08T20:29:27:       abort: [Function],
2025-09-08T20:29:27:       [Symbol(tls)]: null,
2025-09-08T20:29:27:       [Symbol(kAbortController)]: [AbortController ...],
2025-09-08T20:29:27:       [Symbol(agent)]: [Object ...],
2025-09-08T20:29:27:       destroyed: false,
2025-09-08T20:29:27:       [Symbol(protocol)]: "http:",
2025-09-08T20:29:27:       [Symbol(port)]: "3055",
2025-09-08T20:29:27:       [Symbol(useDefaultPort)]: false,
2025-09-08T20:29:27:       [Symbol(host)]: "localhost",
2025-09-08T20:29:27:       [Symbol(socketPath)]: undefined,
2025-09-08T20:29:27:       [Symbol(method)]: "POST",
2025-09-08T20:29:27:       maxHeaderSize: undefined,
2025-09-08T20:29:27:       [Symbol(maxHeaderSize)]: undefined,
2025-09-08T20:29:27:       insecureHTTPParser: undefined,
2025-09-08T20:29:27:       joinDuplicateHeaders: undefined,
2025-09-08T20:29:27:       [Symbol(path)]: "/api/student/recent-submissions",
2025-09-08T20:29:27:       _events: [Object ...],
2025-09-08T20:29:27:       _eventsCount: 7,
2025-09-08T20:29:27:       finished: true,
2025-09-08T20:29:27:       [Symbol(res)]: null,
2025-09-08T20:29:27:       [Symbol(upgradeOrConnect)]: false,
2025-09-08T20:29:27:       [Symbol(parser)]: null,
2025-09-08T20:29:27:       [Symbol(maxHeadersCount)]: null,
2025-09-08T20:29:27:       [Symbol(reusedSocket)]: false,
2025-09-08T20:29:27:       [Symbol(headers)]: Headers [Object ...],
2025-09-08T20:29:27:       [Symbol(options)]: [Object ...],
2025-09-08T20:29:27:       _httpMessage: [Circular],
2025-09-08T20:29:27:       [Symbol(emitState)]: 14,
2025-09-08T20:29:27:       setSocketKeepAlive: [Function],
2025-09-08T20:29:27:       setNoDelay: [Function],
2025-09-08T20:29:27:       [Symbol(kClearTimeout)]: [Function],
2025-09-08T20:29:27:       _redirectable: [Circular],
2025-09-08T20:29:27:       [Symbol(fakeSocket)]: [Object ...],
2025-09-08T20:29:27:       [Symbol(bodyChunks)]: [
2025-09-08T20:29:27:         <Buffer 7b 22 6e 61 6d 65 22 3a 22 ed 95 99 ec 83 9d 22 2c 22 62 69 72 74 68 44 61 74 65 22 3a 22 32 30 39 39 2d 30 39 2d 31 35 22 2c 22 70 68 6f 6e 65 22 3a ... 35 more bytes>
2025-09-08T20:29:27:       ],
2025-09-08T20:29:27:       [Symbol(fetchRequest)]: null,
2025-09-08T20:29:27:       setTimeout: [Function: setTimeout],
2025-09-08T20:29:27:       clearTimeout: [Function: clearTimeout],
2025-09-08T20:29:27:       path: [Getter],
2025-09-08T20:29:27:       port: [Getter],
2025-09-08T20:29:27:       method: [Getter],
2025-09-08T20:29:27:       host: [Getter],
2025-09-08T20:29:27:       protocol: [Getter],
2025-09-08T20:29:27:       agent: [Getter/Setter],
2025-09-08T20:29:27:       aborted: [Getter/Setter],
2025-09-08T20:29:27:       writable: [Getter],
2025-09-08T20:29:27:       _keepAliveTimeout: 0,
2025-09-08T20:29:27:       _defaultKeepAlive: true,
2025-09-08T20:29:27:       shouldKeepAlive: true,
2025-09-08T20:29:27:       _onPendingData: [Function: nop2],
2025-09-08T20:29:27:       outputSize: 0,
2025-09-08T20:29:27:       outputData: [],
2025-09-08T20:29:27:       strictContentLength: false,
2025-09-08T20:29:27:       _removedTE: false,
2025-09-08T20:29:27:       _removedContLen: false,
2025-09-08T20:29:27:       _removedConnection: false,
2025-09-08T20:29:27:       usesChunkedEncodingByDefault: true,
2025-09-08T20:29:27:       _closed: false,
2025-09-08T20:29:27:       _headerNames: [Getter/Setter],
2025-09-08T20:29:27:       appendHeader: [Function: appendHeader],
2025-09-08T20:29:27:       _implicitHeader: [Function: _implicitHeader],
2025-09-08T20:29:27:       getHeader: [Function: getHeader],
2025-09-08T20:29:27:       pipe: [Function: pipe],
2025-09-08T20:29:27:       getHeaderNames: [Function: getHeaderNames],
2025-09-08T20:29:27:       getRawHeaderNames: [Function: getRawHeaderNames],
2025-09-08T20:29:27:       getHeaders: [Function: getHeaders],
2025-09-08T20:29:27:       removeHeader: [Function: removeHeader],
2025-09-08T20:29:27:       setHeader: [Function: setHeader],
2025-09-08T20:29:27:       setHeaders: [Function: setHeaders],
2025-09-08T20:29:27:       hasHeader: [Function: hasHeader],
2025-09-08T20:29:27:       headers: [Getter/Setter],
2025-09-08T20:29:27:       addTrailers: [Function: addTrailers],
2025-09-08T20:29:27:       connection: [Getter/Setter],
2025-09-08T20:29:27:       socket: [Getter/Setter],
2025-09-08T20:29:27:       chunkedEncoding: [Getter/Setter],
2025-09-08T20:29:27:       writableObjectMode: [Getter],
2025-09-08T20:29:27:       writableLength: [Getter],
2025-09-08T20:29:27:       writableHighWaterMark: [Getter],
2025-09-08T20:29:27:       writableNeedDrain: [Getter],
2025-09-08T20:29:27:       writableEnded: [Getter],
2025-09-08T20:29:27:       writableFinished: [Getter],
2025-09-08T20:29:27:       _send: [Function: _send],
2025-09-08T20:29:27:       _writeRaw: [Function: _writeRaw],
2025-09-08T20:29:27:       writableCorked: [Getter/Setter],
2025-09-08T20:29:27:       cork: [Function: cork],
2025-09-08T20:29:27:       uncork: [Function: uncork],
2025-09-08T20:29:27:       _headers: [Getter/Setter],
2025-09-08T20:29:27:       eventNames: [Function: eventNames],
2025-09-08T20:29:27:       setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:29:27:       getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:29:27:       emit: [Function: emit],
2025-09-08T20:29:27:       addListener: [Function: addListener],
2025-09-08T20:29:27:       on: [Function: addListener],
2025-09-08T20:29:27:       prependListener: [Function: prependListener],
2025-09-08T20:29:27:       once: [Function: once],
2025-09-08T20:29:27:       prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:29:27:       removeListener: [Function: removeListener],
2025-09-08T20:29:27:       off: [Function: removeListener],
2025-09-08T20:29:27:       removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:29:27:       listeners: [Function: listeners],
2025-09-08T20:29:27:       rawListeners: [Function: rawListeners],
2025-09-08T20:29:27:       listenerCount: [Function: listenerCount],
2025-09-08T20:29:27:       [Symbol(kCapture)]: false,
2025-09-08T20:29:27:     },
2025-09-08T20:29:27:     _currentUrl: "http://localhost:3055/api/student/recent-submissions",
2025-09-08T20:29:27:     _timeout: null,
2025-09-08T20:29:27:     abort: [Function],
2025-09-08T20:29:27:     destroy: [Function],
2025-09-08T20:29:27:     write: [Function],
2025-09-08T20:29:27:     end: [Function],
2025-09-08T20:29:27:     setHeader: [Function],
2025-09-08T20:29:27:     removeHeader: [Function],
2025-09-08T20:29:27:     setTimeout: [Function],
2025-09-08T20:29:27:     flushHeaders: [Function],
2025-09-08T20:29:27:     getHeader: [Function],
2025-09-08T20:29:27:     setNoDelay: [Function],
2025-09-08T20:29:27:     setSocketKeepAlive: [Function],
2025-09-08T20:29:27:     aborted: [Getter],
2025-09-08T20:29:27:     connection: [Getter],
2025-09-08T20:29:27:     socket: [Getter],
2025-09-08T20:29:27:     _sanitizeOptions: [Function],
2025-09-08T20:29:27:     _performRequest: [Function],
2025-09-08T20:29:27:     _processResponse: [Function],
2025-09-08T20:29:27:     pipe: [Function],
2025-09-08T20:29:27:     cork: [Function],
2025-09-08T20:29:27:     uncork: [Function],
2025-09-08T20:29:27:     setDefaultEncoding: [Function: setDefaultEncoding],
2025-09-08T20:29:27:     _write: [Function],
2025-09-08T20:29:27:     _writev: null,
2025-09-08T20:29:27:     closed: [Getter],
2025-09-08T20:29:27:     destroyed: [Getter/Setter],
2025-09-08T20:29:27:     writable: [Getter/Setter],
2025-09-08T20:29:27:     writableFinished: [Getter],
2025-09-08T20:29:27:     writableObjectMode: [Getter],
2025-09-08T20:29:27:     writableBuffer: [Getter],
2025-09-08T20:29:27:     writableEnded: [Getter],
2025-09-08T20:29:27:     writableNeedDrain: [Getter],
2025-09-08T20:29:27:     writableHighWaterMark: [Getter],
2025-09-08T20:29:27:     writableCorked: [Getter],
2025-09-08T20:29:27:     writableLength: [Getter],
2025-09-08T20:29:27:     errored: [Getter],
2025-09-08T20:29:27:     writableAborted: [Getter],
2025-09-08T20:29:27:     _undestroy: [Function: undestroy],
2025-09-08T20:29:27:     _destroy: [Function],
2025-09-08T20:29:27:     [Symbol(nodejs.rejection)]: [Function],
2025-09-08T20:29:27:     [Symbol(Symbol.asyncDispose)]: [Function],
2025-09-08T20:29:27:     eventNames: [Function: eventNames],
2025-09-08T20:29:27:     setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:29:27:     getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:29:27:     emit: [Function: emit],
2025-09-08T20:29:27:     addListener: [Function: addListener],
2025-09-08T20:29:27:     on: [Function: addListener],
2025-09-08T20:29:27:     prependListener: [Function: prependListener],
2025-09-08T20:29:27:     once: [Function: once],
2025-09-08T20:29:27:     prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:29:27:     removeListener: [Function: removeListener],
2025-09-08T20:29:27:     off: [Function: removeListener],
2025-09-08T20:29:27:     removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:29:27:     listeners: [Function: listeners],
2025-09-08T20:29:27:     rawListeners: [Function: rawListeners],
2025-09-08T20:29:27:     listenerCount: [Function: listenerCount],
2025-09-08T20:29:27:   },
2025-09-08T20:29:27:   cause: error: ECONNREFUSED
2025-09-08T20:29:27:  code: "ECONNREFUSED"
2025-09-08T20:29:27: 
2025-09-08T20:29:27:       at node:_http_client:247:28
2025-09-08T20:29:27: ,
2025-09-08T20:29:27:   toJSON: [Function: toJSON],
2025-09-08T20:29:27:   isAxiosError: true,
2025-09-08T20:29:27:   toString: [Function: toString],
2025-09-08T20:29:27: }
2025-09-08T20:29:27: ❌ [Auth API Request Error] AxiosError {
2025-09-08T20:29:27:   stack: "Error\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/core/AxiosError.js:92:14)\n    at handleRequestError (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/adapters/http.js:620:25)\n    at emitError (node:events:43:23)\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/follow-redirects/index.js:49:24)\n    at emitError (node:events:43:23)\n    at <anonymous> (node:_http_client:251:22)\n    at processTicksAndRejections (native:7:39)",
2025-09-08T20:29:27:   sourceURL: "node:_http_client",
2025-09-08T20:29:27:   column: 28,
2025-09-08T20:29:27:   line: 247,
2025-09-08T20:29:27:   originalColumn: 18,
2025-09-08T20:29:27:   originalLine: 62,
2025-09-08T20:29:27:   code: "ECONNREFUSED",
2025-09-08T20:29:27:   message: "ECONNREFUSED",
2025-09-08T20:29:27:   name: "Error",
2025-09-08T20:29:27:   config: {
2025-09-08T20:29:27:     transitional: {
2025-09-08T20:29:27:       silentJSONParsing: true,
2025-09-08T20:29:27:       forcedJSONParsing: true,
2025-09-08T20:29:27:       clarifyTimeoutError: false,
2025-09-08T20:29:27:     },
2025-09-08T20:29:27:     adapter: [ "xhr", "http", "fetch" ],
2025-09-08T20:29:27:     transformRequest: [
2025-09-08T20:29:27:       [Function: transformRequest]
2025-09-08T20:29:27:     ],
2025-09-08T20:29:27:     transformResponse: [
2025-09-08T20:29:27:       [Function: transformResponse]
2025-09-08T20:29:27:     ],
2025-09-08T20:29:27:     timeout: 10000,
2025-09-08T20:29:27:     xsrfCookieName: "XSRF-TOKEN",
2025-09-08T20:29:27:     xsrfHeaderName: "X-XSRF-TOKEN",
2025-09-08T20:29:27:     maxContentLength: -1,
2025-09-08T20:29:27:     maxBodyLength: -1,
2025-09-08T20:29:27:     env: {
2025-09-08T20:29:27:       FormData: [Function: FormData],
2025-09-08T20:29:27:       Blob: [class Blob],
2025-09-08T20:29:27:     },
2025-09-08T20:29:27:     validateStatus: [Function: validateStatus],
2025-09-08T20:29:27:     headers: {
2025-09-08T20:29:27:       Accept: "application/json",
2025-09-08T20:29:27:       "Content-Type": "application/json",
2025-09-08T20:29:27:       "User-Agent": "axios/1.11.0",
2025-09-08T20:29:27:       "Content-Length": "66",
2025-09-08T20:29:27:       "Accept-Encoding": "gzip, compress, deflate, br",
2025-09-08T20:29:27:       set: [Getter/Setter],
2025-09-08T20:29:27:       get: [Getter/Setter],
2025-09-08T20:29:27:       has: [Getter/Setter],
2025-09-08T20:29:27:       delete: [Getter/Setter],
2025-09-08T20:29:27:       clear: [Getter/Setter],
2025-09-08T20:29:27:       normalize: [Getter/Setter],
2025-09-08T20:29:27:       concat: [Getter/Setter],
2025-09-08T20:29:27:       toJSON: [Getter/Setter],
2025-09-08T20:29:27:       toString: [Getter/Setter],
2025-09-08T20:29:27:       getSetCookie: [Getter/Setter],
2025-09-08T20:29:27:       getContentType: [Getter/Setter],
2025-09-08T20:29:27:       setContentType: [Getter/Setter],
2025-09-08T20:29:27:       hasContentType: [Getter/Setter],
2025-09-08T20:29:27:       getContentLength: [Getter/Setter],
2025-09-08T20:29:27:       setContentLength: [Getter/Setter],
2025-09-08T20:29:27:       hasContentLength: [Getter/Setter],
2025-09-08T20:29:27:       getAccept: [Getter/Setter],
2025-09-08T20:29:27:       setAccept: [Getter/Setter],
2025-09-08T20:29:27:       hasAccept: [Getter/Setter],
2025-09-08T20:29:27:       getAcceptEncoding: [Getter/Setter],
2025-09-08T20:29:27:       setAcceptEncoding: [Getter/Setter],
2025-09-08T20:29:27:       hasAcceptEncoding: [Getter/Setter],
2025-09-08T20:29:27:       getUserAgent: [Getter/Setter],
2025-09-08T20:29:27:       setUserAgent: [Getter/Setter],
2025-09-08T20:29:27:       hasUserAgent: [Getter/Setter],
2025-09-08T20:29:27:       getAuthorization: [Getter/Setter],
2025-09-08T20:29:27:       setAuthorization: [Getter/Setter],
2025-09-08T20:29:27:       hasAuthorization: [Getter/Setter],
2025-09-08T20:29:27:       [Symbol(Symbol.iterator)]: [Function],
2025-09-08T20:29:27:     },
2025-09-08T20:29:27:     baseURL: "http://localhost:3055",
2025-09-08T20:29:27:     withCredentials: false,
2025-09-08T20:29:27:     method: "post",
2025-09-08T20:29:27:     url: "/api/student/exam-history?page=0&size=10",
2025-09-08T20:29:27:     data: "{\"name\":\"학생\",\"birthDate\":\"2099-09-15\",\"phone\":\"010-2790-6727\"}",
2025-09-08T20:29:27:     allowAbsoluteUrls: true,
2025-09-08T20:29:27:   },
2025-09-08T20:29:27:   request: Writable {
2025-09-08T20:29:27:     _events: {
2025-09-08T20:29:27:       error: [
2025-09-08T20:29:27:         [Function: handleRequestError]
2025-09-08T20:29:27:       ],
2025-09-08T20:29:27:       prefinish: undefined,
2025-09-08T20:29:27:       finish: undefined,
2025-09-08T20:29:27:       drain: undefined,
2025-09-08T20:29:27:       response: [
2025-09-08T20:29:27:         [Function: handleResponse]
2025-09-08T20:29:27:       ],
2025-09-08T20:29:27:       socket: [
2025-09-08T20:29:27:         [Function: handleRequestSocket], [Function: destroyOnTimeout]
2025-09-08T20:29:27:       ],
2025-09-08T20:29:27:     },
2025-09-08T20:29:27:     _writableState: {
2025-09-08T20:29:27:       [Symbol(kState)]: 17580812,
2025-09-08T20:29:27:       highWaterMark: 65536,
2025-09-08T20:29:27:       length: 0,
2025-09-08T20:29:27:       corked: 0,
2025-09-08T20:29:27:       onwrite: [Function: onwrite],
2025-09-08T20:29:27:       writelen: 0,
2025-09-08T20:29:27:       [Symbol(kBufferedValue)]: null,
2025-09-08T20:29:27:       bufferedIndex: 0,
2025-09-08T20:29:27:       pendingcb: 0,
2025-09-08T20:29:27:       objectMode: [Getter/Setter],
2025-09-08T20:29:27:       finalCalled: [Getter/Setter],
2025-09-08T20:29:27:       needDrain: [Getter/Setter],
2025-09-08T20:29:27:       ending: [Getter/Setter],
2025-09-08T20:29:27:       ended: [Getter/Setter],
2025-09-08T20:29:27:       finished: [Getter/Setter],
2025-09-08T20:29:27:       destroyed: [Getter/Setter],
2025-09-08T20:29:27:       decodeStrings: [Getter/Setter],
2025-09-08T20:29:27:       writing: [Getter/Setter],
2025-09-08T20:29:27:       sync: [Getter/Setter],
2025-09-08T20:29:27:       bufferProcessing: [Getter/Setter],
2025-09-08T20:29:27:       constructed: [Getter/Setter],
2025-09-08T20:29:27:       prefinished: [Getter/Setter],
2025-09-08T20:29:27:       errorEmitted: [Getter/Setter],
2025-09-08T20:29:27:       emitClose: [Getter/Setter],
2025-09-08T20:29:27: [Getter/Setter],
2025-09-08T20:29:27:       closed: [Getter/Setter],
2025-09-08T20:29:27:       closeEmitted: [Getter/Setter],
2025-09-08T20:29:27:       allBuffers: [Getter/Setter],
2025-09-08T20:29:27:       allNoop: [Getter/Setter],
2025-09-08T20:29:27:       errored: [Getter/Setter],
2025-09-08T20:29:27:       writable: [Getter/Setter],
2025-09-08T20:29:27:       defaultEncoding: [Getter/Setter],
2025-09-08T20:29:27:       writecb: [Getter/Setter],
2025-09-08T20:29:27:       afterWriteTickInfo: [Getter/Setter],
2025-09-08T20:29:27:       buffered: [Getter/Setter],
2025-09-08T20:29:27:       getBuffer: [Function: getBuffer],
2025-09-08T20:29:27:       bufferedRequestCount: [Getter],
2025-09-08T20:29:27:       [Symbol(kOnConstructed)]: [Function: onConstructed],
2025-09-08T20:29:27:     },
2025-09-08T20:29:27:     _maxListeners: undefined,
2025-09-08T20:29:27:     [Symbol(kCapture)]: false,
2025-09-08T20:29:27:     _options: {
2025-09-08T20:29:27:       maxRedirects: 21,
2025-09-08T20:29:27:       maxBodyLength: Infinity,
2025-09-08T20:29:27:       protocol: "http:",
2025-09-08T20:29:27:       path: "/api/student/exam-history?page=0&size=10",
2025-09-08T20:29:27:       method: "POST",
2025-09-08T20:29:27:       headers: [Object ...],
2025-09-08T20:29:27:       agents: [Object ...],
2025-09-08T20:29:27:       auth: undefined,
2025-09-08T20:29:27:       family: undefined,
2025-09-08T20:29:27:       beforeRedirect: [Function: dispatchBeforeRedirect],
2025-09-08T20:29:27:       beforeRedirects: [Object ...],
2025-09-08T20:29:27:       hostname: "localhost",
2025-09-08T20:29:27:       port: "3055",
2025-09-08T20:29:27:       agent: undefined,
2025-09-08T20:29:27:       nativeProtocols: [Object ...],
2025-09-08T20:29:27:       pathname: "/api/student/exam-history",
2025-09-08T20:29:27:       search: "?page=0&size=10",
2025-09-08T20:29:27:     },
2025-09-08T20:29:27:     _ended: true,
2025-09-08T20:29:27:     _ending: true,
2025-09-08T20:29:27:     _redirectCount: 0,
2025-09-08T20:29:27:     _redirects: [],
2025-09-08T20:29:27:     _requestBodyLength: 66,
2025-09-08T20:29:27:     _requestBodyBuffers: [
2025-09-08T20:29:27:       [Object ...]
2025-09-08T20:29:27:     ],
2025-09-08T20:29:27:     _eventsCount: NaN,
2025-09-08T20:29:27:     _onNativeResponse: [Function],
2025-09-08T20:29:27:     _currentRequest: ClientRequest {
2025-09-08T20:29:27:       write: [Function],
2025-09-08T20:29:27:       end: [Function],
2025-09-08T20:29:27:       flushHeaders: [Function],
2025-09-08T20:29:27:       destroy: [Function],
2025-09-08T20:29:27:       _ensureTls: [Function],
2025-09-08T20:29:27:       abort: [Function],
2025-09-08T20:29:27:       [Symbol(tls)]: null,
2025-09-08T20:29:27:       [Symbol(kAbortController)]: [AbortController ...],
2025-09-08T20:29:27:       [Symbol(agent)]: [Object ...],
2025-09-08T20:29:27:       destroyed: false,
2025-09-08T20:29:27:       [Symbol(protocol)]: "http:",
2025-09-08T20:29:27:       [Symbol(port)]: "3055",
2025-09-08T20:29:27:       [Symbol(useDefaultPort)]: false,
2025-09-08T20:29:27:       [Symbol(host)]: "localhost",
2025-09-08T20:29:27:       [Symbol(socketPath)]: undefined,
2025-09-08T20:29:27:       [Symbol(method)]: "POST",
2025-09-08T20:29:27:       maxHeaderSize: undefined,
2025-09-08T20:29:27:       [Symbol(maxHeaderSize)]: undefined,
2025-09-08T20:29:27:       insecureHTTPParser: undefined,
2025-09-08T20:29:27:       joinDuplicateHeaders: undefined,
2025-09-08T20:29:27:       [Symbol(path)]: "/api/student/exam-history?page=0&size=10",
2025-09-08T20:29:27:       _events: [Object ...],
2025-09-08T20:29:27:       _eventsCount: 7,
2025-09-08T20:29:27:       finished: true,
2025-09-08T20:29:27:       [Symbol(res)]: null,
2025-09-08T20:29:27:       [Symbol(upgradeOrConnect)]: false,
2025-09-08T20:29:27:       [Symbol(parser)]: null,
2025-09-08T20:29:27:       [Symbol(maxHeadersCount)]: null,
2025-09-08T20:29:27:       [Symbol(reusedSocket)]: false,
2025-09-08T20:29:27:       [Symbol(headers)]: Headers [Object ...],
2025-09-08T20:29:27:       [Symbol(options)]: [Object ...],
2025-09-08T20:29:27:       _httpMessage: [Circular],
2025-09-08T20:29:27:       [Symbol(emitState)]: 14,
2025-09-08T20:29:27:       setSocketKeepAlive: [Function],
2025-09-08T20:29:27:       setNoDelay: [Function],
2025-09-08T20:29:27:       [Symbol(kClearTimeout)]: [Function],
2025-09-08T20:29:27:       _redirectable: [Circular],
2025-09-08T20:29:27:       [Symbol(fakeSocket)]: [Object ...],
2025-09-08T20:29:27:       [Symbol(bodyChunks)]: [
2025-09-08T20:29:27:         <Buffer 7b 22 6e 61 6d 65 22 3a 22 ed 95 99 ec 83 9d 22 2c 22 62 69 72 74 68 44 61 74 65 22 3a 22 32 30 39 39 2d 30 39 2d 31 35 22 2c 22 70 68 6f 6e 65 22 3a ... 16 more bytes>
2025-09-08T20:29:27:       ],
2025-09-08T20:29:27:       [Symbol(fetchRequest)]: null,
2025-09-08T20:29:27:       setTimeout: [Function: setTimeout],
2025-09-08T20:29:27:       clearTimeout: [Function: clearTimeout],
2025-09-08T20:29:27:       path: [Getter],
2025-09-08T20:29:27:       port: [Getter],
2025-09-08T20:29:27:       method: [Getter],
2025-09-08T20:29:27:       host: [Getter],
2025-09-08T20:29:27:       protocol: [Getter],
2025-09-08T20:29:27:       agent: [Getter/Setter],
2025-09-08T20:29:27:       aborted: [Getter/Setter],
2025-09-08T20:29:27:       writable: [Getter],
2025-09-08T20:29:27:       _keepAliveTimeout: 0,
2025-09-08T20:29:27:       _defaultKeepAlive: true,
2025-09-08T20:29:27:       shouldKeepAlive: true,
2025-09-08T20:29:27:       _onPendingData: [Function: nop2],
2025-09-08T20:29:27:       outputSize: 0,
2025-09-08T20:29:27:       outputData: [],
2025-09-08T20:29:27:       strictContentLength: false,
2025-09-08T20:29:27:       _removedTE: false,
2025-09-08T20:29:27:       _removedContLen: false,
2025-09-08T20:29:27:       _removedConnection: false,
2025-09-08T20:29:27:       usesChunkedEncodingByDefault: true,
2025-09-08T20:29:27:       _closed: false,
2025-09-08T20:29:27:       _headerNames: [Getter/Setter],
2025-09-08T20:29:27:       appendHeader: [Function: appendHeader],
2025-09-08T20:29:27:       _implicitHeader: [Function: _implicitHeader],
2025-09-08T20:29:27:       getHeader: [Function: getHeader],
2025-09-08T20:29:27:       pipe: [Function: pipe],
2025-09-08T20:29:27:       getHeaderNames: [Function: getHeaderNames],
2025-09-08T20:29:27:       getRawHeaderNames: [Function: getRawHeaderNames],
2025-09-08T20:29:27:       getHeaders: [Function: getHeaders],
2025-09-08T20:29:27:       removeHeader: [Function: removeHeader],
2025-09-08T20:29:27:       setHeader: [Function: setHeader],
2025-09-08T20:29:27:       setHeaders: [Function: setHeaders],
2025-09-08T20:29:27:       hasHeader: [Function: hasHeader],
2025-09-08T20:29:27:       headers: [Getter/Setter],
2025-09-08T20:29:27:       addTrailers: [Function: addTrailers],
2025-09-08T20:29:27:       connection: [Getter/Setter],
2025-09-08T20:29:27:       socket: [Getter/Setter],
2025-09-08T20:29:27:       chunkedEncoding: [Getter/Setter],
2025-09-08T20:29:27:       writableObjectMode: [Getter],
2025-09-08T20:29:27:       writableLength: [Getter],
2025-09-08T20:29:27:       writableHighWaterMark: [Getter],
2025-09-08T20:29:27:       writableNeedDrain: [Getter],
2025-09-08T20:29:27:       writableEnded: [Getter],
2025-09-08T20:29:27:       writableFinished: [Getter],
2025-09-08T20:29:27:       _send: [Function: _send],
2025-09-08T20:29:27:       _writeRaw: [Function: _writeRaw],
2025-09-08T20:29:27:       writableCorked: [Getter/Setter],
2025-09-08T20:29:27:       cork: [Function: cork],
2025-09-08T20:29:27:       uncork: [Function: uncork],
2025-09-08T20:29:27:       _headers: [Getter/Setter],
2025-09-08T20:29:27:       eventNames: [Function: eventNames],
2025-09-08T20:29:27:       setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:29:27:       getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:29:27:       emit: [Function: emit],
2025-09-08T20:29:27:       addListener: [Function: addListener],
2025-09-08T20:29:27:       on: [Function: addListener],
2025-09-08T20:29:27:       prependListener: [Function: prependListener],
2025-09-08T20:29:27:       once: [Function: once],
2025-09-08T20:29:27:       prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:29:27:       removeListener: [Function: removeListener],
2025-09-08T20:29:27:       off: [Function: removeListener],
2025-09-08T20:29:27:       removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:29:27:       listeners: [Function: listeners],
2025-09-08T20:29:27:       rawListeners: [Function: rawListeners],
2025-09-08T20:29:27:       listenerCount: [Function: listenerCount],
2025-09-08T20:29:27:       [Symbol(kCapture)]: false,
2025-09-08T20:29:27:     },
2025-09-08T20:29:27:     _currentUrl: "http://localhost:3055/api/student/exam-history?page=0&size=10",
2025-09-08T20:29:27:     _timeout: null,
2025-09-08T20:29:27:     abort: [Function],
2025-09-08T20:29:27:     destroy: [Function],
2025-09-08T20:29:27:     write: [Function],
2025-09-08T20:29:27:     end: [Function],
2025-09-08T20:29:27:     setHeader: [Function],
2025-09-08T20:29:27:     removeHeader: [Function],
2025-09-08T20:29:27:     setTimeout: [Function],
2025-09-08T20:29:27:     flushHeaders: [Function],
2025-09-08T20:29:27:     getHeader: [Function],
2025-09-08T20:29:27:     setNoDelay: [Function],
2025-09-08T20:29:27:     setSocketKeepAlive: [Function],
2025-09-08T20:29:27:     aborted: [Getter],
2025-09-08T20:29:27:     connection: [Getter],
2025-09-08T20:29:27:     socket: [Getter],
2025-09-08T20:29:27:     _sanitizeOptions: [Function],
2025-09-08T20:29:27:     _performRequest: [Function],
2025-09-08T20:29:27:     _processResponse: [Function],
2025-09-08T20:29:27:     pipe: [Function],
2025-09-08T20:29:27:     cork: [Function],
2025-09-08T20:29:27:     uncork: [Function],
2025-09-08T20:29:27:     setDefaultEncoding: [Function: setDefaultEncoding],
2025-09-08T20:29:27:     _write: [Function],
2025-09-08T20:29:27:     _writev: null,
2025-09-08T20:29:27:     closed: [Getter],
2025-09-08T20:29:27:     destroyed: [Getter/Setter],
2025-09-08T20:29:27:     writable: [Getter/Setter],
2025-09-08T20:29:27:     writableFinished: [Getter],
2025-09-08T20:29:27:     writableObjectMode: [Getter],
2025-09-08T20:29:27:     writableBuffer: [Getter],
2025-09-08T20:29:27:     writableEnded: [Getter],
2025-09-08T20:29:27:     writableNeedDrain: [Getter],
2025-09-08T20:29:27:     writableHighWaterMark: [Getter],
2025-09-08T20:29:27:     writableCorked: [Getter],
2025-09-08T20:29:27:     writableLength: [Getter],
2025-09-08T20:29:27:     errored: [Getter],
2025-09-08T20:29:27:     writableAborted: [Getter],
2025-09-08T20:29:27:     _undestroy: [Function: undestroy],
2025-09-08T20:29:27:     _destroy: [Function],
2025-09-08T20:29:27:     [Symbol(nodejs.rejection)]: [Function],
2025-09-08T20:29:27:     [Symbol(Symbol.asyncDispose)]: [Function],
2025-09-08T20:29:27:     eventNames: [Function: eventNames],
2025-09-08T20:29:27:     setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:29:27:     getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:29:27:     emit: [Function: emit],
2025-09-08T20:29:27:     addListener: [Function: addListener],
2025-09-08T20:29:27:     on: [Function: addListener],
2025-09-08T20:29:27:     prependListener: [Function: prependListener],
2025-09-08T20:29:27:     once: [Function: once],
2025-09-08T20:29:27:     prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:29:27:     removeListener: [Function: removeListener],
2025-09-08T20:29:27:     off: [Function: removeListener],
2025-09-08T20:29:27:     removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:29:27:     listeners: [Function: listeners],
2025-09-08T20:29:27:     rawListeners: [Function: rawListeners],
2025-09-08T20:29:27:     listenerCount: [Function: listenerCount],
2025-09-08T20:29:27:   },
2025-09-08T20:29:27:   cause: error: ECONNREFUSED
2025-09-08T20:29:27:  code: "ECONNREFUSED"
2025-09-08T20:29:27: 
2025-09-08T20:29:27:       at node:_http_client:247:28
2025-09-08T20:29:27: ,
2025-09-08T20:29:27:   toJSON: [Function: toJSON],
2025-09-08T20:29:27:   isAxiosError: true,
2025-09-08T20:29:27:   toString: [Function: toString],
2025-09-08T20:29:27: }
2025-09-08T20:33:40: ❌ [Auth API Request Error] AxiosError {
2025-09-08T20:33:40:   stack: "Error\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/core/AxiosError.js:92:14)\n    at handleRequestError (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/adapters/http.js:620:25)\n    at emitError (node:events:43:23)\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/follow-redirects/index.js:49:24)\n    at emitError (node:events:43:23)\n    at <anonymous> (node:_http_client:251:22)\n    at processTicksAndRejections (native:7:39)",
2025-09-08T20:33:40:   sourceURL: "node:_http_client",
2025-09-08T20:33:40:   column: 28,
2025-09-08T20:33:40:   line: 247,
2025-09-08T20:33:40:   originalColumn: 18,
2025-09-08T20:33:40:   originalLine: 62,
2025-09-08T20:33:40:   code: "ECONNREFUSED",
2025-09-08T20:33:40:   message: "ECONNREFUSED",
2025-09-08T20:33:40:   name: "Error",
2025-09-08T20:33:40:   config: {
2025-09-08T20:33:40:     transitional: {
2025-09-08T20:33:40:       silentJSONParsing: true,
2025-09-08T20:33:40:       forcedJSONParsing: true,
2025-09-08T20:33:40:       clarifyTimeoutError: false,
2025-09-08T20:33:40:     },
2025-09-08T20:33:40:     adapter: [ "xhr", "http", "fetch" ],
2025-09-08T20:33:40:     transformRequest: [
2025-09-08T20:33:40:       [Function: transformRequest]
2025-09-08T20:33:40:     ],
2025-09-08T20:33:40:     transformResponse: [
2025-09-08T20:33:40:       [Function: transformResponse]
2025-09-08T20:33:40:     ],
2025-09-08T20:33:40:     timeout: 10000,
2025-09-08T20:33:40:     xsrfCookieName: "XSRF-TOKEN",
2025-09-08T20:33:40:     xsrfHeaderName: "X-XSRF-TOKEN",
2025-09-08T20:33:40:     maxContentLength: -1,
2025-09-08T20:33:40:     maxBodyLength: -1,
2025-09-08T20:33:40:     env: {
2025-09-08T20:33:40:       FormData: [Function: FormData],
2025-09-08T20:33:40:       Blob: [class Blob],
2025-09-08T20:33:40:     },
2025-09-08T20:33:40:     validateStatus: [Function: validateStatus],
2025-09-08T20:33:40:     headers: {
2025-09-08T20:33:40:       Accept: "application/json",
2025-09-08T20:33:40:       "Content-Type": "application/json",
2025-09-08T20:33:40:       "User-Agent": "axios/1.11.0",
2025-09-08T20:33:40:       "Content-Length": "85",
2025-09-08T20:33:40:       "Accept-Encoding": "gzip, compress, deflate, br",
2025-09-08T20:33:40:       set: [Getter/Setter],
2025-09-08T20:33:40:       get: [Getter/Setter],
2025-09-08T20:33:40:       has: [Getter/Setter],
2025-09-08T20:33:40:       delete: [Getter/Setter],
2025-09-08T20:33:40:       clear: [Getter/Setter],
2025-09-08T20:33:40:       normalize: [Getter/Setter],
2025-09-08T20:33:40:       concat: [Getter/Setter],
2025-09-08T20:33:40:       toJSON: [Getter/Setter],
2025-09-08T20:33:40:       toString: [Getter/Setter],
2025-09-08T20:33:40:       getSetCookie: [Getter/Setter],
2025-09-08T20:33:40:       getContentType: [Getter/Setter],
2025-09-08T20:33:40:       setContentType: [Getter/Setter],
2025-09-08T20:33:40:       hasContentType: [Getter/Setter],
2025-09-08T20:33:40:       getContentLength: [Getter/Setter],
2025-09-08T20:33:40:       setContentLength: [Getter/Setter],
2025-09-08T20:33:40:       hasContentLength: [Getter/Setter],
2025-09-08T20:33:40:       getAccept: [Getter/Setter],
2025-09-08T20:33:40:       setAccept: [Getter/Setter],
2025-09-08T20:33:40:       hasAccept: [Getter/Setter],
2025-09-08T20:33:40:       getAcceptEncoding: [Getter/Setter],
2025-09-08T20:33:40:       setAcceptEncoding: [Getter/Setter],
2025-09-08T20:33:40:       hasAcceptEncoding: [Getter/Setter],
2025-09-08T20:33:40:       getUserAgent: [Getter/Setter],
2025-09-08T20:33:40:       setUserAgent: [Getter/Setter],
2025-09-08T20:33:40:       hasUserAgent: [Getter/Setter],
2025-09-08T20:33:40:       getAuthorization: [Getter/Setter],
2025-09-08T20:33:40:       setAuthorization: [Getter/Setter],
2025-09-08T20:33:40:       hasAuthorization: [Getter/Setter],
2025-09-08T20:33:40:       [Symbol(Symbol.iterator)]: [Function],
2025-09-08T20:33:40:     },
2025-09-08T20:33:40:     baseURL: "http://localhost:3055",
2025-09-08T20:33:40:     withCredentials: false,
2025-09-08T20:33:40:     method: "post",
2025-09-08T20:33:40:     url: "/api/student/recent-submissions",
2025-09-08T20:33:40:     data: "{\"name\":\"학생\",\"birthDate\":\"2099-09-15\",\"phone\":\"010-2790-6727\",\"page\":0,\"size\":10}",
2025-09-08T20:33:40:     allowAbsoluteUrls: true,
2025-09-08T20:33:40:   },
2025-09-08T20:33:40:   request: Writable {
2025-09-08T20:33:40:     _events: {
2025-09-08T20:33:40:       error: [
2025-09-08T20:33:40:         [Function: handleRequestError]
2025-09-08T20:33:40:       ],
2025-09-08T20:33:40:       prefinish: undefined,
2025-09-08T20:33:40:       finish: undefined,
2025-09-08T20:33:40:       drain: undefined,
2025-09-08T20:33:40:       response: [
2025-09-08T20:33:40:         [Function: handleResponse]
2025-09-08T20:33:40:       ],
2025-09-08T20:33:40:       socket: [
2025-09-08T20:33:40:         [Function: handleRequestSocket], [Function: destroyOnTimeout]
2025-09-08T20:33:40:       ],
2025-09-08T20:33:40:     },
2025-09-08T20:33:40:     _writableState: {
2025-09-08T20:33:40:       [Symbol(kState)]: 17580812,
2025-09-08T20:33:40:       highWaterMark: 65536,
2025-09-08T20:33:40:       length: 0,
2025-09-08T20:33:40:       corked: 0,
2025-09-08T20:33:40:       onwrite: [Function: onwrite],
2025-09-08T20:33:40:       writelen: 0,
2025-09-08T20:33:40:       [Symbol(kBufferedValue)]: null,
2025-09-08T20:33:40:       bufferedIndex: 0,
2025-09-08T20:33:40:       pendingcb: 0,
2025-09-08T20:33:40:       objectMode: [Getter/Setter],
2025-09-08T20:33:40:       finalCalled: [Getter/Setter],
2025-09-08T20:33:40:       needDrain: [Getter/Setter],
2025-09-08T20:33:40:       ending: [Getter/Setter],
2025-09-08T20:33:40:       ended: [Getter/Setter],
2025-09-08T20:33:40:       finished: [Getter/Setter],
2025-09-08T20:33:40:       destroyed: [Getter/Setter],
2025-09-08T20:33:40:       decodeStrings: [Getter/Setter],
2025-09-08T20:33:40:       writing: [Getter/Setter],
2025-09-08T20:33:40:       sync: [Getter/Setter],
2025-09-08T20:33:40:       bufferProcessing: [Getter/Setter],
2025-09-08T20:33:40:       constructed: [Getter/Setter],
2025-09-08T20:33:40:       prefinished: [Getter/Setter],
2025-09-08T20:33:40:       errorEmitted: [Getter/Setter],
2025-09-08T20:33:40:       emitClose: [Getter/Setter],
2025-09-08T20:33:40: autoDestroy: [Getter/Setter],
2025-09-08T20:33:40:       closed: [Getter/Setter],
2025-09-08T20:33:40:       closeEmitted: [Getter/Setter],
2025-09-08T20:33:40:       allBuffers: [Getter/Setter],
2025-09-08T20:33:40:       allNoop: [Getter/Setter],
2025-09-08T20:33:40:       errored: [Getter/Setter],
2025-09-08T20:33:40:       writable: [Getter/Setter],
2025-09-08T20:33:40:       defaultEncoding: [Getter/Setter],
2025-09-08T20:33:40:       writecb: [Getter/Setter],
2025-09-08T20:33:40:       afterWriteTickInfo: [Getter/Setter],
2025-09-08T20:33:40:       buffered: [Getter/Setter],
2025-09-08T20:33:40:       getBuffer: [Function: getBuffer],
2025-09-08T20:33:40:       bufferedRequestCount: [Getter],
2025-09-08T20:33:40:       [Symbol(kOnConstructed)]: [Function: onConstructed],
2025-09-08T20:33:40:     },
2025-09-08T20:33:40:     _maxListeners: undefined,
2025-09-08T20:33:40:     [Symbol(kCapture)]: false,
2025-09-08T20:33:40:     _options: {
2025-09-08T20:33:40:       maxRedirects: 21,
2025-09-08T20:33:40:       maxBodyLength: Infinity,
2025-09-08T20:33:40:       protocol: "http:",
2025-09-08T20:33:40:       path: "/api/student/recent-submissions",
2025-09-08T20:33:40:       method: "POST",
2025-09-08T20:33:40:       headers: [Object ...],
2025-09-08T20:33:40:       agents: [Object ...],
2025-09-08T20:33:40:       auth: undefined,
2025-09-08T20:33:40:       family: undefined,
2025-09-08T20:33:40:       beforeRedirect: [Function: dispatchBeforeRedirect],
2025-09-08T20:33:40:       beforeRedirects: [Object ...],
2025-09-08T20:33:40:       hostname: "localhost",
2025-09-08T20:33:40:       port: "3055",
2025-09-08T20:33:40:       agent: undefined,
2025-09-08T20:33:40:       nativeProtocols: [Object ...],
2025-09-08T20:33:40:       pathname: "/api/student/recent-submissions",
2025-09-08T20:33:40:     },
2025-09-08T20:33:40:     _ended: true,
2025-09-08T20:33:40:     _ending: true,
2025-09-08T20:33:40:     _redirectCount: 0,
2025-09-08T20:33:40:     _redirects: [],
2025-09-08T20:33:40:     _requestBodyLength: 85,
2025-09-08T20:33:40:     _requestBodyBuffers: [
2025-09-08T20:33:40:       [Object ...]
2025-09-08T20:33:40:     ],
2025-09-08T20:33:40:     _eventsCount: NaN,
2025-09-08T20:33:40:     _onNativeResponse: [Function],
2025-09-08T20:33:40:     _currentRequest: ClientRequest {
2025-09-08T20:33:40:       write: [Function],
2025-09-08T20:33:40:       end: [Function],
2025-09-08T20:33:40:       flushHeaders: [Function],
2025-09-08T20:33:40:       destroy: [Function],
2025-09-08T20:33:40:       _ensureTls: [Function],
2025-09-08T20:33:40:       abort: [Function],
2025-09-08T20:33:40:       [Symbol(tls)]: null,
2025-09-08T20:33:40:       [Symbol(kAbortController)]: [AbortController ...],
2025-09-08T20:33:40:       [Symbol(agent)]: [Object ...],
2025-09-08T20:33:40:       destroyed: false,
2025-09-08T20:33:40:       [Symbol(protocol)]: "http:",
2025-09-08T20:33:40:       [Symbol(port)]: "3055",
2025-09-08T20:33:40:       [Symbol(useDefaultPort)]: false,
2025-09-08T20:33:40:       [Symbol(host)]: "localhost",
2025-09-08T20:33:40:       [Symbol(socketPath)]: undefined,
2025-09-08T20:33:40:       [Symbol(method)]: "POST",
2025-09-08T20:33:40:       maxHeaderSize: undefined,
2025-09-08T20:33:40:       [Symbol(maxHeaderSize)]: undefined,
2025-09-08T20:33:40:       insecureHTTPParser: undefined,
2025-09-08T20:33:40:       joinDuplicateHeaders: undefined,
2025-09-08T20:33:40:       [Symbol(path)]: "/api/student/recent-submissions",
2025-09-08T20:33:40:       _events: [Object ...],
2025-09-08T20:33:40:       _eventsCount: 7,
2025-09-08T20:33:40:       finished: true,
2025-09-08T20:33:40:       [Symbol(res)]: null,
2025-09-08T20:33:40:       [Symbol(upgradeOrConnect)]: false,
2025-09-08T20:33:40:       [Symbol(parser)]: null,
2025-09-08T20:33:40:       [Symbol(maxHeadersCount)]: null,
2025-09-08T20:33:40:       [Symbol(reusedSocket)]: false,
2025-09-08T20:33:40:       [Symbol(headers)]: Headers [Object ...],
2025-09-08T20:33:40:       [Symbol(options)]: [Object ...],
2025-09-08T20:33:40:       _httpMessage: [Circular],
2025-09-08T20:33:40:       [Symbol(emitState)]: 14,
2025-09-08T20:33:40:       setSocketKeepAlive: [Function],
2025-09-08T20:33:40:       setNoDelay: [Function],
2025-09-08T20:33:40:       [Symbol(kClearTimeout)]: [Function],
2025-09-08T20:33:40:       _redirectable: [Circular],
2025-09-08T20:33:40:       [Symbol(fakeSocket)]: [Object ...],
2025-09-08T20:33:40:       [Symbol(bodyChunks)]: [
2025-09-08T20:33:40:         <Buffer 7b 22 6e 61 6d 65 22 3a 22 ed 95 99 ec 83 9d 22 2c 22 62 69 72 74 68 44 61 74 65 22 3a 22 32 30 39 39 2d 30 39 2d 31 35 22 2c 22 70 68 6f 6e 65 22 3a ... 35 more bytes>
2025-09-08T20:33:40:       ],
2025-09-08T20:33:40:       [Symbol(fetchRequest)]: null,
2025-09-08T20:33:40:       setTimeout: [Function: setTimeout],
2025-09-08T20:33:40:       clearTimeout: [Function: clearTimeout],
2025-09-08T20:33:40:       path: [Getter],
2025-09-08T20:33:40:       port: [Getter],
2025-09-08T20:33:40:       method: [Getter],
2025-09-08T20:33:40:       host: [Getter],
2025-09-08T20:33:40:       protocol: [Getter],
2025-09-08T20:33:40:       agent: [Getter/Setter],
2025-09-08T20:33:40:       aborted: [Getter/Setter],
2025-09-08T20:33:40:       writable: [Getter],
2025-09-08T20:33:40:       _keepAliveTimeout: 0,
2025-09-08T20:33:40:       _defaultKeepAlive: true,
2025-09-08T20:33:40:       shouldKeepAlive: true,
2025-09-08T20:33:40:       _onPendingData: [Function: nop2],
2025-09-08T20:33:40:       outputSize: 0,
2025-09-08T20:33:40:       outputData: [],
2025-09-08T20:33:40:       strictContentLength: false,
2025-09-08T20:33:40:       _removedTE: false,
2025-09-08T20:33:40:       _removedContLen: false,
2025-09-08T20:33:40:       _removedConnection: false,
2025-09-08T20:33:40:       usesChunkedEncodingByDefault: true,
2025-09-08T20:33:40:       _closed: false,
2025-09-08T20:33:40:       _headerNames: [Getter/Setter],
2025-09-08T20:33:40:       appendHeader: [Function: appendHeader],
2025-09-08T20:33:40:       _implicitHeader: [Function: _implicitHeader],
2025-09-08T20:33:40:       getHeader: [Function: getHeader],
2025-09-08T20:33:40:       pipe: [Function: pipe],
2025-09-08T20:33:40:       getHeaderNames: [Function: getHeaderNames],
2025-09-08T20:33:40:       getRawHeaderNames: [Function: getRawHeaderNames],
2025-09-08T20:33:40:       getHeaders: [Function: getHeaders],
2025-09-08T20:33:40:       removeHeader: [Function: removeHeader],
2025-09-08T20:33:40:       setHeader: [Function: setHeader],
2025-09-08T20:33:40:       setHeaders: [Function: setHeaders],
2025-09-08T20:33:40:       hasHeader: [Function: hasHeader],
2025-09-08T20:33:40:       headers: [Getter/Setter],
2025-09-08T20:33:40:       addTrailers: [Function: addTrailers],
2025-09-08T20:33:40:       connection: [Getter/Setter],
2025-09-08T20:33:40:       socket: [Getter/Setter],
2025-09-08T20:33:40:       chunkedEncoding: [Getter/Setter],
2025-09-08T20:33:40:       writableObjectMode: [Getter],
2025-09-08T20:33:40:       writableLength: [Getter],
2025-09-08T20:33:40:       writableHighWaterMark: [Getter],
2025-09-08T20:33:40:       writableNeedDrain: [Getter],
2025-09-08T20:33:40:       writableEnded: [Getter],
2025-09-08T20:33:40:       writableFinished: [Getter],
2025-09-08T20:33:40:       _send: [Function: _send],
2025-09-08T20:33:40:       _writeRaw: [Function: _writeRaw],
2025-09-08T20:33:40:       writableCorked: [Getter/Setter],
2025-09-08T20:33:40:       cork: [Function: cork],
2025-09-08T20:33:40:       uncork: [Function: uncork],
2025-09-08T20:33:40:       _headers: [Getter/Setter],
2025-09-08T20:33:40:       eventNames: [Function: eventNames],
2025-09-08T20:33:40:       setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:33:40:       getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:33:40:       emit: [Function: emit],
2025-09-08T20:33:40:       addListener: [Function: addListener],
2025-09-08T20:33:40:       on: [Function: addListener],
2025-09-08T20:33:40:       prependListener: [Function: prependListener],
2025-09-08T20:33:40:       once: [Function: once],
2025-09-08T20:33:40:       prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:33:40:       removeListener: [Function: removeListener],
2025-09-08T20:33:40:       off: [Function: removeListener],
2025-09-08T20:33:40:       removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:33:40:       listeners: [Function: listeners],
2025-09-08T20:33:40:       rawListeners: [Function: rawListeners],
2025-09-08T20:33:40:       listenerCount: [Function: listenerCount],
2025-09-08T20:33:40:       [Symbol(kCapture)]: false,
2025-09-08T20:33:40:     },
2025-09-08T20:33:40:     _currentUrl: "http://localhost:3055/api/student/recent-submissions",
2025-09-08T20:33:40:     _timeout: null,
2025-09-08T20:33:40:     abort: [Function],
2025-09-08T20:33:40:     destroy: [Function],
2025-09-08T20:33:40:     write: [Function],
2025-09-08T20:33:40:     end: [Function],
2025-09-08T20:33:40:     setHeader: [Function],
2025-09-08T20:33:40:     removeHeader: [Function],
2025-09-08T20:33:40:     setTimeout: [Function],
2025-09-08T20:33:40:     flushHeaders: [Function],
2025-09-08T20:33:40:     getHeader: [Function],
2025-09-08T20:33:40:     setNoDelay: [Function],
2025-09-08T20:33:40:     setSocketKeepAlive: [Function],
2025-09-08T20:33:40:     aborted: [Getter],
2025-09-08T20:33:40:     connection: [Getter],
2025-09-08T20:33:40:     socket: [Getter],
2025-09-08T20:33:40:     _sanitizeOptions: [Function],
2025-09-08T20:33:40:     _performRequest: [Function],
2025-09-08T20:33:40:     _processResponse: [Function],
2025-09-08T20:33:40:     pipe: [Function],
2025-09-08T20:33:40:     cork: [Function],
2025-09-08T20:33:40:     uncork: [Function],
2025-09-08T20:33:40:     setDefaultEncoding: [Function: setDefaultEncoding],
2025-09-08T20:33:40:     _write: [Function],
2025-09-08T20:33:40:     _writev: null,
2025-09-08T20:33:40:     closed: [Getter],
2025-09-08T20:33:40:     destroyed: [Getter/Setter],
2025-09-08T20:33:40:     writable: [Getter/Setter],
2025-09-08T20:33:40:     writableFinished: [Getter],
2025-09-08T20:33:40:     writableObjectMode: [Getter],
2025-09-08T20:33:40:     writableBuffer: [Getter],
2025-09-08T20:33:40:     writableEnded: [Getter],
2025-09-08T20:33:40:     writableNeedDrain: [Getter],
2025-09-08T20:33:40:     writableHighWaterMark: [Getter],
2025-09-08T20:33:40:     writableCorked: [Getter],
2025-09-08T20:33:40:     writableLength: [Getter],
2025-09-08T20:33:40:     errored: [Getter],
2025-09-08T20:33:40:     writableAborted: [Getter],
2025-09-08T20:33:40:     _undestroy: [Function: undestroy],
2025-09-08T20:33:40:     _destroy: [Function],
2025-09-08T20:33:40:     [Symbol(nodejs.rejection)]: [Function],
2025-09-08T20:33:40:     [Symbol(Symbol.asyncDispose)]: [Function],
2025-09-08T20:33:40:     eventNames: [Function: eventNames],
2025-09-08T20:33:40:     setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:33:40:     getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:33:40:     emit: [Function: emit],
2025-09-08T20:33:40:     addListener: [Function: addListener],
2025-09-08T20:33:40:     on: [Function: addListener],
2025-09-08T20:33:40:     prependListener: [Function: prependListener],
2025-09-08T20:33:40:     once: [Function: once],
2025-09-08T20:33:40:     prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:33:40:     removeListener: [Function: removeListener],
2025-09-08T20:33:40:     off: [Function: removeListener],
2025-09-08T20:33:40:     removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:33:40:     listeners: [Function: listeners],
2025-09-08T20:33:40:     rawListeners: [Function: rawListeners],
2025-09-08T20:33:40:     listenerCount: [Function: listenerCount],
2025-09-08T20:33:40:   },
2025-09-08T20:33:40:   cause: error: ECONNREFUSED
2025-09-08T20:33:40:  code: "ECONNREFUSED"
2025-09-08T20:33:40: 
2025-09-08T20:33:40:       at node:_http_client:247:28
2025-09-08T20:33:40: ,
2025-09-08T20:33:40:   toJSON: [Function: toJSON],
2025-09-08T20:33:40:   isAxiosError: true,
2025-09-08T20:33:40:   toString: [Function: toString],
2025-09-08T20:33:40: }
2025-09-08T20:33:40: ❌ [Auth API Request Error] AxiosError {
2025-09-08T20:33:40:   stack: "Error\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/core/AxiosError.js:92:14)\n    at handleRequestError (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/axios/lib/adapters/http.js:620:25)\n    at emitError (node:events:43:23)\n    at <anonymous> (/home/aiden/programming/final-project/iroom-student-react/.output/server/node_modules/follow-redirects/index.js:49:24)\n    at emitError (node:events:43:23)\n    at <anonymous> (node:_http_client:251:22)\n    at processTicksAndRejections (native:7:39)",
2025-09-08T20:33:40:   sourceURL: "node:_http_client",
2025-09-08T20:33:40:   column: 28,
2025-09-08T20:33:40:   line: 247,
2025-09-08T20:33:40:   originalColumn: 18,
2025-09-08T20:33:40:   originalLine: 62,
2025-09-08T20:33:40:   code: "ECONNREFUSED",
2025-09-08T20:33:40:   message: "ECONNREFUSED",
2025-09-08T20:33:40:   name: "Error",
2025-09-08T20:33:40:   config: {
2025-09-08T20:33:40:     transitional: {
2025-09-08T20:33:40:       silentJSONParsing: true,
2025-09-08T20:33:40:       forcedJSONParsing: true,
2025-09-08T20:33:40:       clarifyTimeoutError: false,
2025-09-08T20:33:40:     },
2025-09-08T20:33:40:     adapter: [ "xhr", "http", "fetch" ],
2025-09-08T20:33:40:     transformRequest: [
2025-09-08T20:33:40:       [Function: transformRequest]
2025-09-08T20:33:40:     ],
2025-09-08T20:33:40:     transformResponse: [
2025-09-08T20:33:40:       [Function: transformResponse]
2025-09-08T20:33:40:     ],
2025-09-08T20:33:40:     timeout: 10000,
2025-09-08T20:33:40:     xsrfCookieName: "XSRF-TOKEN",
2025-09-08T20:33:40:     xsrfHeaderName: "X-XSRF-TOKEN",
2025-09-08T20:33:40:     maxContentLength: -1,
2025-09-08T20:33:40:     maxBodyLength: -1,
2025-09-08T20:33:40:     env: {
2025-09-08T20:33:40:       FormData: [Function: FormData],
2025-09-08T20:33:40:       Blob: [class Blob],
2025-09-08T20:33:40:     },
2025-09-08T20:33:40:     validateStatus: [Function: validateStatus],
2025-09-08T20:33:40:     headers: {
2025-09-08T20:33:40:       Accept: "application/json",
2025-09-08T20:33:40:       "Content-Type": "application/json",
2025-09-08T20:33:40:       "User-Agent": "axios/1.11.0",
2025-09-08T20:33:40:       "Content-Length": "66",
2025-09-08T20:33:40:       "Accept-Encoding": "gzip, compress, deflate, br",
2025-09-08T20:33:40:       set: [Getter/Setter],
2025-09-08T20:33:40:       get: [Getter/Setter],
2025-09-08T20:33:40:       has: [Getter/Setter],
2025-09-08T20:33:40:       delete: [Getter/Setter],
2025-09-08T20:33:40:       clear: [Getter/Setter],
2025-09-08T20:33:40:       normalize: [Getter/Setter],
2025-09-08T20:33:40:       concat: [Getter/Setter],
2025-09-08T20:33:40:       toJSON: [Getter/Setter],
2025-09-08T20:33:40:       toString: [Getter/Setter],
2025-09-08T20:33:40:       getSetCookie: [Getter/Setter],
2025-09-08T20:33:40:       getContentType: [Getter/Setter],
2025-09-08T20:33:40:       setContentType: [Getter/Setter],
2025-09-08T20:33:40:       hasContentType: [Getter/Setter],
2025-09-08T20:33:40:       getContentLength: [Getter/Setter],
2025-09-08T20:33:40:       setContentLength: [Getter/Setter],
2025-09-08T20:33:40:       hasContentLength: [Getter/Setter],
2025-09-08T20:33:40:       getAccept: [Getter/Setter],
2025-09-08T20:33:40:       setAccept: [Getter/Setter],
2025-09-08T20:33:40:       hasAccept: [Getter/Setter],
2025-09-08T20:33:40:       getAcceptEncoding: [Getter/Setter],
2025-09-08T20:33:40:       setAcceptEncoding: [Getter/Setter],
2025-09-08T20:33:40:       hasAcceptEncoding: [Getter/Setter],
2025-09-08T20:33:40:       getUserAgent: [Getter/Setter],
2025-09-08T20:33:40:       setUserAgent: [Getter/Setter],
2025-09-08T20:33:40:       hasUserAgent: [Getter/Setter],
2025-09-08T20:33:40:       getAuthorization: [Getter/Setter],
2025-09-08T20:33:40:       setAuthorization: [Getter/Setter],
2025-09-08T20:33:40:       hasAuthorization: [Getter/Setter],
2025-09-08T20:33:40:       [Symbol(Symbol.iterator)]: [Function],
2025-09-08T20:33:40:     },
2025-09-08T20:33:40:     baseURL: "http://localhost:3055",
2025-09-08T20:33:40:     withCredentials: false,
2025-09-08T20:33:40:     method: "post",
2025-09-08T20:33:40:     url: "/api/student/exam-history?page=0&size=10",
2025-09-08T20:33:40:     data: "{\"name\":\"학생\",\"birthDate\":\"2099-09-15\",\"phone\":\"010-2790-6727\"}",
2025-09-08T20:33:40:     allowAbsoluteUrls: true,
2025-09-08T20:33:40:   },
2025-09-08T20:33:40:   request: Writable {
2025-09-08T20:33:40:     _events: {
2025-09-08T20:33:40:       error: [
2025-09-08T20:33:40:         [Function: handleRequestError]
2025-09-08T20:33:40:       ],
2025-09-08T20:33:40:       prefinish: undefined,
2025-09-08T20:33:40:       finish: undefined,
2025-09-08T20:33:40:       drain: undefined,
2025-09-08T20:33:40:       response: [
2025-09-08T20:33:40:         [Function: handleResponse]
2025-09-08T20:33:40:       ],
2025-09-08T20:33:40:       socket: [
2025-09-08T20:33:40:         [Function: handleRequestSocket], [Function: destroyOnTimeout]
2025-09-08T20:33:40:       ],
2025-09-08T20:33:40:     },
2025-09-08T20:33:40:     _writableState: {
2025-09-08T20:33:40:       [Symbol(kState)]: 17580812,
2025-09-08T20:33:40:       highWaterMark: 65536,
2025-09-08T20:33:40:       length: 0,
2025-09-08T20:33:40:       corked: 0,
2025-09-08T20:33:40:       onwrite: [Function: onwrite],
2025-09-08T20:33:40:       writelen: 0,
2025-09-08T20:33:40:       [Symbol(kBufferedValue)]: null,
2025-09-08T20:33:40:       bufferedIndex: 0,
2025-09-08T20:33:40:       pendingcb: 0,
2025-09-08T20:33:40:       objectMode: [Getter/Setter],
2025-09-08T20:33:40:       finalCalled: [Getter/Setter],
2025-09-08T20:33:40:       needDrain: [Getter/Setter],
2025-09-08T20:33:40:       ending: [Getter/Setter],
2025-09-08T20:33:40:       ended: [Getter/Setter],
2025-09-08T20:33:40:       finished: [Getter/Setter],
2025-09-08T20:33:40:       destroyed: [Getter/Setter],
2025-09-08T20:33:40:       decodeStrings: [Getter/Setter],
2025-09-08T20:33:40:       writing: [Getter/Setter],
2025-09-08T20:33:40:       sync: [Getter/Setter],
2025-09-08T20:33:40:       bufferProcessing: [Getter/Setter],
2025-09-08T20:33:40:       constructed: [Getter/Setter],
2025-09-08T20:33:40:       prefinished: [Getter/Setter],
2025-09-08T20:33:40:       errorEmitted: [Getter/Setter],
2025-09-08T20:33:40:       emitClose: [Getter/Setter],
2025-09-08T20:33:40: [Getter/Setter],
2025-09-08T20:33:40:       closed: [Getter/Setter],
2025-09-08T20:33:40:       closeEmitted: [Getter/Setter],
2025-09-08T20:33:40:       allBuffers: [Getter/Setter],
2025-09-08T20:33:40:       allNoop: [Getter/Setter],
2025-09-08T20:33:40:       errored: [Getter/Setter],
2025-09-08T20:33:40:       writable: [Getter/Setter],
2025-09-08T20:33:40:       defaultEncoding: [Getter/Setter],
2025-09-08T20:33:40:       writecb: [Getter/Setter],
2025-09-08T20:33:40:       afterWriteTickInfo: [Getter/Setter],
2025-09-08T20:33:40:       buffered: [Getter/Setter],
2025-09-08T20:33:40:       getBuffer: [Function: getBuffer],
2025-09-08T20:33:40:       bufferedRequestCount: [Getter],
2025-09-08T20:33:40:       [Symbol(kOnConstructed)]: [Function: onConstructed],
2025-09-08T20:33:40:     },
2025-09-08T20:33:40:     _maxListeners: undefined,
2025-09-08T20:33:40:     [Symbol(kCapture)]: false,
2025-09-08T20:33:40:     _options: {
2025-09-08T20:33:40:       maxRedirects: 21,
2025-09-08T20:33:40:       maxBodyLength: Infinity,
2025-09-08T20:33:40:       protocol: "http:",
2025-09-08T20:33:40:       path: "/api/student/exam-history?page=0&size=10",
2025-09-08T20:33:40:       method: "POST",
2025-09-08T20:33:40:       headers: [Object ...],
2025-09-08T20:33:40:       agents: [Object ...],
2025-09-08T20:33:40:       auth: undefined,
2025-09-08T20:33:40:       family: undefined,
2025-09-08T20:33:40:       beforeRedirect: [Function: dispatchBeforeRedirect],
2025-09-08T20:33:40:       beforeRedirects: [Object ...],
2025-09-08T20:33:40:       hostname: "localhost",
2025-09-08T20:33:40:       port: "3055",
2025-09-08T20:33:40:       agent: undefined,
2025-09-08T20:33:40:       nativeProtocols: [Object ...],
2025-09-08T20:33:40:       pathname: "/api/student/exam-history",
2025-09-08T20:33:40:       search: "?page=0&size=10",
2025-09-08T20:33:40:     },
2025-09-08T20:33:40:     _ended: true,
2025-09-08T20:33:40:     _ending: true,
2025-09-08T20:33:40:     _redirectCount: 0,
2025-09-08T20:33:40:     _redirects: [],
2025-09-08T20:33:40:     _requestBodyLength: 66,
2025-09-08T20:33:40:     _requestBodyBuffers: [
2025-09-08T20:33:40:       [Object ...]
2025-09-08T20:33:40:     ],
2025-09-08T20:33:40:     _eventsCount: NaN,
2025-09-08T20:33:40:     _onNativeResponse: [Function],
2025-09-08T20:33:40:     _currentRequest: ClientRequest {
2025-09-08T20:33:40:       write: [Function],
2025-09-08T20:33:40:       end: [Function],
2025-09-08T20:33:40:       flushHeaders: [Function],
2025-09-08T20:33:40:       destroy: [Function],
2025-09-08T20:33:40:       _ensureTls: [Function],
2025-09-08T20:33:40:       abort: [Function],
2025-09-08T20:33:40:       [Symbol(tls)]: null,
2025-09-08T20:33:40:       [Symbol(kAbortController)]: [AbortController ...],
2025-09-08T20:33:40:       [Symbol(agent)]: [Object ...],
2025-09-08T20:33:40:       destroyed: false,
2025-09-08T20:33:40:       [Symbol(protocol)]: "http:",
2025-09-08T20:33:40:       [Symbol(port)]: "3055",
2025-09-08T20:33:40:       [Symbol(useDefaultPort)]: false,
2025-09-08T20:33:40:       [Symbol(host)]: "localhost",
2025-09-08T20:33:40:       [Symbol(socketPath)]: undefined,
2025-09-08T20:33:40:       [Symbol(method)]: "POST",
2025-09-08T20:33:40:       maxHeaderSize: undefined,
2025-09-08T20:33:40:       [Symbol(maxHeaderSize)]: undefined,
2025-09-08T20:33:40:       insecureHTTPParser: undefined,
2025-09-08T20:33:40:       joinDuplicateHeaders: undefined,
2025-09-08T20:33:40:       [Symbol(path)]: "/api/student/exam-history?page=0&size=10",
2025-09-08T20:33:40:       _events: [Object ...],
2025-09-08T20:33:40:       _eventsCount: 7,
2025-09-08T20:33:40:       finished: true,
2025-09-08T20:33:40:       [Symbol(res)]: null,
2025-09-08T20:33:40:       [Symbol(upgradeOrConnect)]: false,
2025-09-08T20:33:40:       [Symbol(parser)]: null,
2025-09-08T20:33:40:       [Symbol(maxHeadersCount)]: null,
2025-09-08T20:33:40:       [Symbol(reusedSocket)]: false,
2025-09-08T20:33:40:       [Symbol(headers)]: Headers [Object ...],
2025-09-08T20:33:40:       [Symbol(options)]: [Object ...],
2025-09-08T20:33:40:       _httpMessage: [Circular],
2025-09-08T20:33:40:       [Symbol(emitState)]: 14,
2025-09-08T20:33:40:       setSocketKeepAlive: [Function],
2025-09-08T20:33:40:       setNoDelay: [Function],
2025-09-08T20:33:40:       [Symbol(kClearTimeout)]: [Function],
2025-09-08T20:33:40:       _redirectable: [Circular],
2025-09-08T20:33:40:       [Symbol(fakeSocket)]: [Object ...],
2025-09-08T20:33:40:       [Symbol(bodyChunks)]: [
2025-09-08T20:33:40:         <Buffer 7b 22 6e 61 6d 65 22 3a 22 ed 95 99 ec 83 9d 22 2c 22 62 69 72 74 68 44 61 74 65 22 3a 22 32 30 39 39 2d 30 39 2d 31 35 22 2c 22 70 68 6f 6e 65 22 3a ... 16 more bytes>
2025-09-08T20:33:40:       ],
2025-09-08T20:33:40:       [Symbol(fetchRequest)]: null,
2025-09-08T20:33:40:       setTimeout: [Function: setTimeout],
2025-09-08T20:33:40:       clearTimeout: [Function: clearTimeout],
2025-09-08T20:33:40:       path: [Getter],
2025-09-08T20:33:40:       port: [Getter],
2025-09-08T20:33:40:       method: [Getter],
2025-09-08T20:33:40:       host: [Getter],
2025-09-08T20:33:40:       protocol: [Getter],
2025-09-08T20:33:40:       agent: [Getter/Setter],
2025-09-08T20:33:40:       aborted: [Getter/Setter],
2025-09-08T20:33:40:       writable: [Getter],
2025-09-08T20:33:40:       _keepAliveTimeout: 0,
2025-09-08T20:33:40:       _defaultKeepAlive: true,
2025-09-08T20:33:40:       shouldKeepAlive: true,
2025-09-08T20:33:40:       _onPendingData: [Function: nop2],
2025-09-08T20:33:40:       outputSize: 0,
2025-09-08T20:33:40:       outputData: [],
2025-09-08T20:33:40:       strictContentLength: false,
2025-09-08T20:33:40:       _removedTE: false,
2025-09-08T20:33:40:       _removedContLen: false,
2025-09-08T20:33:40:       _removedConnection: false,
2025-09-08T20:33:40:       usesChunkedEncodingByDefault: true,
2025-09-08T20:33:40:       _closed: false,
2025-09-08T20:33:40:       _headerNames: [Getter/Setter],
2025-09-08T20:33:40:       appendHeader: [Function: appendHeader],
2025-09-08T20:33:40:       _implicitHeader: [Function: _implicitHeader],
2025-09-08T20:33:40:       getHeader: [Function: getHeader],
2025-09-08T20:33:40:       pipe: [Function: pipe],
2025-09-08T20:33:40:       getHeaderNames: [Function: getHeaderNames],
2025-09-08T20:33:40:       getRawHeaderNames: [Function: getRawHeaderNames],
2025-09-08T20:33:40:       getHeaders: [Function: getHeaders],
2025-09-08T20:33:40:       removeHeader: [Function: removeHeader],
2025-09-08T20:33:40:       setHeader: [Function: setHeader],
2025-09-08T20:33:40:       setHeaders: [Function: setHeaders],
2025-09-08T20:33:40:       hasHeader: [Function: hasHeader],
2025-09-08T20:33:40:       headers: [Getter/Setter],
2025-09-08T20:33:40:       addTrailers: [Function: addTrailers],
2025-09-08T20:33:40:       connection: [Getter/Setter],
2025-09-08T20:33:40:       socket: [Getter/Setter],
2025-09-08T20:33:40:       chunkedEncoding: [Getter/Setter],
2025-09-08T20:33:40:       writableObjectMode: [Getter],
2025-09-08T20:33:40:       writableLength: [Getter],
2025-09-08T20:33:40:       writableHighWaterMark: [Getter],
2025-09-08T20:33:40:       writableNeedDrain: [Getter],
2025-09-08T20:33:40:       writableEnded: [Getter],
2025-09-08T20:33:40:       writableFinished: [Getter],
2025-09-08T20:33:40:       _send: [Function: _send],
2025-09-08T20:33:40:       _writeRaw: [Function: _writeRaw],
2025-09-08T20:33:40:       writableCorked: [Getter/Setter],
2025-09-08T20:33:40:       cork: [Function: cork],
2025-09-08T20:33:40:       uncork: [Function: uncork],
2025-09-08T20:33:40:       _headers: [Getter/Setter],
2025-09-08T20:33:40:       eventNames: [Function: eventNames],
2025-09-08T20:33:40:       setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:33:40:       getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:33:40:       emit: [Function: emit],
2025-09-08T20:33:40:       addListener: [Function: addListener],
2025-09-08T20:33:40:       on: [Function: addListener],
2025-09-08T20:33:40:       prependListener: [Function: prependListener],
2025-09-08T20:33:40:       once: [Function: once],
2025-09-08T20:33:40:       prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:33:40:       removeListener: [Function: removeListener],
2025-09-08T20:33:40:       off: [Function: removeListener],
2025-09-08T20:33:40:       removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:33:40:       listeners: [Function: listeners],
2025-09-08T20:33:40:       rawListeners: [Function: rawListeners],
2025-09-08T20:33:40:       listenerCount: [Function: listenerCount],
2025-09-08T20:33:40:       [Symbol(kCapture)]: false,
2025-09-08T20:33:40:     },
2025-09-08T20:33:40:     _currentUrl: "http://localhost:3055/api/student/exam-history?page=0&size=10",
2025-09-08T20:33:40:     _timeout: null,
2025-09-08T20:33:40:     abort: [Function],
2025-09-08T20:33:40:     destroy: [Function],
2025-09-08T20:33:40:     write: [Function],
2025-09-08T20:33:40:     end: [Function],
2025-09-08T20:33:40:     setHeader: [Function],
2025-09-08T20:33:40:     removeHeader: [Function],
2025-09-08T20:33:40:     setTimeout: [Function],
2025-09-08T20:33:40:     flushHeaders: [Function],
2025-09-08T20:33:40:     getHeader: [Function],
2025-09-08T20:33:40:     setNoDelay: [Function],
2025-09-08T20:33:40:     setSocketKeepAlive: [Function],
2025-09-08T20:33:40:     aborted: [Getter],
2025-09-08T20:33:40:     connection: [Getter],
2025-09-08T20:33:40:     socket: [Getter],
2025-09-08T20:33:40:     _sanitizeOptions: [Function],
2025-09-08T20:33:40:     _performRequest: [Function],
2025-09-08T20:33:40:     _processResponse: [Function],
2025-09-08T20:33:40:     pipe: [Function],
2025-09-08T20:33:40:     cork: [Function],
2025-09-08T20:33:40:     uncork: [Function],
2025-09-08T20:33:40:     setDefaultEncoding: [Function: setDefaultEncoding],
2025-09-08T20:33:40:     _write: [Function],
2025-09-08T20:33:40:     _writev: null,
2025-09-08T20:33:40:     closed: [Getter],
2025-09-08T20:33:40:     destroyed: [Getter/Setter],
2025-09-08T20:33:40:     writable: [Getter/Setter],
2025-09-08T20:33:40:     writableFinished: [Getter],
2025-09-08T20:33:40:     writableObjectMode: [Getter],
2025-09-08T20:33:40:     writableBuffer: [Getter],
2025-09-08T20:33:40:     writableEnded: [Getter],
2025-09-08T20:33:40:     writableNeedDrain: [Getter],
2025-09-08T20:33:40:     writableHighWaterMark: [Getter],
2025-09-08T20:33:40:     writableCorked: [Getter],
2025-09-08T20:33:40:     writableLength: [Getter],
2025-09-08T20:33:40:     errored: [Getter],
2025-09-08T20:33:40:     writableAborted: [Getter],
2025-09-08T20:33:40:     _undestroy: [Function: undestroy],
2025-09-08T20:33:40:     _destroy: [Function],
2025-09-08T20:33:40:     [Symbol(nodejs.rejection)]: [Function],
2025-09-08T20:33:40:     [Symbol(Symbol.asyncDispose)]: [Function],
2025-09-08T20:33:40:     eventNames: [Function: eventNames],
2025-09-08T20:33:40:     setMaxListeners: [Function: setMaxListeners],
2025-09-08T20:33:40:     getMaxListeners: [Function: getMaxListeners],
2025-09-08T20:33:40:     emit: [Function: emit],
2025-09-08T20:33:40:     addListener: [Function: addListener],
2025-09-08T20:33:40:     on: [Function: addListener],
2025-09-08T20:33:40:     prependListener: [Function: prependListener],
2025-09-08T20:33:40:     once: [Function: once],
2025-09-08T20:33:40:     prependOnceListener: [Function: prependOnceListener],
2025-09-08T20:33:40:     removeListener: [Function: removeListener],
2025-09-08T20:33:40:     off: [Function: removeListener],
2025-09-08T20:33:40:     removeAllListeners: [Function: removeAllListeners],
2025-09-08T20:33:40:     listeners: [Function: listeners],
2025-09-08T20:33:40:     rawListeners: [Function: rawListeners],
2025-09-08T20:33:40:     listenerCount: [Function: listenerCount],
2025-09-08T20:33:40:   },
2025-09-08T20:33:40:   cause: error: ECONNREFUSED
2025-09-08T20:33:40:  code: "ECONNREFUSED"
2025-09-08T20:33:40: 
2025-09-08T20:33:40:       at node:_http_client:247:28
2025-09-08T20:33:40: ,
2025-09-08T20:33:40:   toJSON: [Function: toJSON],
2025-09-08T20:33:40:   isAxiosError: true,
2025-09-08T20:33:40:   toString: [Function: toString],
2025-09-08T20:33:40: }
