/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProfileRouteRouteImport } from './routes/profile/route'
import { Route as MainRouteRouteImport } from './routes/main/route'
import { Route as ExamManagementRouteRouteImport } from './routes/exam-management/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SignupIndexRouteImport } from './routes/signup/index'
import { Route as ProfileIndexRouteImport } from './routes/profile/index'
import { Route as MainIndexRouteImport } from './routes/main/index'
import { Route as ExamManagementIndexRouteImport } from './routes/exam-management/index'
import { Route as ExamplesPokemonRouteRouteImport } from './routes/examples/pokemon/route'
import { Route as ExamplesPokemonIndexRouteImport } from './routes/examples/pokemon/index'
import { Route as ExamplesComponentsIndexRouteImport } from './routes/examples/components/index'
import { Route as MainExamExamIdIndexRouteImport } from './routes/main/exam/$examId/index'
import { Route as ExamplesPokemonIdIndexRouteImport } from './routes/examples/pokemon/$id/index'
import { Route as MainExamExamIdProblemIdIndexRouteImport } from './routes/main/exam/$examId/$problemId/index'

const ProfileRouteRoute = ProfileRouteRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const MainRouteRoute = MainRouteRouteImport.update({
  id: '/main',
  path: '/main',
  getParentRoute: () => rootRouteImport,
} as any)
const ExamManagementRouteRoute = ExamManagementRouteRouteImport.update({
  id: '/exam-management',
  path: '/exam-management',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupIndexRoute = SignupIndexRouteImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileIndexRoute = ProfileIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProfileRouteRoute,
} as any)
const MainIndexRoute = MainIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRouteRoute,
} as any)
const ExamManagementIndexRoute = ExamManagementIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ExamManagementRouteRoute,
} as any)
const ExamplesPokemonRouteRoute = ExamplesPokemonRouteRouteImport.update({
  id: '/examples/pokemon',
  path: '/examples/pokemon',
  getParentRoute: () => rootRouteImport,
} as any)
const ExamplesPokemonIndexRoute = ExamplesPokemonIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ExamplesPokemonRouteRoute,
} as any)
const ExamplesComponentsIndexRoute = ExamplesComponentsIndexRouteImport.update({
  id: '/examples/components/',
  path: '/examples/components/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainExamExamIdIndexRoute = MainExamExamIdIndexRouteImport.update({
  id: '/exam/$examId/',
  path: '/exam/$examId/',
  getParentRoute: () => MainRouteRoute,
} as any)
const ExamplesPokemonIdIndexRoute = ExamplesPokemonIdIndexRouteImport.update({
  id: '/$id/',
  path: '/$id/',
  getParentRoute: () => ExamplesPokemonRouteRoute,
} as any)
const MainExamExamIdProblemIdIndexRoute =
  MainExamExamIdProblemIdIndexRouteImport.update({
    id: '/exam/$examId/$problemId/',
    path: '/exam/$examId/$problemId/',
    getParentRoute: () => MainRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/exam-management': typeof ExamManagementRouteRouteWithChildren
  '/main': typeof MainRouteRouteWithChildren
  '/profile': typeof ProfileRouteRouteWithChildren
  '/examples/pokemon': typeof ExamplesPokemonRouteRouteWithChildren
  '/exam-management/': typeof ExamManagementIndexRoute
  '/main/': typeof MainIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/signup': typeof SignupIndexRoute
  '/examples/components': typeof ExamplesComponentsIndexRoute
  '/examples/pokemon/': typeof ExamplesPokemonIndexRoute
  '/examples/pokemon/$id': typeof ExamplesPokemonIdIndexRoute
  '/main/exam/$examId': typeof MainExamExamIdIndexRoute
  '/main/exam/$examId/$problemId': typeof MainExamExamIdProblemIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/exam-management': typeof ExamManagementIndexRoute
  '/main': typeof MainIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/signup': typeof SignupIndexRoute
  '/examples/components': typeof ExamplesComponentsIndexRoute
  '/examples/pokemon': typeof ExamplesPokemonIndexRoute
  '/examples/pokemon/$id': typeof ExamplesPokemonIdIndexRoute
  '/main/exam/$examId': typeof MainExamExamIdIndexRoute
  '/main/exam/$examId/$problemId': typeof MainExamExamIdProblemIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/exam-management': typeof ExamManagementRouteRouteWithChildren
  '/main': typeof MainRouteRouteWithChildren
  '/profile': typeof ProfileRouteRouteWithChildren
  '/examples/pokemon': typeof ExamplesPokemonRouteRouteWithChildren
  '/exam-management/': typeof ExamManagementIndexRoute
  '/main/': typeof MainIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/signup/': typeof SignupIndexRoute
  '/examples/components/': typeof ExamplesComponentsIndexRoute
  '/examples/pokemon/': typeof ExamplesPokemonIndexRoute
  '/examples/pokemon/$id/': typeof ExamplesPokemonIdIndexRoute
  '/main/exam/$examId/': typeof MainExamExamIdIndexRoute
  '/main/exam/$examId/$problemId/': typeof MainExamExamIdProblemIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/exam-management'
    | '/main'
    | '/profile'
    | '/examples/pokemon'
    | '/exam-management/'
    | '/main/'
    | '/profile/'
    | '/signup'
    | '/examples/components'
    | '/examples/pokemon/'
    | '/examples/pokemon/$id'
    | '/main/exam/$examId'
    | '/main/exam/$examId/$problemId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/exam-management'
    | '/main'
    | '/profile'
    | '/signup'
    | '/examples/components'
    | '/examples/pokemon'
    | '/examples/pokemon/$id'
    | '/main/exam/$examId'
    | '/main/exam/$examId/$problemId'
  id:
    | '__root__'
    | '/'
    | '/exam-management'
    | '/main'
    | '/profile'
    | '/examples/pokemon'
    | '/exam-management/'
    | '/main/'
    | '/profile/'
    | '/signup/'
    | '/examples/components/'
    | '/examples/pokemon/'
    | '/examples/pokemon/$id/'
    | '/main/exam/$examId/'
    | '/main/exam/$examId/$problemId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ExamManagementRouteRoute: typeof ExamManagementRouteRouteWithChildren
  MainRouteRoute: typeof MainRouteRouteWithChildren
  ProfileRouteRoute: typeof ProfileRouteRouteWithChildren
  ExamplesPokemonRouteRoute: typeof ExamplesPokemonRouteRouteWithChildren
  SignupIndexRoute: typeof SignupIndexRoute
  ExamplesComponentsIndexRoute: typeof ExamplesComponentsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main': {
      id: '/main'
      path: '/main'
      fullPath: '/main'
      preLoaderRoute: typeof MainRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/exam-management': {
      id: '/exam-management'
      path: '/exam-management'
      fullPath: '/exam-management'
      preLoaderRoute: typeof ExamManagementRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/': {
      id: '/profile/'
      path: '/'
      fullPath: '/profile/'
      preLoaderRoute: typeof ProfileIndexRouteImport
      parentRoute: typeof ProfileRouteRoute
    }
    '/main/': {
      id: '/main/'
      path: '/'
      fullPath: '/main/'
      preLoaderRoute: typeof MainIndexRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/exam-management/': {
      id: '/exam-management/'
      path: '/'
      fullPath: '/exam-management/'
      preLoaderRoute: typeof ExamManagementIndexRouteImport
      parentRoute: typeof ExamManagementRouteRoute
    }
    '/examples/pokemon': {
      id: '/examples/pokemon'
      path: '/examples/pokemon'
      fullPath: '/examples/pokemon'
      preLoaderRoute: typeof ExamplesPokemonRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/examples/pokemon/': {
      id: '/examples/pokemon/'
      path: '/'
      fullPath: '/examples/pokemon/'
      preLoaderRoute: typeof ExamplesPokemonIndexRouteImport
      parentRoute: typeof ExamplesPokemonRouteRoute
    }
    '/examples/components/': {
      id: '/examples/components/'
      path: '/examples/components'
      fullPath: '/examples/components'
      preLoaderRoute: typeof ExamplesComponentsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/exam/$examId/': {
      id: '/main/exam/$examId/'
      path: '/exam/$examId'
      fullPath: '/main/exam/$examId'
      preLoaderRoute: typeof MainExamExamIdIndexRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/examples/pokemon/$id/': {
      id: '/examples/pokemon/$id/'
      path: '/$id'
      fullPath: '/examples/pokemon/$id'
      preLoaderRoute: typeof ExamplesPokemonIdIndexRouteImport
      parentRoute: typeof ExamplesPokemonRouteRoute
    }
    '/main/exam/$examId/$problemId/': {
      id: '/main/exam/$examId/$problemId/'
      path: '/exam/$examId/$problemId'
      fullPath: '/main/exam/$examId/$problemId'
      preLoaderRoute: typeof MainExamExamIdProblemIdIndexRouteImport
      parentRoute: typeof MainRouteRoute
    }
  }
}

interface ExamManagementRouteRouteChildren {
  ExamManagementIndexRoute: typeof ExamManagementIndexRoute
}

const ExamManagementRouteRouteChildren: ExamManagementRouteRouteChildren = {
  ExamManagementIndexRoute: ExamManagementIndexRoute,
}

const ExamManagementRouteRouteWithChildren =
  ExamManagementRouteRoute._addFileChildren(ExamManagementRouteRouteChildren)

interface MainRouteRouteChildren {
  MainIndexRoute: typeof MainIndexRoute
  MainExamExamIdIndexRoute: typeof MainExamExamIdIndexRoute
  MainExamExamIdProblemIdIndexRoute: typeof MainExamExamIdProblemIdIndexRoute
}

const MainRouteRouteChildren: MainRouteRouteChildren = {
  MainIndexRoute: MainIndexRoute,
  MainExamExamIdIndexRoute: MainExamExamIdIndexRoute,
  MainExamExamIdProblemIdIndexRoute: MainExamExamIdProblemIdIndexRoute,
}

const MainRouteRouteWithChildren = MainRouteRoute._addFileChildren(
  MainRouteRouteChildren,
)

interface ProfileRouteRouteChildren {
  ProfileIndexRoute: typeof ProfileIndexRoute
}

const ProfileRouteRouteChildren: ProfileRouteRouteChildren = {
  ProfileIndexRoute: ProfileIndexRoute,
}

const ProfileRouteRouteWithChildren = ProfileRouteRoute._addFileChildren(
  ProfileRouteRouteChildren,
)

interface ExamplesPokemonRouteRouteChildren {
  ExamplesPokemonIndexRoute: typeof ExamplesPokemonIndexRoute
  ExamplesPokemonIdIndexRoute: typeof ExamplesPokemonIdIndexRoute
}

const ExamplesPokemonRouteRouteChildren: ExamplesPokemonRouteRouteChildren = {
  ExamplesPokemonIndexRoute: ExamplesPokemonIndexRoute,
  ExamplesPokemonIdIndexRoute: ExamplesPokemonIdIndexRoute,
}

const ExamplesPokemonRouteRouteWithChildren =
  ExamplesPokemonRouteRoute._addFileChildren(ExamplesPokemonRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExamManagementRouteRoute: ExamManagementRouteRouteWithChildren,
  MainRouteRoute: MainRouteRouteWithChildren,
  ProfileRouteRoute: ProfileRouteRouteWithChildren,
  ExamplesPokemonRouteRoute: ExamplesPokemonRouteRouteWithChildren,
  SignupIndexRoute: SignupIndexRoute,
  ExamplesComponentsIndexRoute: ExamplesComponentsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
