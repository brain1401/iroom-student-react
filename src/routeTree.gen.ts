/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MainRouteRouteImport } from './routes/main/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SignupIndexRouteImport } from './routes/signup/index'
import { Route as MainIndexRouteImport } from './routes/main/index'
import { Route as ExamplesPokemonRouteRouteImport } from './routes/examples/pokemon/route'
<<<<<<< Updated upstream
import { Route as ExamplesPokemonIndexRouteImport } from './routes/examples/pokemon/index'
=======
import { Route as SubmissionExamIdIndexRouteImport } from './routes/submission/$examId/index'
import { Route as MainTestIndexRouteImport } from './routes/main/test/index'
import { Route as ExamplesPokemonIndexRouteImport } from './routes/examples/pokemon/index'
import { Route as SubmissionExamIdTextRecongnitionIndexRouteImport } from './routes/submission/$examId/text-recongnition/index'
import { Route as SubmissionExamIdScanIndexRouteImport } from './routes/submission/$examId/scan/index'
>>>>>>> Stashed changes
import { Route as ExamplesPokemonIdIndexRouteImport } from './routes/examples/pokemon/$id/index'

const MainRouteRoute = MainRouteRouteImport.update({
  id: '/main',
  path: '/main',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupIndexRoute = SignupIndexRouteImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainIndexRoute = MainIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRouteRoute,
} as any)
const ExamplesPokemonRouteRoute = ExamplesPokemonRouteRouteImport.update({
  id: '/examples/pokemon',
  path: '/examples/pokemon',
  getParentRoute: () => rootRouteImport,
} as any)
<<<<<<< Updated upstream
=======
const SubmissionExamIdIndexRoute = SubmissionExamIdIndexRouteImport.update({
  id: '/submission/$examId/',
  path: '/submission/$examId/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainTestIndexRoute = MainTestIndexRouteImport.update({
  id: '/test/',
  path: '/test/',
  getParentRoute: () => MainRouteRoute,
} as any)
>>>>>>> Stashed changes
const ExamplesPokemonIndexRoute = ExamplesPokemonIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ExamplesPokemonRouteRoute,
} as any)
<<<<<<< Updated upstream
=======
const SubmissionExamIdTextRecongnitionIndexRoute =
  SubmissionExamIdTextRecongnitionIndexRouteImport.update({
    id: '/submission/$examId/text-recongnition/',
    path: '/submission/$examId/text-recongnition/',
    getParentRoute: () => rootRouteImport,
  } as any)
const SubmissionExamIdScanIndexRoute =
  SubmissionExamIdScanIndexRouteImport.update({
    id: '/submission/$examId/scan/',
    path: '/submission/$examId/scan/',
    getParentRoute: () => rootRouteImport,
  } as any)
>>>>>>> Stashed changes
const ExamplesPokemonIdIndexRoute = ExamplesPokemonIdIndexRouteImport.update({
  id: '/$id/',
  path: '/$id/',
  getParentRoute: () => ExamplesPokemonRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/main': typeof MainRouteRouteWithChildren
  '/examples/pokemon': typeof ExamplesPokemonRouteRouteWithChildren
  '/main/': typeof MainIndexRoute
  '/signup': typeof SignupIndexRoute
  '/examples/pokemon/': typeof ExamplesPokemonIndexRoute
<<<<<<< Updated upstream
  '/examples/pokemon/$id': typeof ExamplesPokemonIdIndexRoute
=======
  '/main/test': typeof MainTestIndexRoute
  '/submission/$examId': typeof SubmissionExamIdIndexRoute
  '/examples/pokemon/$id': typeof ExamplesPokemonIdIndexRoute
  '/submission/$examId/scan': typeof SubmissionExamIdScanIndexRoute
  '/submission/$examId/text-recongnition': typeof SubmissionExamIdTextRecongnitionIndexRoute
  '/main/test/exams/submit': typeof MainTestExamsSubmitIndexRoute
  '/main/test/exams/submit/active': typeof MainTestExamsSubmitActiveIndexRoute
>>>>>>> Stashed changes
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/main': typeof MainIndexRoute
  '/signup': typeof SignupIndexRoute
  '/examples/pokemon': typeof ExamplesPokemonIndexRoute
<<<<<<< Updated upstream
  '/examples/pokemon/$id': typeof ExamplesPokemonIdIndexRoute
=======
  '/main/test': typeof MainTestIndexRoute
  '/submission/$examId': typeof SubmissionExamIdIndexRoute
  '/examples/pokemon/$id': typeof ExamplesPokemonIdIndexRoute
  '/submission/$examId/scan': typeof SubmissionExamIdScanIndexRoute
  '/submission/$examId/text-recongnition': typeof SubmissionExamIdTextRecongnitionIndexRoute
  '/main/test/exams/submit': typeof MainTestExamsSubmitIndexRoute
  '/main/test/exams/submit/active': typeof MainTestExamsSubmitActiveIndexRoute
>>>>>>> Stashed changes
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/main': typeof MainRouteRouteWithChildren
  '/examples/pokemon': typeof ExamplesPokemonRouteRouteWithChildren
  '/main/': typeof MainIndexRoute
  '/signup/': typeof SignupIndexRoute
  '/examples/pokemon/': typeof ExamplesPokemonIndexRoute
<<<<<<< Updated upstream
  '/examples/pokemon/$id/': typeof ExamplesPokemonIdIndexRoute
=======
  '/main/test/': typeof MainTestIndexRoute
  '/submission/$examId/': typeof SubmissionExamIdIndexRoute
  '/examples/pokemon/$id/': typeof ExamplesPokemonIdIndexRoute
  '/submission/$examId/scan/': typeof SubmissionExamIdScanIndexRoute
  '/submission/$examId/text-recongnition/': typeof SubmissionExamIdTextRecongnitionIndexRoute
  '/main/test/exams/submit/': typeof MainTestExamsSubmitIndexRoute
  '/main/test/exams/submit/active/': typeof MainTestExamsSubmitActiveIndexRoute
>>>>>>> Stashed changes
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/main'
    | '/examples/pokemon'
    | '/main/'
    | '/signup'
    | '/examples/pokemon/'
<<<<<<< Updated upstream
    | '/examples/pokemon/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/main' | '/signup' | '/examples/pokemon' | '/examples/pokemon/$id'
=======
    | '/main/test'
    | '/submission/$examId'
    | '/examples/pokemon/$id'
    | '/submission/$examId/scan'
    | '/submission/$examId/text-recongnition'
    | '/main/test/exams/submit'
    | '/main/test/exams/submit/active'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/main'
    | '/signup'
    | '/examples/pokemon'
    | '/main/test'
    | '/submission/$examId'
    | '/examples/pokemon/$id'
    | '/submission/$examId/scan'
    | '/submission/$examId/text-recongnition'
    | '/main/test/exams/submit'
    | '/main/test/exams/submit/active'
>>>>>>> Stashed changes
  id:
    | '__root__'
    | '/'
    | '/main'
    | '/examples/pokemon'
    | '/main/'
    | '/signup/'
    | '/examples/pokemon/'
<<<<<<< Updated upstream
    | '/examples/pokemon/$id/'
=======
    | '/main/test/'
    | '/submission/$examId/'
    | '/examples/pokemon/$id/'
    | '/submission/$examId/scan/'
    | '/submission/$examId/text-recongnition/'
    | '/main/test/exams/submit/'
    | '/main/test/exams/submit/active/'
>>>>>>> Stashed changes
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MainRouteRoute: typeof MainRouteRouteWithChildren
  ExamplesPokemonRouteRoute: typeof ExamplesPokemonRouteRouteWithChildren
  SignupIndexRoute: typeof SignupIndexRoute
<<<<<<< Updated upstream
=======
  SubmissionExamIdIndexRoute: typeof SubmissionExamIdIndexRoute
  SubmissionExamIdScanIndexRoute: typeof SubmissionExamIdScanIndexRoute
  SubmissionExamIdTextRecongnitionIndexRoute: typeof SubmissionExamIdTextRecongnitionIndexRoute
>>>>>>> Stashed changes
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/main': {
      id: '/main'
      path: '/main'
      fullPath: '/main'
      preLoaderRoute: typeof MainRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/': {
      id: '/main/'
      path: '/'
      fullPath: '/main/'
      preLoaderRoute: typeof MainIndexRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/examples/pokemon': {
      id: '/examples/pokemon'
      path: '/examples/pokemon'
      fullPath: '/examples/pokemon'
      preLoaderRoute: typeof ExamplesPokemonRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
<<<<<<< Updated upstream
=======
    '/submission/$examId/': {
      id: '/submission/$examId/'
      path: '/submission/$examId'
      fullPath: '/submission/$examId'
      preLoaderRoute: typeof SubmissionExamIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/test/': {
      id: '/main/test/'
      path: '/test'
      fullPath: '/main/test'
      preLoaderRoute: typeof MainTestIndexRouteImport
      parentRoute: typeof MainRouteRoute
    }
>>>>>>> Stashed changes
    '/examples/pokemon/': {
      id: '/examples/pokemon/'
      path: '/'
      fullPath: '/examples/pokemon/'
      preLoaderRoute: typeof ExamplesPokemonIndexRouteImport
      parentRoute: typeof ExamplesPokemonRouteRoute
    }
<<<<<<< Updated upstream
=======
    '/submission/$examId/text-recongnition/': {
      id: '/submission/$examId/text-recongnition/'
      path: '/submission/$examId/text-recongnition'
      fullPath: '/submission/$examId/text-recongnition'
      preLoaderRoute: typeof SubmissionExamIdTextRecongnitionIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/submission/$examId/scan/': {
      id: '/submission/$examId/scan/'
      path: '/submission/$examId/scan'
      fullPath: '/submission/$examId/scan'
      preLoaderRoute: typeof SubmissionExamIdScanIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
>>>>>>> Stashed changes
    '/examples/pokemon/$id/': {
      id: '/examples/pokemon/$id/'
      path: '/$id'
      fullPath: '/examples/pokemon/$id'
      preLoaderRoute: typeof ExamplesPokemonIdIndexRouteImport
      parentRoute: typeof ExamplesPokemonRouteRoute
    }
  }
}

interface MainRouteRouteChildren {
  MainIndexRoute: typeof MainIndexRoute
}

const MainRouteRouteChildren: MainRouteRouteChildren = {
  MainIndexRoute: MainIndexRoute,
}

const MainRouteRouteWithChildren = MainRouteRoute._addFileChildren(
  MainRouteRouteChildren,
)

interface ExamplesPokemonRouteRouteChildren {
  ExamplesPokemonIndexRoute: typeof ExamplesPokemonIndexRoute
  ExamplesPokemonIdIndexRoute: typeof ExamplesPokemonIdIndexRoute
}

const ExamplesPokemonRouteRouteChildren: ExamplesPokemonRouteRouteChildren = {
  ExamplesPokemonIndexRoute: ExamplesPokemonIndexRoute,
  ExamplesPokemonIdIndexRoute: ExamplesPokemonIdIndexRoute,
}

const ExamplesPokemonRouteRouteWithChildren =
  ExamplesPokemonRouteRoute._addFileChildren(ExamplesPokemonRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MainRouteRoute: MainRouteRouteWithChildren,
  ExamplesPokemonRouteRoute: ExamplesPokemonRouteRouteWithChildren,
  SignupIndexRoute: SignupIndexRoute,
<<<<<<< Updated upstream
=======
  SubmissionExamIdIndexRoute: SubmissionExamIdIndexRoute,
  SubmissionExamIdScanIndexRoute: SubmissionExamIdScanIndexRoute,
  SubmissionExamIdTextRecongnitionIndexRoute:
    SubmissionExamIdTextRecongnitionIndexRoute,
>>>>>>> Stashed changes
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
