/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root";
import { Route as MainRouteRouteImport } from "./routes/main/route";
import { Route as IndexRouteImport } from "./routes/index";
import { Route as MainIndexRouteImport } from "./routes/main/index";
import { Route as SubmissionExamIdIndexRouteImport } from "./routes/submission/$examId/index";
import { Route as ExamplesPokemonIndexRouteImport } from "./routes/examples/pokemon/index";
import { Route as SubmissionExamIdTextRecongnitionIndexRouteImport } from "./routes/submission/$examId/text-recongnition/index";
import { Route as SubmissionExamIdScanIndexRouteImport } from "./routes/submission/$examId/scan/index";
import { Route as MainExamExamIdIndexRouteImport } from "./routes/main/exam/$examId/index";
import { Route as ExamplesPokemonIdIndexRouteImport } from "./routes/examples/pokemon/$id/index";
import { Route as MainExamExamIdProblemIdIndexRouteImport } from "./routes/main/exam/$examId/$problemId/index";

const MainRouteRoute = MainRouteRouteImport.update({
  id: "/main",
  path: "/main",
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any);
const MainIndexRoute = MainIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => MainRouteRoute,
} as any);
const SubmissionExamIdIndexRoute = SubmissionExamIdIndexRouteImport.update({
  id: "/submission/$examId/",
  path: "/submission/$examId/",
  getParentRoute: () => rootRouteImport,
} as any);
const ExamplesPokemonIndexRoute = ExamplesPokemonIndexRouteImport.update({
  id: "/examples/pokemon/",
  path: "/examples/pokemon/",
  getParentRoute: () => rootRouteImport,
} as any);
const SubmissionExamIdTextRecongnitionIndexRoute =
  SubmissionExamIdTextRecongnitionIndexRouteImport.update({
    id: "/submission/$examId/text-recongnition/",
    path: "/submission/$examId/text-recongnition/",
    getParentRoute: () => rootRouteImport,
  } as any);
const SubmissionExamIdScanIndexRoute =
  SubmissionExamIdScanIndexRouteImport.update({
    id: "/submission/$examId/scan/",
    path: "/submission/$examId/scan/",
    getParentRoute: () => rootRouteImport,
  } as any);
const MainExamExamIdIndexRoute = MainExamExamIdIndexRouteImport.update({
  id: "/exam/$examId/",
  path: "/exam/$examId/",
  getParentRoute: () => MainRouteRoute,
} as any);
const ExamplesPokemonIdIndexRoute = ExamplesPokemonIdIndexRouteImport.update({
  id: "/examples/pokemon/$id/",
  path: "/examples/pokemon/$id/",
  getParentRoute: () => rootRouteImport,
} as any);
const MainExamExamIdProblemIdIndexRoute =
  MainExamExamIdProblemIdIndexRouteImport.update({
    id: "/exam/$examId/$problemId/",
    path: "/exam/$examId/$problemId/",
    getParentRoute: () => MainRouteRoute,
  } as any);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/main": typeof MainRouteRouteWithChildren;
  "/main/": typeof MainIndexRoute;
  "/examples/pokemon": typeof ExamplesPokemonIndexRoute;
  "/submission/$examId": typeof SubmissionExamIdIndexRoute;
  "/examples/pokemon/$id": typeof ExamplesPokemonIdIndexRoute;
  "/main/exam/$examId": typeof MainExamExamIdIndexRoute;
  "/submission/$examId/scan": typeof SubmissionExamIdScanIndexRoute;
  "/submission/$examId/text-recongnition": typeof SubmissionExamIdTextRecongnitionIndexRoute;
  "/main/exam/$examId/$problemId": typeof MainExamExamIdProblemIdIndexRoute;
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/main": typeof MainIndexRoute;
  "/examples/pokemon": typeof ExamplesPokemonIndexRoute;
  "/submission/$examId": typeof SubmissionExamIdIndexRoute;
  "/examples/pokemon/$id": typeof ExamplesPokemonIdIndexRoute;
  "/main/exam/$examId": typeof MainExamExamIdIndexRoute;
  "/submission/$examId/scan": typeof SubmissionExamIdScanIndexRoute;
  "/submission/$examId/text-recongnition": typeof SubmissionExamIdTextRecongnitionIndexRoute;
  "/main/exam/$examId/$problemId": typeof MainExamExamIdProblemIdIndexRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/": typeof IndexRoute;
  "/main": typeof MainRouteRouteWithChildren;
  "/main/": typeof MainIndexRoute;
  "/examples/pokemon/": typeof ExamplesPokemonIndexRoute;
  "/submission/$examId/": typeof SubmissionExamIdIndexRoute;
  "/examples/pokemon/$id/": typeof ExamplesPokemonIdIndexRoute;
  "/main/exam/$examId/": typeof MainExamExamIdIndexRoute;
  "/submission/$examId/scan/": typeof SubmissionExamIdScanIndexRoute;
  "/submission/$examId/text-recongnition/": typeof SubmissionExamIdTextRecongnitionIndexRoute;
  "/main/exam/$examId/$problemId/": typeof MainExamExamIdProblemIdIndexRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/main"
    | "/main/"
    | "/examples/pokemon"
    | "/submission/$examId"
    | "/examples/pokemon/$id"
    | "/main/exam/$examId"
    | "/submission/$examId/scan"
    | "/submission/$examId/text-recongnition"
    | "/main/exam/$examId/$problemId";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | "/main"
    | "/examples/pokemon"
    | "/submission/$examId"
    | "/examples/pokemon/$id"
    | "/main/exam/$examId"
    | "/submission/$examId/scan"
    | "/submission/$examId/text-recongnition"
    | "/main/exam/$examId/$problemId";
  id:
    | "__root__"
    | "/"
    | "/main"
    | "/main/"
    | "/examples/pokemon/"
    | "/submission/$examId/"
    | "/examples/pokemon/$id/"
    | "/main/exam/$examId/"
    | "/submission/$examId/scan/"
    | "/submission/$examId/text-recongnition/"
    | "/main/exam/$examId/$problemId/";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  MainRouteRoute: typeof MainRouteRouteWithChildren;
  ExamplesPokemonIndexRoute: typeof ExamplesPokemonIndexRoute;
  SubmissionExamIdIndexRoute: typeof SubmissionExamIdIndexRoute;
  ExamplesPokemonIdIndexRoute: typeof ExamplesPokemonIdIndexRoute;
  SubmissionExamIdScanIndexRoute: typeof SubmissionExamIdScanIndexRoute;
  SubmissionExamIdTextRecongnitionIndexRoute: typeof SubmissionExamIdTextRecongnitionIndexRoute;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/main": {
      id: "/main";
      path: "/main";
      fullPath: "/main";
      preLoaderRoute: typeof MainRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/main/": {
      id: "/main/";
      path: "/";
      fullPath: "/main/";
      preLoaderRoute: typeof MainIndexRouteImport;
      parentRoute: typeof MainRouteRoute;
    };
    "/submission/$examId/": {
      id: "/submission/$examId/";
      path: "/submission/$examId";
      fullPath: "/submission/$examId";
      preLoaderRoute: typeof SubmissionExamIdIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/examples/pokemon/": {
      id: "/examples/pokemon/";
      path: "/examples/pokemon";
      fullPath: "/examples/pokemon";
      preLoaderRoute: typeof ExamplesPokemonIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/submission/$examId/text-recongnition/": {
      id: "/submission/$examId/text-recongnition/";
      path: "/submission/$examId/text-recongnition";
      fullPath: "/submission/$examId/text-recongnition";
      preLoaderRoute: typeof SubmissionExamIdTextRecongnitionIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/submission/$examId/scan/": {
      id: "/submission/$examId/scan/";
      path: "/submission/$examId/scan";
      fullPath: "/submission/$examId/scan";
      preLoaderRoute: typeof SubmissionExamIdScanIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/main/exam/$examId/": {
      id: "/main/exam/$examId/";
      path: "/exam/$examId";
      fullPath: "/main/exam/$examId";
      preLoaderRoute: typeof MainExamExamIdIndexRouteImport;
      parentRoute: typeof MainRouteRoute;
    };
    "/examples/pokemon/$id/": {
      id: "/examples/pokemon/$id/";
      path: "/examples/pokemon/$id";
      fullPath: "/examples/pokemon/$id";
      preLoaderRoute: typeof ExamplesPokemonIdIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/main/exam/$examId/$problemId/": {
      id: "/main/exam/$examId/$problemId/";
      path: "/exam/$examId/$problemId";
      fullPath: "/main/exam/$examId/$problemId";
      preLoaderRoute: typeof MainExamExamIdProblemIdIndexRouteImport;
      parentRoute: typeof MainRouteRoute;
    };
  }
}

interface MainRouteRouteChildren {
  MainIndexRoute: typeof MainIndexRoute;
  MainExamExamIdIndexRoute: typeof MainExamExamIdIndexRoute;
  MainExamExamIdProblemIdIndexRoute: typeof MainExamExamIdProblemIdIndexRoute;
}

const MainRouteRouteChildren: MainRouteRouteChildren = {
  MainIndexRoute: MainIndexRoute,
  MainExamExamIdIndexRoute: MainExamExamIdIndexRoute,
  MainExamExamIdProblemIdIndexRoute: MainExamExamIdProblemIdIndexRoute,
};

const MainRouteRouteWithChildren = MainRouteRoute._addFileChildren(
  MainRouteRouteChildren,
);

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MainRouteRoute: MainRouteRouteWithChildren,
  ExamplesPokemonIndexRoute: ExamplesPokemonIndexRoute,
  SubmissionExamIdIndexRoute: SubmissionExamIdIndexRoute,
  ExamplesPokemonIdIndexRoute: ExamplesPokemonIdIndexRoute,
  SubmissionExamIdScanIndexRoute: SubmissionExamIdScanIndexRoute,
  SubmissionExamIdTextRecongnitionIndexRoute:
    SubmissionExamIdTextRecongnitionIndexRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
